{
  "contractName": "Prescriptions",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "prescriptions_patient",
      "outputs": [
        {
          "internalType": "address",
          "name": "physician",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "patient",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "medicine_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "medicine_amount",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "prescriptions_physician",
      "outputs": [
        {
          "internalType": "address",
          "name": "physician",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "patient",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "medicine_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "medicine_amount",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "verifying_institution",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "smart_contract_key",
          "type": "address"
        }
      ],
      "name": "establishConnectionToUserSmartContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "physician",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "patient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "medicine_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "medicine_amount",
              "type": "string"
            }
          ],
          "internalType": "struct Prescriptions.Prescription",
          "name": "prescription_",
          "type": "tuple"
        }
      ],
      "name": "newPrescription",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "public_key",
          "type": "address"
        }
      ],
      "name": "getPrescriptions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "physician",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "patient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "medicine_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "medicine_amount",
              "type": "string"
            }
          ],
          "internalType": "struct Prescriptions.Prescription[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"smart_contract_key\",\"type\":\"address\"}],\"name\":\"establishConnectionToUserSmartContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"public_key\",\"type\":\"address\"}],\"name\":\"getPrescriptions\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"physician\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"medicine_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"medicine_amount\",\"type\":\"string\"}],\"internalType\":\"struct Prescriptions.Prescription[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"physician\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"medicine_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"medicine_amount\",\"type\":\"string\"}],\"internalType\":\"struct Prescriptions.Prescription\",\"name\":\"prescription_\",\"type\":\"tuple\"}],\"name\":\"newPrescription\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prescriptions_patient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"physician\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"medicine_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"medicine_amount\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prescriptions_physician\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"physician\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"medicine_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"medicine_amount\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"verifying_institution\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/Prescriptions.sol\":\"Prescriptions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/Prescriptions.sol\":{\"keccak256\":\"0x8f3c1c676c1693332745ceb3749b78346a891b65245147340fe77650b27881bd\",\"urls\":[\"bzz-raw://ffa7f0333773d2132348690987cb1dcf4c7a55f4b0c8602d457b1997e8040d53\",\"dweb:/ipfs/QmbHVQsC9oGV38r12iZymEwrAQiK9XAD8QcaP3UBcPepyu\"]},\"/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/User.sol\":{\"keccak256\":\"0x77e7c68c5b3a25f3364be93750d8767a450afcc924335294a6592dc426a2c16c\",\"urls\":[\"bzz-raw://89c4049bc98ee02f9238143a1ee7458dc028313a9017f0f3429900607f2d7c03\",\"dweb:/ipfs/QmNVTNPSEWZ3ixnSvB9zgHCsBDKquuesfapTRuJRs25Bzd\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611480806100606000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063295a0a3814610067578063582454ca1461009a57806381eceeb7146100cd578063a6127293146100eb578063f8f3f38214610107578063fb2d5c7314610137575b600080fd5b610081600480360361007c9190810190610dcd565b610153565b6040516100919493929190611193565b60405180910390f35b6100b460048036036100af9190810190610dcd565b61030d565b6040516100c49493929190611193565b60405180910390f35b6100d56104c7565b6040516100e2919061115d565b60405180910390f35b61010560048036036101009190810190610da4565b6104ec565b005b610121600480360361011c9190810190610da4565b6105bf565b60405161012e91906111e6565b60405180910390f35b610151600480360361014c9190810190610e32565b61084d565b005b6002602052816000526040600020818154811061016c57fe5b9060005260206000209060040201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102655780601f1061023a57610100808354040283529160200191610265565b820191906000526020600020905b81548152906001019060200180831161024857829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103035780601f106102d857610100808354040283529160200191610303565b820191906000526020600020905b8154815290600101906020018083116102e657829003601f168201915b5050505050905084565b6003602052816000526040600020818154811061032657fe5b9060005260206000209060040201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561041f5780601f106103f45761010080835404028352916020019161041f565b820191906000526020600020905b81548152906001019060200180831161040257829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104bd5780601f10610492576101008083540402835291602001916104bd565b820191906000526020600020905b8154815290600101906020018083116104a057829003601f168201915b5050505050905084565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461057b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290611208565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561084257838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107885780601f1061075d57610100808354040283529160200191610788565b820191906000526020600020905b81548152906001019060200180831161076b57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561082a5780601f106107ff5761010080835404028352916020019161082a565b820191906000526020600020905b81548152906001019060200180831161080d57829003601f168201915b50505050508152505081526020019060010190610620565b505050509050919050565b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c2b85314336040518263ffffffff1660e01b81526004016108ac9190611178565b60206040518083038186803b1580156108c457600080fd5b505afa1580156108d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108fc9190810190610e09565b15151461093e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093590611248565b60405180910390fd5b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327b52abc83602001516040518263ffffffff1660e01b81526004016109a1919061115d565b60206040518083038186803b1580156109b957600080fd5b505afa1580156109cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109f19190810190610e09565b151514610a33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2a90611228565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015173ffffffffffffffffffffffffffffffffffffffff1681526020018360400151815260200183606001518152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190610ba4929190610bc8565b506060820151816003019080519060200190610bc1929190610bc8565b5050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c0957805160ff1916838001178555610c37565b82800160010185558215610c37579182015b82811115610c36578251825591602001919060010190610c1b565b5b509050610c449190610c48565b5090565b610c6a91905b80821115610c66576000816000905550600101610c4e565b5090565b90565b600081359050610c7c816113f8565b92915050565b600081519050610c918161140f565b92915050565b600082601f830112610ca857600080fd5b8135610cbb610cb682611295565b611268565b91508082526020830160208301858383011115610cd757600080fd5b610ce28382846113a5565b50505092915050565b600060808284031215610cfd57600080fd5b610d076080611268565b90506000610d1784828501610c6d565b6000830152506020610d2b84828501610c6d565b602083015250604082013567ffffffffffffffff811115610d4b57600080fd5b610d5784828501610c97565b604083015250606082013567ffffffffffffffff811115610d7757600080fd5b610d8384828501610c97565b60608301525092915050565b600081359050610d9e81611426565b92915050565b600060208284031215610db657600080fd5b6000610dc484828501610c6d565b91505092915050565b60008060408385031215610de057600080fd5b6000610dee85828601610c6d565b9250506020610dff85828601610d8f565b9150509250929050565b600060208284031215610e1b57600080fd5b6000610e2984828501610c82565b91505092915050565b600060208284031215610e4457600080fd5b600082013567ffffffffffffffff811115610e5e57600080fd5b610e6a84828501610ceb565b91505092915050565b6000610e7f83836110f3565b905092915050565b610e908161136f565b82525050565b610e9f81611327565b82525050565b610eae81611327565b82525050565b6000610ebf826112d1565b610ec981856112f4565b935083602082028501610edb856112c1565b8060005b85811015610f175784840389528151610ef88582610e73565b9450610f03836112e7565b925060208a01995050600181019050610edf565b50829750879550505050505092915050565b6000610f34826112dc565b610f3e8185611305565b9350610f4e8185602086016113b4565b610f57816113e7565b840191505092915050565b6000610f6d826112dc565b610f778185611316565b9350610f878185602086016113b4565b610f90816113e7565b840191505092915050565b6000610fa8604a83611316565b91507f4f6e6c79207468652076657269667920696e737469747574696f6e206861732060008301527f74686520726967687420746f20636f6e6e65637420707265736372697074696f60208301527f6e20746f207573657221000000000000000000000000000000000000000000006040830152606082019050919050565b6000611034602b83611316565b91507f546869732070617469656e74206973206e6f742072656769737465726564206f60008301527f72207665726966696564210000000000000000000000000000000000000000006020830152604082019050919050565b600061109a603283611316565b91507f596f7520646f6e277420686176652074686520726967687420746f206372656160008301527f7465206120707265736372697074696f6e2100000000000000000000000000006020830152604082019050919050565b600060808301600083015161110b6000860182610e96565b50602083015161111e6020860182610e96565b50604083015184820360408601526111368282610f29565b915050606083015184820360608601526111508282610f29565b9150508091505092915050565b60006020820190506111726000830184610ea5565b92915050565b600060208201905061118d6000830184610e87565b92915050565b60006080820190506111a86000830187610ea5565b6111b56020830186610ea5565b81810360408301526111c78185610f62565b905081810360608301526111db8184610f62565b905095945050505050565b600060208201905081810360008301526112008184610eb4565b905092915050565b6000602082019050818103600083015261122181610f9b565b9050919050565b6000602082019050818103600083015261124181611027565b9050919050565b600060208201905081810360008301526112618161108d565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171561128b57600080fd5b8060405250919050565b600067ffffffffffffffff8211156112ac57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061133282611345565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061137a82611381565b9050919050565b600061138c82611393565b9050919050565b600061139e82611345565b9050919050565b82818337600083830152505050565b60005b838110156113d25780820151818401526020810190506113b7565b838111156113e1576000848401525b50505050565b6000601f19601f8301169050919050565b61140181611327565b811461140c57600080fd5b50565b61141881611339565b811461142357600080fd5b50565b61142f81611365565b811461143a57600080fd5b5056fea365627a7a723158203649e9861ce4262ddb0ed33b7a645e7c4a96906177d2bc6fa61ba5e9627786636c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063295a0a3814610067578063582454ca1461009a57806381eceeb7146100cd578063a6127293146100eb578063f8f3f38214610107578063fb2d5c7314610137575b600080fd5b610081600480360361007c9190810190610dcd565b610153565b6040516100919493929190611193565b60405180910390f35b6100b460048036036100af9190810190610dcd565b61030d565b6040516100c49493929190611193565b60405180910390f35b6100d56104c7565b6040516100e2919061115d565b60405180910390f35b61010560048036036101009190810190610da4565b6104ec565b005b610121600480360361011c9190810190610da4565b6105bf565b60405161012e91906111e6565b60405180910390f35b610151600480360361014c9190810190610e32565b61084d565b005b6002602052816000526040600020818154811061016c57fe5b9060005260206000209060040201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102655780601f1061023a57610100808354040283529160200191610265565b820191906000526020600020905b81548152906001019060200180831161024857829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103035780601f106102d857610100808354040283529160200191610303565b820191906000526020600020905b8154815290600101906020018083116102e657829003601f168201915b5050505050905084565b6003602052816000526040600020818154811061032657fe5b9060005260206000209060040201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561041f5780601f106103f45761010080835404028352916020019161041f565b820191906000526020600020905b81548152906001019060200180831161040257829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104bd5780601f10610492576101008083540402835291602001916104bd565b820191906000526020600020905b8154815290600101906020018083116104a057829003601f168201915b5050505050905084565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461057b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290611208565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561084257838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107885780601f1061075d57610100808354040283529160200191610788565b820191906000526020600020905b81548152906001019060200180831161076b57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561082a5780601f106107ff5761010080835404028352916020019161082a565b820191906000526020600020905b81548152906001019060200180831161080d57829003601f168201915b50505050508152505081526020019060010190610620565b505050509050919050565b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c2b85314336040518263ffffffff1660e01b81526004016108ac9190611178565b60206040518083038186803b1580156108c457600080fd5b505afa1580156108d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108fc9190810190610e09565b15151461093e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093590611248565b60405180910390fd5b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327b52abc83602001516040518263ffffffff1660e01b81526004016109a1919061115d565b60206040518083038186803b1580156109b957600080fd5b505afa1580156109cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109f19190810190610e09565b151514610a33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2a90611228565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015173ffffffffffffffffffffffffffffffffffffffff1681526020018360400151815260200183606001518152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190610ba4929190610bc8565b506060820151816003019080519060200190610bc1929190610bc8565b5050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c0957805160ff1916838001178555610c37565b82800160010185558215610c37579182015b82811115610c36578251825591602001919060010190610c1b565b5b509050610c449190610c48565b5090565b610c6a91905b80821115610c66576000816000905550600101610c4e565b5090565b90565b600081359050610c7c816113f8565b92915050565b600081519050610c918161140f565b92915050565b600082601f830112610ca857600080fd5b8135610cbb610cb682611295565b611268565b91508082526020830160208301858383011115610cd757600080fd5b610ce28382846113a5565b50505092915050565b600060808284031215610cfd57600080fd5b610d076080611268565b90506000610d1784828501610c6d565b6000830152506020610d2b84828501610c6d565b602083015250604082013567ffffffffffffffff811115610d4b57600080fd5b610d5784828501610c97565b604083015250606082013567ffffffffffffffff811115610d7757600080fd5b610d8384828501610c97565b60608301525092915050565b600081359050610d9e81611426565b92915050565b600060208284031215610db657600080fd5b6000610dc484828501610c6d565b91505092915050565b60008060408385031215610de057600080fd5b6000610dee85828601610c6d565b9250506020610dff85828601610d8f565b9150509250929050565b600060208284031215610e1b57600080fd5b6000610e2984828501610c82565b91505092915050565b600060208284031215610e4457600080fd5b600082013567ffffffffffffffff811115610e5e57600080fd5b610e6a84828501610ceb565b91505092915050565b6000610e7f83836110f3565b905092915050565b610e908161136f565b82525050565b610e9f81611327565b82525050565b610eae81611327565b82525050565b6000610ebf826112d1565b610ec981856112f4565b935083602082028501610edb856112c1565b8060005b85811015610f175784840389528151610ef88582610e73565b9450610f03836112e7565b925060208a01995050600181019050610edf565b50829750879550505050505092915050565b6000610f34826112dc565b610f3e8185611305565b9350610f4e8185602086016113b4565b610f57816113e7565b840191505092915050565b6000610f6d826112dc565b610f778185611316565b9350610f878185602086016113b4565b610f90816113e7565b840191505092915050565b6000610fa8604a83611316565b91507f4f6e6c79207468652076657269667920696e737469747574696f6e206861732060008301527f74686520726967687420746f20636f6e6e65637420707265736372697074696f60208301527f6e20746f207573657221000000000000000000000000000000000000000000006040830152606082019050919050565b6000611034602b83611316565b91507f546869732070617469656e74206973206e6f742072656769737465726564206f60008301527f72207665726966696564210000000000000000000000000000000000000000006020830152604082019050919050565b600061109a603283611316565b91507f596f7520646f6e277420686176652074686520726967687420746f206372656160008301527f7465206120707265736372697074696f6e2100000000000000000000000000006020830152604082019050919050565b600060808301600083015161110b6000860182610e96565b50602083015161111e6020860182610e96565b50604083015184820360408601526111368282610f29565b915050606083015184820360608601526111508282610f29565b9150508091505092915050565b60006020820190506111726000830184610ea5565b92915050565b600060208201905061118d6000830184610e87565b92915050565b60006080820190506111a86000830187610ea5565b6111b56020830186610ea5565b81810360408301526111c78185610f62565b905081810360608301526111db8184610f62565b905095945050505050565b600060208201905081810360008301526112008184610eb4565b905092915050565b6000602082019050818103600083015261122181610f9b565b9050919050565b6000602082019050818103600083015261124181611027565b9050919050565b600060208201905081810360008301526112618161108d565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171561128b57600080fd5b8060405250919050565b600067ffffffffffffffff8211156112ac57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061133282611345565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061137a82611381565b9050919050565b600061138c82611393565b9050919050565b600061139e82611345565b9050919050565b82818337600083830152505050565b60005b838110156113d25780820151818401526020810190506113b7565b838111156113e1576000848401525b50505050565b6000601f19601f8301169050919050565b61140181611327565b811461140c57600080fd5b50565b61141881611339565b811461142357600080fd5b50565b61142f81611365565b811461143a57600080fd5b5056fea365627a7a723158203649e9861ce4262ddb0ed33b7a645e7c4a96906177d2bc6fa61ba5e9627786636c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "122:1477:1:-;;;217:73;8:9:-1;5:2;;;30:1;27;20:12;5:2;217:73:1;273:10;249:21;;:34;;;;;;;;;;;;;;;;;;122:1477;;;;;;",
  "deployedSourceMap": "122:1477:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;122:1477:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;510:65;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;581:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;151:36;;;:::i;:::-;;;;;;;;;;;;;;;;655:271;;;;;;;;;;;;;;;;:::i;:::-;;1449:148;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;932:511;;;;;;;;;;;;;;;;:::i;:::-;;510:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;581:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;151:36::-;;;;;;;;;;;;;:::o;655:271::-;770:21;;;;;;;;;;;756:35;;:10;:35;;;748:122;;;;;;;;;;;;;;;;;;;;;;900:18;880:12;;:39;;;;;;;;;;;;;;;;;;655:271;:::o;1449:148::-;1516:21;1555:23;:35;1579:10;1555:35;;;;;;;;;;;;;;;1548:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1449:148;;;:::o;932:511::-;1071:4;1016:59;;:12;;;;;;;;;;;:39;;;1056:10;1016:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1016:51:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1016:51:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1016:51:1;;;;;;;;;:59;;;1008:122;;;;;;;;;;;;;;;;;;;;;;1212:4;1148:68;;:12;;;;;;;;;;;:37;;;1186:13;:21;;;1148:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1148:60:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1148:60:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1148:60:1;;;;;;;;;:68;;;1140:124;;;;;;;;;;;;;;;;;;;;;;1274:23;:35;1298:10;1274:35;;;;;;;;;;;;;;;1315:120;;;;;;;;1328:13;:23;;;1315:120;;;;;;1353:13;:21;;;1315:120;;;;;;1376:13;:27;;;1315:120;;;;1405:13;:29;;;1315:120;;;1274:162;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1274:162:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;932:511;:::o;122:1477::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:128;;223:6;217:13;208:22;;235:30;259:5;235:30;;;202:68;;;;;278:434;;376:3;369:4;361:6;357:17;353:27;343:2;;394:1;391;384:12;343:2;431:6;418:20;453:61;468:45;506:6;468:45;;;453:61;;;444:70;;534:6;527:5;520:21;570:4;562:6;558:17;603:4;596:5;592:16;638:3;629:6;624:3;620:16;617:25;614:2;;;655:1;652;645:12;614:2;665:41;699:6;694:3;689;665:41;;;336:376;;;;;;;;760:970;;877:4;865:9;860:3;856:19;852:30;849:2;;;895:1;892;885:12;849:2;913:20;928:4;913:20;;;904:29;;988:1;1020:49;1065:3;1056:6;1045:9;1041:22;1020:49;;;1013:4;1006:5;1002:16;995:75;943:138;1134:2;1167:49;1212:3;1203:6;1192:9;1188:22;1167:49;;;1160:4;1153:5;1149:16;1142:75;1091:137;1315:2;1304:9;1300:18;1287:32;1339:18;1331:6;1328:30;1325:2;;;1371:1;1368;1361:12;1325:2;1406:55;1457:3;1448:6;1437:9;1433:22;1406:55;;;1399:4;1392:5;1388:16;1381:81;1238:235;1562:2;1551:9;1547:18;1534:32;1586:18;1578:6;1575:30;1572:2;;;1618:1;1615;1608:12;1572:2;1653:55;1704:3;1695:6;1684:9;1680:22;1653:55;;;1646:4;1639:5;1635:16;1628:81;1483:237;843:887;;;;;1737:130;;1817:6;1804:20;1795:29;;1829:33;1856:5;1829:33;;;1789:78;;;;;1874:241;;1978:2;1966:9;1957:7;1953:23;1949:32;1946:2;;;1994:1;1991;1984:12;1946:2;2029:1;2046:53;2091:7;2082:6;2071:9;2067:22;2046:53;;;2036:63;;2008:97;1940:175;;;;;2122:366;;;2243:2;2231:9;2222:7;2218:23;2214:32;2211:2;;;2259:1;2256;2249:12;2211:2;2294:1;2311:53;2356:7;2347:6;2336:9;2332:22;2311:53;;;2301:63;;2273:97;2401:2;2419:53;2464:7;2455:6;2444:9;2440:22;2419:53;;;2409:63;;2380:98;2205:283;;;;;;2495:257;;2607:2;2595:9;2586:7;2582:23;2578:32;2575:2;;;2623:1;2620;2613:12;2575:2;2658:1;2675:61;2728:7;2719:6;2708:9;2704:22;2675:61;;;2665:71;;2637:105;2569:183;;;;;2759:383;;2891:2;2879:9;2870:7;2866:23;2862:32;2859:2;;;2907:1;2904;2897:12;2859:2;2970:1;2959:9;2955:17;2942:31;2993:18;2985:6;2982:30;2979:2;;;3025:1;3022;3015:12;2979:2;3045:81;3118:7;3109:6;3098:9;3094:22;3045:81;;;3035:91;;2921:211;2853:289;;;;;3150:253;;3299:98;3393:3;3385:6;3299:98;;;3285:112;;3278:125;;;;;3411:142;3502:45;3541:5;3502:45;;;3497:3;3490:58;3484:69;;;3560:103;3633:24;3651:5;3633:24;;;3628:3;3621:37;3615:48;;;3670:113;3753:24;3771:5;3753:24;;;3748:3;3741:37;3735:48;;;3873:1040;;4066:78;4138:5;4066:78;;;4157:110;4260:6;4255:3;4157:110;;;4150:117;;4290:3;4332:4;4324:6;4320:17;4315:3;4311:27;4359:80;4433:5;4359:80;;;4459:7;4487:1;4472:402;4497:6;4494:1;4491:13;4472:402;;;4559:9;4553:4;4549:20;4544:3;4537:33;4604:6;4598:13;4626:112;4733:4;4718:13;4626:112;;;4618:120;;4755:84;4832:6;4755:84;;;4745:94;;4862:4;4857:3;4853:14;4846:21;;4529:345;4519:1;4516;4512:9;4507:14;;4472:402;;;4476:14;4887:4;4880:11;;4904:3;4897:10;;4045:868;;;;;;;;;;4921:319;;5019:35;5048:5;5019:35;;;5066:61;5120:6;5115:3;5066:61;;;5059:68;;5132:52;5177:6;5172:3;5165:4;5158:5;5154:16;5132:52;;;5205:29;5227:6;5205:29;;;5200:3;5196:39;5189:46;;4999:241;;;;;;5247:339;;5355:35;5384:5;5355:35;;;5402:71;5466:6;5461:3;5402:71;;;5395:78;;5478:52;5523:6;5518:3;5511:4;5504:5;5500:16;5478:52;;;5551:29;5573:6;5551:29;;;5546:3;5542:39;5535:46;;5335:251;;;;;;5594:448;;5754:67;5818:2;5813:3;5754:67;;;5747:74;;5854:34;5850:1;5845:3;5841:11;5834:55;5923:34;5918:2;5913:3;5909:12;5902:56;5992:12;5987:2;5982:3;5978:12;5971:34;6033:2;6028:3;6024:12;6017:19;;5740:302;;;;6051:380;;6211:67;6275:2;6270:3;6211:67;;;6204:74;;6311:34;6307:1;6302:3;6298:11;6291:55;6380:13;6375:2;6370:3;6366:12;6359:35;6422:2;6417:3;6413:12;6406:19;;6197:234;;;;6440:387;;6600:67;6664:2;6659:3;6600:67;;;6593:74;;6700:34;6696:1;6691:3;6687:11;6680:55;6769:20;6764:2;6759:3;6755:12;6748:42;6818:2;6813:3;6809:12;6802:19;;6586:241;;;;6912:967;;7055:4;7050:3;7046:14;7143:4;7136:5;7132:16;7126:23;7155:63;7212:4;7207:3;7203:14;7189:12;7155:63;;;7075:149;7300:4;7293:5;7289:16;7283:23;7312:63;7369:4;7364:3;7360:14;7346:12;7312:63;;;7234:147;7463:4;7456:5;7452:16;7446:23;7515:3;7509:4;7505:14;7498:4;7493:3;7489:14;7482:38;7535:69;7599:4;7585:12;7535:69;;;7527:77;;7391:225;7700:4;7693:5;7689:16;7683:23;7752:3;7746:4;7742:14;7735:4;7730:3;7726:14;7719:38;7772:69;7836:4;7822:12;7772:69;;;7764:77;;7626:227;7870:4;7863:11;;7028:851;;;;;;7886:213;;8004:2;7993:9;7989:18;7981:26;;8018:71;8086:1;8075:9;8071:17;8062:6;8018:71;;;7975:124;;;;;8106:229;;8232:2;8221:9;8217:18;8209:26;;8246:79;8322:1;8311:9;8307:17;8298:6;8246:79;;;8203:132;;;;;8342:707;;8576:3;8565:9;8561:19;8553:27;;8591:71;8659:1;8648:9;8644:17;8635:6;8591:71;;;8673:72;8741:2;8730:9;8726:18;8717:6;8673:72;;;8793:9;8787:4;8783:20;8778:2;8767:9;8763:18;8756:48;8818:74;8887:4;8878:6;8818:74;;;8810:82;;8940:9;8934:4;8930:20;8925:2;8914:9;8910:18;8903:48;8965:74;9034:4;9025:6;8965:74;;;8957:82;;8547:502;;;;;;;;9056:457;;9272:2;9261:9;9257:18;9249:26;;9322:9;9316:4;9312:20;9308:1;9297:9;9293:17;9286:47;9347:156;9498:4;9489:6;9347:156;;;9339:164;;9243:270;;;;;9520:407;;9711:2;9700:9;9696:18;9688:26;;9761:9;9755:4;9751:20;9747:1;9736:9;9732:17;9725:47;9786:131;9912:4;9786:131;;;9778:139;;9682:245;;;;9934:407;;10125:2;10114:9;10110:18;10102:26;;10175:9;10169:4;10165:20;10161:1;10150:9;10146:17;10139:47;10200:131;10326:4;10200:131;;;10192:139;;10096:245;;;;10348:407;;10539:2;10528:9;10524:18;10516:26;;10589:9;10583:4;10579:20;10575:1;10564:9;10560:17;10553:47;10614:131;10740:4;10614:131;;;10606:139;;10510:245;;;;10762:256;;10824:2;10818:9;10808:19;;10862:4;10854:6;10850:17;10961:6;10949:10;10946:22;10925:18;10913:10;10910:34;10907:62;10904:2;;;10982:1;10979;10972:12;10904:2;11002:10;10998:2;10991:22;10802:216;;;;;11025:318;;11165:18;11157:6;11154:30;11151:2;;;11197:1;11194;11187:12;11151:2;11264:4;11260:9;11253:4;11245:6;11241:17;11237:33;11229:41;;11328:4;11322;11318:15;11310:23;;11088:255;;;;11350:175;;11460:3;11452:11;;11498:4;11493:3;11489:14;11481:22;;11446:79;;;;11532:161;;11665:5;11659:12;11649:22;;11630:63;;;;11700:118;;11790:5;11784:12;11774:22;;11755:63;;;;11825:132;;11947:4;11942:3;11938:14;11930:22;;11924:33;;;;11965:202;;12119:6;12114:3;12107:19;12156:4;12151:3;12147:14;12132:29;;12100:67;;;;;12176:153;;12281:6;12276:3;12269:19;12318:4;12313:3;12309:14;12294:29;;12262:67;;;;;12338:163;;12453:6;12448:3;12441:19;12490:4;12485:3;12481:14;12466:29;;12434:67;;;;;12509:91;;12571:24;12589:5;12571:24;;;12560:35;;12554:46;;;;12607:85;;12680:5;12673:13;12666:21;12655:32;;12649:43;;;;12699:121;;12772:42;12765:5;12761:54;12750:65;;12744:76;;;;12827:72;;12889:5;12878:16;;12872:27;;;;12906:129;;12993:37;13024:5;12993:37;;;12980:50;;12974:61;;;;13042:121;;13121:37;13152:5;13121:37;;;13108:50;;13102:61;;;;13170:108;;13249:24;13267:5;13249:24;;;13236:37;;13230:48;;;;13286:145;13367:6;13362:3;13357;13344:30;13423:1;13414:6;13409:3;13405:16;13398:27;13337:94;;;;13440:268;13505:1;13512:101;13526:6;13523:1;13520:13;13512:101;;;13602:1;13597:3;13593:11;13587:18;13583:1;13578:3;13574:11;13567:39;13548:2;13545:1;13541:10;13536:15;;13512:101;;;13628:6;13625:1;13622:13;13619:2;;;13693:1;13684:6;13679:3;13675:16;13668:27;13619:2;13489:219;;;;;13716:97;;13804:2;13800:7;13795:2;13788:5;13784:14;13780:28;13770:38;;13764:49;;;;13821:117;13890:24;13908:5;13890:24;;;13883:5;13880:35;13870:2;;13929:1;13926;13919:12;13870:2;13864:74;;13945:111;14011:21;14026:5;14011:21;;;14004:5;14001:32;13991:2;;14047:1;14044;14037:12;13991:2;13985:71;;14063:117;14132:24;14150:5;14132:24;;;14125:5;14122:35;14112:2;;14171:1;14168;14161:12;14112:2;14106:74;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.21 <0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"./User.sol\";\n\ncontract Prescriptions {\n    address public verifying_institution;\n    User UserContract;\n\n    constructor () public {\n        verifying_institution = msg.sender;\n    }\n\n    struct Prescription {\n        address physician;\n        address patient;\n\n        string medicine_name;\n        string medicine_amount;\n\n        // bool charges_free;\n        // bool charges_mandatory;\n    }\n\n    mapping(address => Prescription[]) public prescriptions_physician;\n    mapping(address => Prescription[]) public prescriptions_patient;\n    \n    function establishConnectionToUserSmartContract(address smart_contract_key) public {\n        require(msg.sender == verifying_institution, \"Only the verify institution has the right to connect prescription to user!\");\n        UserContract = User(smart_contract_key);\n    }\n\n    function newPrescription(Prescription memory prescription_) public{\n        require(UserContract.checkPhysicianVerification(msg.sender) == true, \"You don't have the right to create a prescription!\");\n        require(UserContract.checkInsuredVerification(prescription_.patient) == true, \"This patient is not registered or verified!\");\n        prescriptions_physician[msg.sender].push(Prescription(prescription_.physician, prescription_.patient, prescription_.medicine_name, prescription_.medicine_amount));\n    }\n\n    function getPrescriptions(address public_key) public view returns (Prescription[] memory){\n        return prescriptions_physician[public_key];\n    }\n}\n",
  "sourcePath": "/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/Prescriptions.sol",
  "ast": {
    "absolutePath": "/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/Prescriptions.sol",
    "exportedSymbols": {
      "Prescriptions": [
        151
      ]
    },
    "id": 152,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:1"
      },
      {
        "id": 39,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "65:33:1"
      },
      {
        "absolutePath": "/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/User.sol",
        "file": "./User.sol",
        "id": 40,
        "nodeType": "ImportDirective",
        "scope": 152,
        "sourceUnit": 457,
        "src": "100:20:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 151,
        "linearizedBaseContracts": [
          151
        ],
        "name": "Prescriptions",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 42,
            "name": "verifying_institution",
            "nodeType": "VariableDeclaration",
            "scope": 151,
            "src": "151:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 41,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "151:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 44,
            "name": "UserContract",
            "nodeType": "VariableDeclaration",
            "scope": 151,
            "src": "193:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_User_$456",
              "typeString": "contract User"
            },
            "typeName": {
              "contractScope": null,
              "id": 43,
              "name": "User",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 456,
              "src": "193:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_User_$456",
                "typeString": "contract User"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "239:51:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 47,
                      "name": "verifying_institution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "249:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 48,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 471,
                        "src": "273:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "273:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "249:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "249:34:1"
                }
              ]
            },
            "documentation": null,
            "id": 53,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:1"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:0:1"
            },
            "scope": 151,
            "src": "217:73:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Prescriptions.Prescription",
            "id": 62,
            "members": [
              {
                "constant": false,
                "id": 55,
                "name": "physician",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "326:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 54,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "326:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "name": "patient",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "353:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 56,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "353:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "name": "medicine_name",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "379:20:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 58,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "379:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "name": "medicine_amount",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "409:22:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 60,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "409:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Prescription",
            "nodeType": "StructDefinition",
            "scope": 151,
            "src": "296:208:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 67,
            "name": "prescriptions_physician",
            "nodeType": "VariableDeclaration",
            "scope": 151,
            "src": "510:65:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Prescriptions.Prescription[])"
            },
            "typeName": {
              "id": 66,
              "keyType": {
                "id": 63,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "518:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "510:34:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Prescriptions.Prescription[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 64,
                  "name": "Prescription",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 62,
                  "src": "529:12:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Prescription_$62_storage_ptr",
                    "typeString": "struct Prescriptions.Prescription"
                  }
                },
                "id": 65,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "529:14:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_ptr",
                  "typeString": "struct Prescriptions.Prescription[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 72,
            "name": "prescriptions_patient",
            "nodeType": "VariableDeclaration",
            "scope": 151,
            "src": "581:63:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Prescriptions.Prescription[])"
            },
            "typeName": {
              "id": 71,
              "keyType": {
                "id": 68,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "589:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "581:34:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Prescriptions.Prescription[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 69,
                  "name": "Prescription",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 62,
                  "src": "600:12:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Prescription_$62_storage_ptr",
                    "typeString": "struct Prescriptions.Prescription"
                  }
                },
                "id": 70,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "600:14:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_ptr",
                  "typeString": "struct Prescriptions.Prescription[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "738:188:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 78,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 471,
                            "src": "756:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "756:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 80,
                          "name": "verifying_institution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "770:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "756:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79207468652076657269667920696e737469747574696f6e206861732074686520726967687420746f20636f6e6e65637420707265736372697074696f6e20746f207573657221",
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "793:76:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c572522a3a88ffd25f4670a493b7a0cd229ac63cc2952d745c10df6214ad483",
                          "typeString": "literal_string \"Only the verify institution has the right to connect prescription to user!\""
                        },
                        "value": "Only the verify institution has the right to connect prescription to user!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c572522a3a88ffd25f4670a493b7a0cd229ac63cc2952d745c10df6214ad483",
                          "typeString": "literal_string \"Only the verify institution has the right to connect prescription to user!\""
                        }
                      ],
                      "id": 77,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        474,
                        475
                      ],
                      "referencedDeclaration": 475,
                      "src": "748:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "748:122:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "748:122:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 85,
                      "name": "UserContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "880:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$456",
                        "typeString": "contract User"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 87,
                          "name": "smart_contract_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "900:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 86,
                        "name": "User",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 456,
                        "src": "895:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_User_$456_$",
                          "typeString": "type(contract User)"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "895:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$456",
                        "typeString": "contract User"
                      }
                    },
                    "src": "880:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$456",
                      "typeString": "contract User"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "880:39:1"
                }
              ]
            },
            "documentation": null,
            "id": 92,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "establishConnectionToUserSmartContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "name": "smart_contract_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "703:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "703:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "702:28:1"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:0:1"
            },
            "scope": 151,
            "src": "655:271:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "998:445:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 100,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 471,
                                "src": "1056:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1056:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 98,
                              "name": "UserContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "1016:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_User_$456",
                                "typeString": "contract User"
                              }
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checkPhysicianVerification",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 455,
                            "src": "1016:39:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1016:51:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1071:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1016:59:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520646f6e277420686176652074686520726967687420746f20637265617465206120707265736372697074696f6e21",
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1077:52:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd4fa14b7b32d8d7186aef69e0838638b3bf9f6f3c0c9338aaba778405507d4a",
                          "typeString": "literal_string \"You don't have the right to create a prescription!\""
                        },
                        "value": "You don't have the right to create a prescription!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd4fa14b7b32d8d7186aef69e0838638b3bf9f6f3c0c9338aaba778405507d4a",
                          "typeString": "literal_string \"You don't have the right to create a prescription!\""
                        }
                      ],
                      "id": 97,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        474,
                        475
                      ],
                      "referencedDeclaration": 475,
                      "src": "1008:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1008:122:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:122:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 111,
                                "name": "prescription_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 94,
                                "src": "1186:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                                  "typeString": "struct Prescriptions.Prescription memory"
                                }
                              },
                              "id": 112,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "patient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 57,
                              "src": "1186:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 109,
                              "name": "UserContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "1148:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_User_$456",
                                "typeString": "contract User"
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checkInsuredVerification",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 427,
                            "src": "1148:37:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1148:60:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1212:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1148:68:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546869732070617469656e74206973206e6f742072656769737465726564206f7220766572696669656421",
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1218:45:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30892ac0d7d9977ed55659448ed491488b3dea2433338b20ac15ff2e2d256da6",
                          "typeString": "literal_string \"This patient is not registered or verified!\""
                        },
                        "value": "This patient is not registered or verified!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30892ac0d7d9977ed55659448ed491488b3dea2433338b20ac15ff2e2d256da6",
                          "typeString": "literal_string \"This patient is not registered or verified!\""
                        }
                      ],
                      "id": 108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        474,
                        475
                      ],
                      "referencedDeclaration": 475,
                      "src": "1140:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1140:124:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "1140:124:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 125,
                              "name": "prescription_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "1328:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                                "typeString": "struct Prescriptions.Prescription memory"
                              }
                            },
                            "id": 126,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "physician",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55,
                            "src": "1328:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 127,
                              "name": "prescription_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "1353:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                                "typeString": "struct Prescriptions.Prescription memory"
                              }
                            },
                            "id": 128,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "patient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57,
                            "src": "1353:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 129,
                              "name": "prescription_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "1376:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                                "typeString": "struct Prescriptions.Prescription memory"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "medicine_name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59,
                            "src": "1376:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 131,
                              "name": "prescription_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "1405:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                                "typeString": "struct Prescriptions.Prescription memory"
                              }
                            },
                            "id": 132,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "medicine_amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61,
                            "src": "1405:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 124,
                          "name": "Prescription",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1315:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Prescription_$62_storage_ptr_$",
                            "typeString": "type(struct Prescriptions.Prescription storage pointer)"
                          }
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1315:120:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prescription_$62_memory",
                          "typeString": "struct Prescriptions.Prescription memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Prescription_$62_memory",
                          "typeString": "struct Prescriptions.Prescription memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 119,
                          "name": "prescriptions_physician",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "1274:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Prescriptions.Prescription storage ref[] storage ref)"
                          }
                        },
                        "id": 122,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 471,
                            "src": "1298:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1298:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1274:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Prescription_$62_storage_$dyn_storage",
                          "typeString": "struct Prescriptions.Prescription storage ref[] storage ref"
                        }
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1274:40:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Prescription_$62_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Prescriptions.Prescription storage ref) returns (uint256)"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1274:162:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1274:162:1"
                }
              ]
            },
            "documentation": null,
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newPrescription",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "name": "prescription_",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "957:33:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                    "typeString": "struct Prescriptions.Prescription"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 93,
                    "name": "Prescription",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 62,
                    "src": "957:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prescription_$62_storage_ptr",
                      "typeString": "struct Prescriptions.Prescription"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "956:35:1"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "998:0:1"
            },
            "scope": 151,
            "src": "932:511:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "1538:59:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 145,
                      "name": "prescriptions_physician",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "1555:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Prescriptions.Prescription storage ref[] storage ref)"
                      }
                    },
                    "id": 147,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 146,
                      "name": "public_key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "1579:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1555:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Prescription_$62_storage_$dyn_storage",
                      "typeString": "struct Prescriptions.Prescription storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 144,
                  "id": 148,
                  "nodeType": "Return",
                  "src": "1548:42:1"
                }
              ]
            },
            "documentation": null,
            "id": 150,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrescriptions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1475:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1474:20:1"
            },
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1516:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Prescription_$62_memory_$dyn_memory_ptr",
                    "typeString": "struct Prescriptions.Prescription[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 141,
                      "name": "Prescription",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 62,
                      "src": "1516:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prescription_$62_storage_ptr",
                        "typeString": "struct Prescriptions.Prescription"
                      }
                    },
                    "id": 142,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1516:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_ptr",
                      "typeString": "struct Prescriptions.Prescription[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1515:23:1"
            },
            "scope": 151,
            "src": "1449:148:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 152,
        "src": "122:1477:1"
      }
    ],
    "src": "32:1568:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/Prescriptions.sol",
    "exportedSymbols": {
      "Prescriptions": [
        151
      ]
    },
    "id": 152,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:1"
      },
      {
        "id": 39,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "65:33:1"
      },
      {
        "absolutePath": "/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/User.sol",
        "file": "./User.sol",
        "id": 40,
        "nodeType": "ImportDirective",
        "scope": 152,
        "sourceUnit": 457,
        "src": "100:20:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 151,
        "linearizedBaseContracts": [
          151
        ],
        "name": "Prescriptions",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 42,
            "name": "verifying_institution",
            "nodeType": "VariableDeclaration",
            "scope": 151,
            "src": "151:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 41,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "151:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 44,
            "name": "UserContract",
            "nodeType": "VariableDeclaration",
            "scope": 151,
            "src": "193:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_User_$456",
              "typeString": "contract User"
            },
            "typeName": {
              "contractScope": null,
              "id": 43,
              "name": "User",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 456,
              "src": "193:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_User_$456",
                "typeString": "contract User"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "239:51:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 47,
                      "name": "verifying_institution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "249:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 48,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 471,
                        "src": "273:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "273:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "249:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "249:34:1"
                }
              ]
            },
            "documentation": null,
            "id": 53,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:1"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:0:1"
            },
            "scope": 151,
            "src": "217:73:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Prescriptions.Prescription",
            "id": 62,
            "members": [
              {
                "constant": false,
                "id": 55,
                "name": "physician",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "326:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 54,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "326:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "name": "patient",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "353:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 56,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "353:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "name": "medicine_name",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "379:20:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 58,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "379:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "name": "medicine_amount",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "409:22:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 60,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "409:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Prescription",
            "nodeType": "StructDefinition",
            "scope": 151,
            "src": "296:208:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 67,
            "name": "prescriptions_physician",
            "nodeType": "VariableDeclaration",
            "scope": 151,
            "src": "510:65:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Prescriptions.Prescription[])"
            },
            "typeName": {
              "id": 66,
              "keyType": {
                "id": 63,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "518:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "510:34:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Prescriptions.Prescription[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 64,
                  "name": "Prescription",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 62,
                  "src": "529:12:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Prescription_$62_storage_ptr",
                    "typeString": "struct Prescriptions.Prescription"
                  }
                },
                "id": 65,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "529:14:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_ptr",
                  "typeString": "struct Prescriptions.Prescription[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 72,
            "name": "prescriptions_patient",
            "nodeType": "VariableDeclaration",
            "scope": 151,
            "src": "581:63:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Prescriptions.Prescription[])"
            },
            "typeName": {
              "id": 71,
              "keyType": {
                "id": 68,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "589:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "581:34:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Prescriptions.Prescription[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 69,
                  "name": "Prescription",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 62,
                  "src": "600:12:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Prescription_$62_storage_ptr",
                    "typeString": "struct Prescriptions.Prescription"
                  }
                },
                "id": 70,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "600:14:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_ptr",
                  "typeString": "struct Prescriptions.Prescription[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "738:188:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 78,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 471,
                            "src": "756:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "756:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 80,
                          "name": "verifying_institution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "770:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "756:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79207468652076657269667920696e737469747574696f6e206861732074686520726967687420746f20636f6e6e65637420707265736372697074696f6e20746f207573657221",
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "793:76:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c572522a3a88ffd25f4670a493b7a0cd229ac63cc2952d745c10df6214ad483",
                          "typeString": "literal_string \"Only the verify institution has the right to connect prescription to user!\""
                        },
                        "value": "Only the verify institution has the right to connect prescription to user!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c572522a3a88ffd25f4670a493b7a0cd229ac63cc2952d745c10df6214ad483",
                          "typeString": "literal_string \"Only the verify institution has the right to connect prescription to user!\""
                        }
                      ],
                      "id": 77,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        474,
                        475
                      ],
                      "referencedDeclaration": 475,
                      "src": "748:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "748:122:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "748:122:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 85,
                      "name": "UserContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "880:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$456",
                        "typeString": "contract User"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 87,
                          "name": "smart_contract_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "900:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 86,
                        "name": "User",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 456,
                        "src": "895:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_User_$456_$",
                          "typeString": "type(contract User)"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "895:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$456",
                        "typeString": "contract User"
                      }
                    },
                    "src": "880:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$456",
                      "typeString": "contract User"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "880:39:1"
                }
              ]
            },
            "documentation": null,
            "id": 92,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "establishConnectionToUserSmartContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "name": "smart_contract_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "703:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "703:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "702:28:1"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:0:1"
            },
            "scope": 151,
            "src": "655:271:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "998:445:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 100,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 471,
                                "src": "1056:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1056:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 98,
                              "name": "UserContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "1016:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_User_$456",
                                "typeString": "contract User"
                              }
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checkPhysicianVerification",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 455,
                            "src": "1016:39:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1016:51:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1071:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1016:59:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520646f6e277420686176652074686520726967687420746f20637265617465206120707265736372697074696f6e21",
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1077:52:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd4fa14b7b32d8d7186aef69e0838638b3bf9f6f3c0c9338aaba778405507d4a",
                          "typeString": "literal_string \"You don't have the right to create a prescription!\""
                        },
                        "value": "You don't have the right to create a prescription!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd4fa14b7b32d8d7186aef69e0838638b3bf9f6f3c0c9338aaba778405507d4a",
                          "typeString": "literal_string \"You don't have the right to create a prescription!\""
                        }
                      ],
                      "id": 97,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        474,
                        475
                      ],
                      "referencedDeclaration": 475,
                      "src": "1008:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1008:122:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:122:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 111,
                                "name": "prescription_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 94,
                                "src": "1186:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                                  "typeString": "struct Prescriptions.Prescription memory"
                                }
                              },
                              "id": 112,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "patient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 57,
                              "src": "1186:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 109,
                              "name": "UserContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "1148:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_User_$456",
                                "typeString": "contract User"
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checkInsuredVerification",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 427,
                            "src": "1148:37:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1148:60:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1212:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1148:68:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546869732070617469656e74206973206e6f742072656769737465726564206f7220766572696669656421",
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1218:45:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30892ac0d7d9977ed55659448ed491488b3dea2433338b20ac15ff2e2d256da6",
                          "typeString": "literal_string \"This patient is not registered or verified!\""
                        },
                        "value": "This patient is not registered or verified!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30892ac0d7d9977ed55659448ed491488b3dea2433338b20ac15ff2e2d256da6",
                          "typeString": "literal_string \"This patient is not registered or verified!\""
                        }
                      ],
                      "id": 108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        474,
                        475
                      ],
                      "referencedDeclaration": 475,
                      "src": "1140:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1140:124:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "1140:124:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 125,
                              "name": "prescription_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "1328:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                                "typeString": "struct Prescriptions.Prescription memory"
                              }
                            },
                            "id": 126,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "physician",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55,
                            "src": "1328:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 127,
                              "name": "prescription_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "1353:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                                "typeString": "struct Prescriptions.Prescription memory"
                              }
                            },
                            "id": 128,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "patient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57,
                            "src": "1353:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 129,
                              "name": "prescription_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "1376:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                                "typeString": "struct Prescriptions.Prescription memory"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "medicine_name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59,
                            "src": "1376:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 131,
                              "name": "prescription_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "1405:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                                "typeString": "struct Prescriptions.Prescription memory"
                              }
                            },
                            "id": 132,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "medicine_amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61,
                            "src": "1405:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 124,
                          "name": "Prescription",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1315:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Prescription_$62_storage_ptr_$",
                            "typeString": "type(struct Prescriptions.Prescription storage pointer)"
                          }
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1315:120:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prescription_$62_memory",
                          "typeString": "struct Prescriptions.Prescription memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Prescription_$62_memory",
                          "typeString": "struct Prescriptions.Prescription memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 119,
                          "name": "prescriptions_physician",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "1274:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Prescriptions.Prescription storage ref[] storage ref)"
                          }
                        },
                        "id": 122,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 471,
                            "src": "1298:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1298:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1274:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Prescription_$62_storage_$dyn_storage",
                          "typeString": "struct Prescriptions.Prescription storage ref[] storage ref"
                        }
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1274:40:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Prescription_$62_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Prescriptions.Prescription storage ref) returns (uint256)"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1274:162:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1274:162:1"
                }
              ]
            },
            "documentation": null,
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newPrescription",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "name": "prescription_",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "957:33:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                    "typeString": "struct Prescriptions.Prescription"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 93,
                    "name": "Prescription",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 62,
                    "src": "957:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prescription_$62_storage_ptr",
                      "typeString": "struct Prescriptions.Prescription"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "956:35:1"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "998:0:1"
            },
            "scope": 151,
            "src": "932:511:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "1538:59:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 145,
                      "name": "prescriptions_physician",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "1555:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Prescriptions.Prescription storage ref[] storage ref)"
                      }
                    },
                    "id": 147,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 146,
                      "name": "public_key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "1579:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1555:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Prescription_$62_storage_$dyn_storage",
                      "typeString": "struct Prescriptions.Prescription storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 144,
                  "id": 148,
                  "nodeType": "Return",
                  "src": "1548:42:1"
                }
              ]
            },
            "documentation": null,
            "id": 150,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrescriptions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1475:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1474:20:1"
            },
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1516:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Prescription_$62_memory_$dyn_memory_ptr",
                    "typeString": "struct Prescriptions.Prescription[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 141,
                      "name": "Prescription",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 62,
                      "src": "1516:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prescription_$62_storage_ptr",
                        "typeString": "struct Prescriptions.Prescription"
                      }
                    },
                    "id": 142,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1516:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_ptr",
                      "typeString": "struct Prescriptions.Prescription[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1515:23:1"
            },
            "scope": 151,
            "src": "1449:148:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 152,
        "src": "122:1477:1"
      }
    ],
    "src": "32:1568:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x81C8BB03dE8e645a62534e5aaB2588FaA2799616",
      "transactionHash": "0x58e2f7868f49b1e64dca504afb0c854171454f893a18a64dec838d328a1ac00d"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-28T14:10:01.424Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}