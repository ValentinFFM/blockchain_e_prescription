{
  "contractName": "Prescriptions",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "prescriptions_patient",
      "outputs": [
        {
          "internalType": "address",
          "name": "physician",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "patient",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "medicine_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "medicine_amount",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "prescriptions_physician",
      "outputs": [
        {
          "internalType": "address",
          "name": "physician",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "patient",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "medicine_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "medicine_amount",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "verifying_institution",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "smart_contract_key",
          "type": "address"
        }
      ],
      "name": "establishConnectionToUserSmartContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "physician",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "patient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "medicine_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "medicine_amount",
              "type": "string"
            }
          ],
          "internalType": "struct Prescriptions.Prescription",
          "name": "prescription_",
          "type": "tuple"
        }
      ],
      "name": "newPrescription",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "public_key",
          "type": "address"
        }
      ],
      "name": "getPrescriptions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "physician",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "patient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "medicine_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "medicine_amount",
              "type": "string"
            }
          ],
          "internalType": "struct Prescriptions.Prescription[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"smart_contract_key\",\"type\":\"address\"}],\"name\":\"establishConnectionToUserSmartContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"public_key\",\"type\":\"address\"}],\"name\":\"getPrescriptions\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"physician\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"medicine_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"medicine_amount\",\"type\":\"string\"}],\"internalType\":\"struct Prescriptions.Prescription[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"physician\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"medicine_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"medicine_amount\",\"type\":\"string\"}],\"internalType\":\"struct Prescriptions.Prescription\",\"name\":\"prescription_\",\"type\":\"tuple\"}],\"name\":\"newPrescription\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prescriptions_patient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"physician\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"medicine_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"medicine_amount\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prescriptions_physician\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"physician\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"medicine_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"medicine_amount\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"verifying_institution\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/Prescriptions.sol\":\"Prescriptions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/Prescriptions.sol\":{\"keccak256\":\"0xd3784c5e67a1a126902b125fb0c19d926f1392895b118e63b25273f0f7b91719\",\"urls\":[\"bzz-raw://b8ec027fb031f0ba3c871a387b4421351670fb65fd8ed99c1f3ca44bd09a7a8e\",\"dweb:/ipfs/QmV7LxxcDKHtsxgiLHWiKVwEnt2QTHhdj55K7rPWhEVb1Z\"]},\"/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/User.sol\":{\"keccak256\":\"0xb326f293ac6e619330d6c6e2d2a9546c2e87c4d55b665ecf32fa14e2d8a07dbc\",\"urls\":[\"bzz-raw://bf4a47570d4bb168edd704390f656fd52524877d9b2d50080c044be75678997e\",\"dweb:/ipfs/QmZVC3qVVisZ57bGhHqY79b5LWdt8i81rFWXEPfupwr144\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611541806100606000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063295a0a3814610067578063582454ca1461009a57806381eceeb7146100cd578063a6127293146100eb578063f8f3f38214610107578063fb2d5c7314610137575b600080fd5b610081600480360361007c9190810190610dcd565b610153565b60405161009194939291906111f8565b60405180910390f35b6100b460048036036100af9190810190610dcd565b61030d565b6040516100c494939291906111f8565b60405180910390f35b6100d56104c7565b6040516100e291906111dd565b60405180910390f35b61010560048036036101009190810190610da4565b6104ec565b005b610121600480360361011c9190810190610da4565b6105bf565b60405161012e919061124b565b60405180910390f35b610151600480360361014c9190810190610e32565b61084d565b005b6002602052816000526040600020818154811061016c57fe5b9060005260206000209060040201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102655780601f1061023a57610100808354040283529160200191610265565b820191906000526020600020905b81548152906001019060200180831161024857829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103035780601f106102d857610100808354040283529160200191610303565b820191906000526020600020905b8154815290600101906020018083116102e657829003601f168201915b5050505050905084565b6003602052816000526040600020818154811061032657fe5b9060005260206000209060040201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561041f5780601f106103f45761010080835404028352916020019161041f565b820191906000526020600020905b81548152906001019060200180831161040257829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104bd5780601f10610492576101008083540402835291602001916104bd565b820191906000526020600020905b8154815290600101906020018083116104a057829003601f168201915b5050505050905084565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461057b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105729061126d565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561084257838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107885780601f1061075d57610100808354040283529160200191610788565b820191906000526020600020905b81548152906001019060200180831161076b57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561082a5780601f106107ff5761010080835404028352916020019161082a565b820191906000526020600020905b81548152906001019060200180831161080d57829003601f168201915b50505050508152505081526020019060010190610620565b505050509050919050565b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7350e60336040518263ffffffff1660e01b81526004016108ac91906112ad565b60206040518083038186803b1580156108c457600080fd5b505afa1580156108d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108fc9190810190610e09565b15151461093e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610935906112db565b60405180910390fd5b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7350e6083602001516040518263ffffffff1660e01b81526004016109a191906112fb565b60206040518083038186803b1580156109b957600080fd5b505afa1580156109cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109f19190810190610e09565b151514610a33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2a9061128d565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015173ffffffffffffffffffffffffffffffffffffffff1681526020018360400151815260200183606001518152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190610ba4929190610bc8565b506060820151816003019080519060200190610bc1929190610bc8565b5050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c0957805160ff1916838001178555610c37565b82800160010185558215610c37579182015b82811115610c36578251825591602001919060010190610c1b565b5b509050610c449190610c48565b5090565b610c6a91905b80821115610c66576000816000905550600101610c4e565b5090565b90565b600081359050610c7c816114b9565b92915050565b600081519050610c91816114d0565b92915050565b600082601f830112610ca857600080fd5b8135610cbb610cb682611356565b611329565b91508082526020830160208301858383011115610cd757600080fd5b610ce2838284611466565b50505092915050565b600060808284031215610cfd57600080fd5b610d076080611329565b90506000610d1784828501610c6d565b6000830152506020610d2b84828501610c6d565b602083015250604082013567ffffffffffffffff811115610d4b57600080fd5b610d5784828501610c97565b604083015250606082013567ffffffffffffffff811115610d7757600080fd5b610d8384828501610c97565b60608301525092915050565b600081359050610d9e816114e7565b92915050565b600060208284031215610db657600080fd5b6000610dc484828501610c6d565b91505092915050565b60008060408385031215610de057600080fd5b6000610dee85828601610c6d565b9250506020610dff85828601610d8f565b9150509250929050565b600060208284031215610e1b57600080fd5b6000610e2984828501610c82565b91505092915050565b600060208284031215610e4457600080fd5b600082013567ffffffffffffffff811115610e5e57600080fd5b610e6a84828501610ceb565b91505092915050565b6000610e7f8383611173565b905092915050565b610e9081611430565b82525050565b610e9f816113e8565b82525050565b610eae816113e8565b82525050565b6000610ebf82611392565b610ec981856113b5565b935083602082028501610edb85611382565b8060005b85811015610f175784840389528151610ef88582610e73565b9450610f03836113a8565b925060208a01995050600181019050610edf565b50829750879550505050505092915050565b6000610f348261139d565b610f3e81856113c6565b9350610f4e818560208601611475565b610f57816114a8565b840191505092915050565b6000610f6d8261139d565b610f7781856113d7565b9350610f87818560208601611475565b610f90816114a8565b840191505092915050565b6000610fa8604a836113d7565b91507f4f6e6c79207468652076657269667920696e737469747574696f6e206861732060008301527f74686520726967687420746f20636f6e6e65637420707265736372697074696f60208301527f6e20746f207573657221000000000000000000000000000000000000000000006040830152606082019050919050565b6000611034602b836113d7565b91507f546869732070617469656e74206973206e6f742072656769737465726564206f60008301527f72207665726966696564210000000000000000000000000000000000000000006020830152604082019050919050565b600061109a6009836113d7565b91507f70687973696369616e00000000000000000000000000000000000000000000006000830152602082019050919050565b60006110da6032836113d7565b91507f596f7520646f6e277420686176652074686520726967687420746f206372656160008301527f7465206120707265736372697074696f6e2100000000000000000000000000006020830152604082019050919050565b60006111406007836113d7565b91507f696e7375726564000000000000000000000000000000000000000000000000006000830152602082019050919050565b600060808301600083015161118b6000860182610e96565b50602083015161119e6020860182610e96565b50604083015184820360408601526111b68282610f29565b915050606083015184820360608601526111d08282610f29565b9150508091505092915050565b60006020820190506111f26000830184610ea5565b92915050565b600060808201905061120d6000830187610ea5565b61121a6020830186610ea5565b818103604083015261122c8185610f62565b905081810360608301526112408184610f62565b905095945050505050565b600060208201905081810360008301526112658184610eb4565b905092915050565b6000602082019050818103600083015261128681610f9b565b9050919050565b600060208201905081810360008301526112a681611027565b9050919050565b600060408201905081810360008301526112c68161108d565b90506112d56020830184610e87565b92915050565b600060208201905081810360008301526112f4816110cd565b9050919050565b6000604082019050818103600083015261131481611133565b90506113236020830184610ea5565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561134c57600080fd5b8060405250919050565b600067ffffffffffffffff82111561136d57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006113f382611406565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061143b82611442565b9050919050565b600061144d82611454565b9050919050565b600061145f82611406565b9050919050565b82818337600083830152505050565b60005b83811015611493578082015181840152602081019050611478565b838111156114a2576000848401525b50505050565b6000601f19601f8301169050919050565b6114c2816113e8565b81146114cd57600080fd5b50565b6114d9816113fa565b81146114e457600080fd5b50565b6114f081611426565b81146114fb57600080fd5b5056fea365627a7a72315820980e8863e3a41a0171e78fadf66b4c3c282fa11da12e5bffe90453fa775f70156c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063295a0a3814610067578063582454ca1461009a57806381eceeb7146100cd578063a6127293146100eb578063f8f3f38214610107578063fb2d5c7314610137575b600080fd5b610081600480360361007c9190810190610dcd565b610153565b60405161009194939291906111f8565b60405180910390f35b6100b460048036036100af9190810190610dcd565b61030d565b6040516100c494939291906111f8565b60405180910390f35b6100d56104c7565b6040516100e291906111dd565b60405180910390f35b61010560048036036101009190810190610da4565b6104ec565b005b610121600480360361011c9190810190610da4565b6105bf565b60405161012e919061124b565b60405180910390f35b610151600480360361014c9190810190610e32565b61084d565b005b6002602052816000526040600020818154811061016c57fe5b9060005260206000209060040201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102655780601f1061023a57610100808354040283529160200191610265565b820191906000526020600020905b81548152906001019060200180831161024857829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103035780601f106102d857610100808354040283529160200191610303565b820191906000526020600020905b8154815290600101906020018083116102e657829003601f168201915b5050505050905084565b6003602052816000526040600020818154811061032657fe5b9060005260206000209060040201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561041f5780601f106103f45761010080835404028352916020019161041f565b820191906000526020600020905b81548152906001019060200180831161040257829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104bd5780601f10610492576101008083540402835291602001916104bd565b820191906000526020600020905b8154815290600101906020018083116104a057829003601f168201915b5050505050905084565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461057b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105729061126d565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561084257838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107885780601f1061075d57610100808354040283529160200191610788565b820191906000526020600020905b81548152906001019060200180831161076b57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561082a5780601f106107ff5761010080835404028352916020019161082a565b820191906000526020600020905b81548152906001019060200180831161080d57829003601f168201915b50505050508152505081526020019060010190610620565b505050509050919050565b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7350e60336040518263ffffffff1660e01b81526004016108ac91906112ad565b60206040518083038186803b1580156108c457600080fd5b505afa1580156108d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108fc9190810190610e09565b15151461093e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610935906112db565b60405180910390fd5b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7350e6083602001516040518263ffffffff1660e01b81526004016109a191906112fb565b60206040518083038186803b1580156109b957600080fd5b505afa1580156109cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109f19190810190610e09565b151514610a33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2a9061128d565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015173ffffffffffffffffffffffffffffffffffffffff1681526020018360400151815260200183606001518152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190610ba4929190610bc8565b506060820151816003019080519060200190610bc1929190610bc8565b5050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c0957805160ff1916838001178555610c37565b82800160010185558215610c37579182015b82811115610c36578251825591602001919060010190610c1b565b5b509050610c449190610c48565b5090565b610c6a91905b80821115610c66576000816000905550600101610c4e565b5090565b90565b600081359050610c7c816114b9565b92915050565b600081519050610c91816114d0565b92915050565b600082601f830112610ca857600080fd5b8135610cbb610cb682611356565b611329565b91508082526020830160208301858383011115610cd757600080fd5b610ce2838284611466565b50505092915050565b600060808284031215610cfd57600080fd5b610d076080611329565b90506000610d1784828501610c6d565b6000830152506020610d2b84828501610c6d565b602083015250604082013567ffffffffffffffff811115610d4b57600080fd5b610d5784828501610c97565b604083015250606082013567ffffffffffffffff811115610d7757600080fd5b610d8384828501610c97565b60608301525092915050565b600081359050610d9e816114e7565b92915050565b600060208284031215610db657600080fd5b6000610dc484828501610c6d565b91505092915050565b60008060408385031215610de057600080fd5b6000610dee85828601610c6d565b9250506020610dff85828601610d8f565b9150509250929050565b600060208284031215610e1b57600080fd5b6000610e2984828501610c82565b91505092915050565b600060208284031215610e4457600080fd5b600082013567ffffffffffffffff811115610e5e57600080fd5b610e6a84828501610ceb565b91505092915050565b6000610e7f8383611173565b905092915050565b610e9081611430565b82525050565b610e9f816113e8565b82525050565b610eae816113e8565b82525050565b6000610ebf82611392565b610ec981856113b5565b935083602082028501610edb85611382565b8060005b85811015610f175784840389528151610ef88582610e73565b9450610f03836113a8565b925060208a01995050600181019050610edf565b50829750879550505050505092915050565b6000610f348261139d565b610f3e81856113c6565b9350610f4e818560208601611475565b610f57816114a8565b840191505092915050565b6000610f6d8261139d565b610f7781856113d7565b9350610f87818560208601611475565b610f90816114a8565b840191505092915050565b6000610fa8604a836113d7565b91507f4f6e6c79207468652076657269667920696e737469747574696f6e206861732060008301527f74686520726967687420746f20636f6e6e65637420707265736372697074696f60208301527f6e20746f207573657221000000000000000000000000000000000000000000006040830152606082019050919050565b6000611034602b836113d7565b91507f546869732070617469656e74206973206e6f742072656769737465726564206f60008301527f72207665726966696564210000000000000000000000000000000000000000006020830152604082019050919050565b600061109a6009836113d7565b91507f70687973696369616e00000000000000000000000000000000000000000000006000830152602082019050919050565b60006110da6032836113d7565b91507f596f7520646f6e277420686176652074686520726967687420746f206372656160008301527f7465206120707265736372697074696f6e2100000000000000000000000000006020830152604082019050919050565b60006111406007836113d7565b91507f696e7375726564000000000000000000000000000000000000000000000000006000830152602082019050919050565b600060808301600083015161118b6000860182610e96565b50602083015161119e6020860182610e96565b50604083015184820360408601526111b68282610f29565b915050606083015184820360608601526111d08282610f29565b9150508091505092915050565b60006020820190506111f26000830184610ea5565b92915050565b600060808201905061120d6000830187610ea5565b61121a6020830186610ea5565b818103604083015261122c8185610f62565b905081810360608301526112408184610f62565b905095945050505050565b600060208201905081810360008301526112658184610eb4565b905092915050565b6000602082019050818103600083015261128681610f9b565b9050919050565b600060208201905081810360008301526112a681611027565b9050919050565b600060408201905081810360008301526112c68161108d565b90506112d56020830184610e87565b92915050565b600060208201905081810360008301526112f4816110cd565b9050919050565b6000604082019050818103600083015261131481611133565b90506113236020830184610ea5565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561134c57600080fd5b8060405250919050565b600067ffffffffffffffff82111561136d57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006113f382611406565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061143b82611442565b9050919050565b600061144d82611454565b9050919050565b600061145f82611406565b9050919050565b82818337600083830152505050565b60005b83811015611493578082015181840152602081019050611478565b838111156114a2576000848401525b50505050565b6000601f19601f8301169050919050565b6114c2816113e8565b81146114cd57600080fd5b50565b6114d9816113fa565b81146114e457600080fd5b50565b6114f081611426565b81146114fb57600080fd5b5056fea365627a7a72315820980e8863e3a41a0171e78fadf66b4c3c282fa11da12e5bffe90453fa775f70156c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "122:1485:1:-;;;217:73;8:9:-1;5:2;;;30:1;27;20:12;5:2;217:73:1;273:10;249:21;;:34;;;;;;;;;;;;;;;;;;122:1485;;;;;;",
  "deployedSourceMap": "122:1485:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;122:1485:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;510:65;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;581:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;151:36;;;:::i;:::-;;;;;;;;;;;;;;;;655:271;;;;;;;;;;;;;;;;:::i;:::-;;1457:148;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;932:519;;;;;;;;;;;;;;;;:::i;:::-;;510:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;581:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;151:36::-;;;;;;;;;;;;;:::o;655:271::-;770:21;;;;;;;;;;;756:35;;:10;:35;;;748:122;;;;;;;;;;;;;;;;;;;;;;900:18;880:12;;:39;;;;;;;;;;;;;;;;;;655:271;:::o;1457:148::-;1524:21;1563:23;:35;1587:10;1563:35;;;;;;;;;;;;;;;1556:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1457:148;;;:::o;932:519::-;1075:4;1016:63;;:12;;;;;;;;;;;:30;;;1060:10;1016:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1016:55:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1016:55:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1016:55:1;;;;;;;;;:63;;;1008:126;;;;;;;;;;;;;;;;;;;;;;1220:4;1152:72;;:12;;;;;;;;;;;:30;;;1194:13;:21;;;1152:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1152:64:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1152:64:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1152:64:1;;;;;;;;;:72;;;1144:128;;;;;;;;;;;;;;;;;;;;;;1282:23;:35;1306:10;1282:35;;;;;;;;;;;;;;;1323:120;;;;;;;;1336:13;:23;;;1323:120;;;;;;1361:13;:21;;;1323:120;;;;;;1384:13;:27;;;1323:120;;;;1413:13;:29;;;1323:120;;;1282:162;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1282:162:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;932:519;:::o;122:1485::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:128;;223:6;217:13;208:22;;235:30;259:5;235:30;;;202:68;;;;;278:434;;376:3;369:4;361:6;357:17;353:27;343:2;;394:1;391;384:12;343:2;431:6;418:20;453:61;468:45;506:6;468:45;;;453:61;;;444:70;;534:6;527:5;520:21;570:4;562:6;558:17;603:4;596:5;592:16;638:3;629:6;624:3;620:16;617:25;614:2;;;655:1;652;645:12;614:2;665:41;699:6;694:3;689;665:41;;;336:376;;;;;;;;760:970;;877:4;865:9;860:3;856:19;852:30;849:2;;;895:1;892;885:12;849:2;913:20;928:4;913:20;;;904:29;;988:1;1020:49;1065:3;1056:6;1045:9;1041:22;1020:49;;;1013:4;1006:5;1002:16;995:75;943:138;1134:2;1167:49;1212:3;1203:6;1192:9;1188:22;1167:49;;;1160:4;1153:5;1149:16;1142:75;1091:137;1315:2;1304:9;1300:18;1287:32;1339:18;1331:6;1328:30;1325:2;;;1371:1;1368;1361:12;1325:2;1406:55;1457:3;1448:6;1437:9;1433:22;1406:55;;;1399:4;1392:5;1388:16;1381:81;1238:235;1562:2;1551:9;1547:18;1534:32;1586:18;1578:6;1575:30;1572:2;;;1618:1;1615;1608:12;1572:2;1653:55;1704:3;1695:6;1684:9;1680:22;1653:55;;;1646:4;1639:5;1635:16;1628:81;1483:237;843:887;;;;;1737:130;;1817:6;1804:20;1795:29;;1829:33;1856:5;1829:33;;;1789:78;;;;;1874:241;;1978:2;1966:9;1957:7;1953:23;1949:32;1946:2;;;1994:1;1991;1984:12;1946:2;2029:1;2046:53;2091:7;2082:6;2071:9;2067:22;2046:53;;;2036:63;;2008:97;1940:175;;;;;2122:366;;;2243:2;2231:9;2222:7;2218:23;2214:32;2211:2;;;2259:1;2256;2249:12;2211:2;2294:1;2311:53;2356:7;2347:6;2336:9;2332:22;2311:53;;;2301:63;;2273:97;2401:2;2419:53;2464:7;2455:6;2444:9;2440:22;2419:53;;;2409:63;;2380:98;2205:283;;;;;;2495:257;;2607:2;2595:9;2586:7;2582:23;2578:32;2575:2;;;2623:1;2620;2613:12;2575:2;2658:1;2675:61;2728:7;2719:6;2708:9;2704:22;2675:61;;;2665:71;;2637:105;2569:183;;;;;2759:383;;2891:2;2879:9;2870:7;2866:23;2862:32;2859:2;;;2907:1;2904;2897:12;2859:2;2970:1;2959:9;2955:17;2942:31;2993:18;2985:6;2982:30;2979:2;;;3025:1;3022;3015:12;2979:2;3045:81;3118:7;3109:6;3098:9;3094:22;3045:81;;;3035:91;;2921:211;2853:289;;;;;3150:253;;3299:98;3393:3;3385:6;3299:98;;;3285:112;;3278:125;;;;;3411:142;3502:45;3541:5;3502:45;;;3497:3;3490:58;3484:69;;;3560:103;3633:24;3651:5;3633:24;;;3628:3;3621:37;3615:48;;;3670:113;3753:24;3771:5;3753:24;;;3748:3;3741:37;3735:48;;;3873:1040;;4066:78;4138:5;4066:78;;;4157:110;4260:6;4255:3;4157:110;;;4150:117;;4290:3;4332:4;4324:6;4320:17;4315:3;4311:27;4359:80;4433:5;4359:80;;;4459:7;4487:1;4472:402;4497:6;4494:1;4491:13;4472:402;;;4559:9;4553:4;4549:20;4544:3;4537:33;4604:6;4598:13;4626:112;4733:4;4718:13;4626:112;;;4618:120;;4755:84;4832:6;4755:84;;;4745:94;;4862:4;4857:3;4853:14;4846:21;;4529:345;4519:1;4516;4512:9;4507:14;;4472:402;;;4476:14;4887:4;4880:11;;4904:3;4897:10;;4045:868;;;;;;;;;;4921:319;;5019:35;5048:5;5019:35;;;5066:61;5120:6;5115:3;5066:61;;;5059:68;;5132:52;5177:6;5172:3;5165:4;5158:5;5154:16;5132:52;;;5205:29;5227:6;5205:29;;;5200:3;5196:39;5189:46;;4999:241;;;;;;5247:339;;5355:35;5384:5;5355:35;;;5402:71;5466:6;5461:3;5402:71;;;5395:78;;5478:52;5523:6;5518:3;5511:4;5504:5;5500:16;5478:52;;;5551:29;5573:6;5551:29;;;5546:3;5542:39;5535:46;;5335:251;;;;;;5594:448;;5754:67;5818:2;5813:3;5754:67;;;5747:74;;5854:34;5850:1;5845:3;5841:11;5834:55;5923:34;5918:2;5913:3;5909:12;5902:56;5992:12;5987:2;5982:3;5978:12;5971:34;6033:2;6028:3;6024:12;6017:19;;5740:302;;;;6051:380;;6211:67;6275:2;6270:3;6211:67;;;6204:74;;6311:34;6307:1;6302:3;6298:11;6291:55;6380:13;6375:2;6370:3;6366:12;6359:35;6422:2;6417:3;6413:12;6406:19;;6197:234;;;;6440:308;;6600:66;6664:1;6659:3;6600:66;;;6593:73;;6699:11;6695:1;6690:3;6686:11;6679:32;6739:2;6734:3;6730:12;6723:19;;6586:162;;;;6757:387;;6917:67;6981:2;6976:3;6917:67;;;6910:74;;7017:34;7013:1;7008:3;7004:11;6997:55;7086:20;7081:2;7076:3;7072:12;7065:42;7135:2;7130:3;7126:12;7119:19;;6903:241;;;;7153:306;;7313:66;7377:1;7372:3;7313:66;;;7306:73;;7412:9;7408:1;7403:3;7399:11;7392:30;7450:2;7445:3;7441:12;7434:19;;7299:160;;;;7544:967;;7687:4;7682:3;7678:14;7775:4;7768:5;7764:16;7758:23;7787:63;7844:4;7839:3;7835:14;7821:12;7787:63;;;7707:149;7932:4;7925:5;7921:16;7915:23;7944:63;8001:4;7996:3;7992:14;7978:12;7944:63;;;7866:147;8095:4;8088:5;8084:16;8078:23;8147:3;8141:4;8137:14;8130:4;8125:3;8121:14;8114:38;8167:69;8231:4;8217:12;8167:69;;;8159:77;;8023:225;8332:4;8325:5;8321:16;8315:23;8384:3;8378:4;8374:14;8367:4;8362:3;8358:14;8351:38;8404:69;8468:4;8454:12;8404:69;;;8396:77;;8258:227;8502:4;8495:11;;7660:851;;;;;;8518:213;;8636:2;8625:9;8621:18;8613:26;;8650:71;8718:1;8707:9;8703:17;8694:6;8650:71;;;8607:124;;;;;8738:707;;8972:3;8961:9;8957:19;8949:27;;8987:71;9055:1;9044:9;9040:17;9031:6;8987:71;;;9069:72;9137:2;9126:9;9122:18;9113:6;9069:72;;;9189:9;9183:4;9179:20;9174:2;9163:9;9159:18;9152:48;9214:74;9283:4;9274:6;9214:74;;;9206:82;;9336:9;9330:4;9326:20;9321:2;9310:9;9306:18;9299:48;9361:74;9430:4;9421:6;9361:74;;;9353:82;;8943:502;;;;;;;;9452:457;;9668:2;9657:9;9653:18;9645:26;;9718:9;9712:4;9708:20;9704:1;9693:9;9689:17;9682:47;9743:156;9894:4;9885:6;9743:156;;;9735:164;;9639:270;;;;;9916:407;;10107:2;10096:9;10092:18;10084:26;;10157:9;10151:4;10147:20;10143:1;10132:9;10128:17;10121:47;10182:131;10308:4;10182:131;;;10174:139;;10078:245;;;;10330:407;;10521:2;10510:9;10506:18;10498:26;;10571:9;10565:4;10561:20;10557:1;10546:9;10542:17;10535:47;10596:131;10722:4;10596:131;;;10588:139;;10492:245;;;;10744:534;;10971:2;10960:9;10956:18;10948:26;;11021:9;11015:4;11011:20;11007:1;10996:9;10992:17;10985:47;11046:131;11172:4;11046:131;;;11038:139;;11188:80;11264:2;11253:9;11249:18;11240:6;11188:80;;;10942:336;;;;;11285:407;;11476:2;11465:9;11461:18;11453:26;;11526:9;11520:4;11516:20;11512:1;11501:9;11497:17;11490:47;11551:131;11677:4;11551:131;;;11543:139;;11447:245;;;;11699:518;;11918:2;11907:9;11903:18;11895:26;;11968:9;11962:4;11958:20;11954:1;11943:9;11939:17;11932:47;11993:131;12119:4;11993:131;;;11985:139;;12135:72;12203:2;12192:9;12188:18;12179:6;12135:72;;;11889:328;;;;;12224:256;;12286:2;12280:9;12270:19;;12324:4;12316:6;12312:17;12423:6;12411:10;12408:22;12387:18;12375:10;12372:34;12369:62;12366:2;;;12444:1;12441;12434:12;12366:2;12464:10;12460:2;12453:22;12264:216;;;;;12487:318;;12627:18;12619:6;12616:30;12613:2;;;12659:1;12656;12649:12;12613:2;12726:4;12722:9;12715:4;12707:6;12703:17;12699:33;12691:41;;12790:4;12784;12780:15;12772:23;;12550:255;;;;12812:175;;12922:3;12914:11;;12960:4;12955:3;12951:14;12943:22;;12908:79;;;;12994:161;;13127:5;13121:12;13111:22;;13092:63;;;;13162:118;;13252:5;13246:12;13236:22;;13217:63;;;;13287:132;;13409:4;13404:3;13400:14;13392:22;;13386:33;;;;13427:202;;13581:6;13576:3;13569:19;13618:4;13613:3;13609:14;13594:29;;13562:67;;;;;13638:153;;13743:6;13738:3;13731:19;13780:4;13775:3;13771:14;13756:29;;13724:67;;;;;13800:163;;13915:6;13910:3;13903:19;13952:4;13947:3;13943:14;13928:29;;13896:67;;;;;13971:91;;14033:24;14051:5;14033:24;;;14022:35;;14016:46;;;;14069:85;;14142:5;14135:13;14128:21;14117:32;;14111:43;;;;14161:121;;14234:42;14227:5;14223:54;14212:65;;14206:76;;;;14289:72;;14351:5;14340:16;;14334:27;;;;14368:129;;14455:37;14486:5;14455:37;;;14442:50;;14436:61;;;;14504:121;;14583:37;14614:5;14583:37;;;14570:50;;14564:61;;;;14632:108;;14711:24;14729:5;14711:24;;;14698:37;;14692:48;;;;14748:145;14829:6;14824:3;14819;14806:30;14885:1;14876:6;14871:3;14867:16;14860:27;14799:94;;;;14902:268;14967:1;14974:101;14988:6;14985:1;14982:13;14974:101;;;15064:1;15059:3;15055:11;15049:18;15045:1;15040:3;15036:11;15029:39;15010:2;15007:1;15003:10;14998:15;;14974:101;;;15090:6;15087:1;15084:13;15081:2;;;15155:1;15146:6;15141:3;15137:16;15130:27;15081:2;14951:219;;;;;15178:97;;15266:2;15262:7;15257:2;15250:5;15246:14;15242:28;15232:38;;15226:49;;;;15283:117;15352:24;15370:5;15352:24;;;15345:5;15342:35;15332:2;;15391:1;15388;15381:12;15332:2;15326:74;;15407:111;15473:21;15488:5;15473:21;;;15466:5;15463:32;15453:2;;15509:1;15506;15499:12;15453:2;15447:71;;15525:117;15594:24;15612:5;15594:24;;;15587:5;15584:35;15574:2;;15633:1;15630;15623:12;15574:2;15568:74;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.21 <0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"./User.sol\";\n\ncontract Prescriptions {\n    address public verifying_institution;\n    User UserContract;\n\n    constructor () public {\n        verifying_institution = msg.sender;\n    }\n\n    struct Prescription {\n        address physician;\n        address patient;\n\n        string medicine_name;\n        string medicine_amount;\n\n        // bool charges_free;\n        // bool charges_mandatory;\n    }\n\n    mapping(address => Prescription[]) public prescriptions_physician;\n    mapping(address => Prescription[]) public prescriptions_patient;\n    \n    function establishConnectionToUserSmartContract(address smart_contract_key) public {\n        require(msg.sender == verifying_institution, \"Only the verify institution has the right to connect prescription to user!\");\n        UserContract = User(smart_contract_key);\n    }\n\n    function newPrescription(Prescription memory prescription_) public{\n        require(UserContract.checkVerification('physician', msg.sender) == true, \"You don't have the right to create a prescription!\");\n        require(UserContract.checkVerification('insured', prescription_.patient) == true, \"This patient is not registered or verified!\");\n        prescriptions_physician[msg.sender].push(Prescription(prescription_.physician, prescription_.patient, prescription_.medicine_name, prescription_.medicine_amount));\n    }\n\n    function getPrescriptions(address public_key) public view returns (Prescription[] memory){\n        return prescriptions_physician[public_key];\n    }\n}\n",
  "sourcePath": "/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/Prescriptions.sol",
  "ast": {
    "absolutePath": "/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/Prescriptions.sol",
    "exportedSymbols": {
      "Prescriptions": [
        153
      ]
    },
    "id": 154,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:1"
      },
      {
        "id": 39,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "65:33:1"
      },
      {
        "absolutePath": "/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/User.sol",
        "file": "./User.sol",
        "id": 40,
        "nodeType": "ImportDirective",
        "scope": 154,
        "sourceUnit": 549,
        "src": "100:20:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 153,
        "linearizedBaseContracts": [
          153
        ],
        "name": "Prescriptions",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 42,
            "name": "verifying_institution",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "151:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 41,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "151:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 44,
            "name": "UserContract",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "193:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_User_$548",
              "typeString": "contract User"
            },
            "typeName": {
              "contractScope": null,
              "id": 43,
              "name": "User",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 548,
              "src": "193:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_User_$548",
                "typeString": "contract User"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "239:51:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 47,
                      "name": "verifying_institution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "249:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 48,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 563,
                        "src": "273:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "273:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "249:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "249:34:1"
                }
              ]
            },
            "documentation": null,
            "id": 53,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:1"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:0:1"
            },
            "scope": 153,
            "src": "217:73:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Prescriptions.Prescription",
            "id": 62,
            "members": [
              {
                "constant": false,
                "id": 55,
                "name": "physician",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "326:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 54,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "326:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "name": "patient",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "353:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 56,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "353:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "name": "medicine_name",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "379:20:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 58,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "379:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "name": "medicine_amount",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "409:22:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 60,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "409:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Prescription",
            "nodeType": "StructDefinition",
            "scope": 153,
            "src": "296:208:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 67,
            "name": "prescriptions_physician",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "510:65:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Prescriptions.Prescription[])"
            },
            "typeName": {
              "id": 66,
              "keyType": {
                "id": 63,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "518:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "510:34:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Prescriptions.Prescription[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 64,
                  "name": "Prescription",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 62,
                  "src": "529:12:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Prescription_$62_storage_ptr",
                    "typeString": "struct Prescriptions.Prescription"
                  }
                },
                "id": 65,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "529:14:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_ptr",
                  "typeString": "struct Prescriptions.Prescription[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 72,
            "name": "prescriptions_patient",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "581:63:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Prescriptions.Prescription[])"
            },
            "typeName": {
              "id": 71,
              "keyType": {
                "id": 68,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "589:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "581:34:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Prescriptions.Prescription[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 69,
                  "name": "Prescription",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 62,
                  "src": "600:12:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Prescription_$62_storage_ptr",
                    "typeString": "struct Prescriptions.Prescription"
                  }
                },
                "id": 70,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "600:14:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_ptr",
                  "typeString": "struct Prescriptions.Prescription[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "738:188:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 78,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 563,
                            "src": "756:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "756:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 80,
                          "name": "verifying_institution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "770:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "756:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79207468652076657269667920696e737469747574696f6e206861732074686520726967687420746f20636f6e6e65637420707265736372697074696f6e20746f207573657221",
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "793:76:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c572522a3a88ffd25f4670a493b7a0cd229ac63cc2952d745c10df6214ad483",
                          "typeString": "literal_string \"Only the verify institution has the right to connect prescription to user!\""
                        },
                        "value": "Only the verify institution has the right to connect prescription to user!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c572522a3a88ffd25f4670a493b7a0cd229ac63cc2952d745c10df6214ad483",
                          "typeString": "literal_string \"Only the verify institution has the right to connect prescription to user!\""
                        }
                      ],
                      "id": 77,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        566,
                        567
                      ],
                      "referencedDeclaration": 567,
                      "src": "748:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "748:122:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "748:122:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 85,
                      "name": "UserContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "880:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$548",
                        "typeString": "contract User"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 87,
                          "name": "smart_contract_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "900:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 86,
                        "name": "User",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "895:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_User_$548_$",
                          "typeString": "type(contract User)"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "895:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$548",
                        "typeString": "contract User"
                      }
                    },
                    "src": "880:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$548",
                      "typeString": "contract User"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "880:39:1"
                }
              ]
            },
            "documentation": null,
            "id": 92,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "establishConnectionToUserSmartContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "name": "smart_contract_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "703:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "703:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "702:28:1"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:0:1"
            },
            "scope": 153,
            "src": "655:271:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
              "src": "998:453:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "70687973696369616e",
                              "id": 100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1047:11:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7a4bcc4bfc6dad10916882da635b169b4e796df7ded52169f3dd7d89621a0071",
                                "typeString": "literal_string \"physician\""
                              },
                              "value": "physician"
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 101,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 563,
                                "src": "1060:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1060:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_7a4bcc4bfc6dad10916882da635b169b4e796df7ded52169f3dd7d89621a0071",
                                "typeString": "literal_string \"physician\""
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 98,
                              "name": "UserContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "1016:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_User_$548",
                                "typeString": "contract User"
                              }
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checkVerification",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 481,
                            "src": "1016:30:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (string memory,address) view external returns (bool)"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1016:55:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1075:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1016:63:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520646f6e277420686176652074686520726967687420746f20637265617465206120707265736372697074696f6e21",
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1081:52:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd4fa14b7b32d8d7186aef69e0838638b3bf9f6f3c0c9338aaba778405507d4a",
                          "typeString": "literal_string \"You don't have the right to create a prescription!\""
                        },
                        "value": "You don't have the right to create a prescription!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd4fa14b7b32d8d7186aef69e0838638b3bf9f6f3c0c9338aaba778405507d4a",
                          "typeString": "literal_string \"You don't have the right to create a prescription!\""
                        }
                      ],
                      "id": 97,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        566,
                        567
                      ],
                      "referencedDeclaration": 567,
                      "src": "1008:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1008:126:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:126:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "696e7375726564",
                              "id": 112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1183:9:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fba31b96a3cc712b8fc7c59148ff4bc53c9767a5e9a1ad14afdb5d2f35bd8a43",
                                "typeString": "literal_string \"insured\""
                              },
                              "value": "insured"
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 113,
                                "name": "prescription_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 94,
                                "src": "1194:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                                  "typeString": "struct Prescriptions.Prescription memory"
                                }
                              },
                              "id": 114,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "patient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 57,
                              "src": "1194:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_fba31b96a3cc712b8fc7c59148ff4bc53c9767a5e9a1ad14afdb5d2f35bd8a43",
                                "typeString": "literal_string \"insured\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 110,
                              "name": "UserContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "1152:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_User_$548",
                                "typeString": "contract User"
                              }
                            },
                            "id": 111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checkVerification",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 481,
                            "src": "1152:30:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (string memory,address) view external returns (bool)"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1152:64:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1220:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1152:72:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546869732070617469656e74206973206e6f742072656769737465726564206f7220766572696669656421",
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1226:45:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30892ac0d7d9977ed55659448ed491488b3dea2433338b20ac15ff2e2d256da6",
                          "typeString": "literal_string \"This patient is not registered or verified!\""
                        },
                        "value": "This patient is not registered or verified!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30892ac0d7d9977ed55659448ed491488b3dea2433338b20ac15ff2e2d256da6",
                          "typeString": "literal_string \"This patient is not registered or verified!\""
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        566,
                        567
                      ],
                      "referencedDeclaration": 567,
                      "src": "1144:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:128:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:128:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 127,
                              "name": "prescription_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "1336:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                                "typeString": "struct Prescriptions.Prescription memory"
                              }
                            },
                            "id": 128,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "physician",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55,
                            "src": "1336:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 129,
                              "name": "prescription_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "1361:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                                "typeString": "struct Prescriptions.Prescription memory"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "patient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57,
                            "src": "1361:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 131,
                              "name": "prescription_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "1384:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                                "typeString": "struct Prescriptions.Prescription memory"
                              }
                            },
                            "id": 132,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "medicine_name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59,
                            "src": "1384:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 133,
                              "name": "prescription_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "1413:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                                "typeString": "struct Prescriptions.Prescription memory"
                              }
                            },
                            "id": 134,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "medicine_amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61,
                            "src": "1413:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 126,
                          "name": "Prescription",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1323:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Prescription_$62_storage_ptr_$",
                            "typeString": "type(struct Prescriptions.Prescription storage pointer)"
                          }
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1323:120:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prescription_$62_memory",
                          "typeString": "struct Prescriptions.Prescription memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Prescription_$62_memory",
                          "typeString": "struct Prescriptions.Prescription memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 121,
                          "name": "prescriptions_physician",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "1282:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Prescriptions.Prescription storage ref[] storage ref)"
                          }
                        },
                        "id": 124,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 122,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 563,
                            "src": "1306:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1306:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1282:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Prescription_$62_storage_$dyn_storage",
                          "typeString": "struct Prescriptions.Prescription storage ref[] storage ref"
                        }
                      },
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1282:40:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Prescription_$62_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Prescriptions.Prescription storage ref) returns (uint256)"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1282:162:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "1282:162:1"
                }
              ]
            },
            "documentation": null,
            "id": 139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newPrescription",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "name": "prescription_",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "957:33:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                    "typeString": "struct Prescriptions.Prescription"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 93,
                    "name": "Prescription",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 62,
                    "src": "957:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prescription_$62_storage_ptr",
                      "typeString": "struct Prescriptions.Prescription"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "956:35:1"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "998:0:1"
            },
            "scope": 153,
            "src": "932:519:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "1546:59:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 147,
                      "name": "prescriptions_physician",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "1563:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Prescriptions.Prescription storage ref[] storage ref)"
                      }
                    },
                    "id": 149,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 148,
                      "name": "public_key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1587:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1563:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Prescription_$62_storage_$dyn_storage",
                      "typeString": "struct Prescriptions.Prescription storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 146,
                  "id": 150,
                  "nodeType": "Return",
                  "src": "1556:42:1"
                }
              ]
            },
            "documentation": null,
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrescriptions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "1483:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1483:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1482:20:1"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "1524:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Prescription_$62_memory_$dyn_memory_ptr",
                    "typeString": "struct Prescriptions.Prescription[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 143,
                      "name": "Prescription",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 62,
                      "src": "1524:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prescription_$62_storage_ptr",
                        "typeString": "struct Prescriptions.Prescription"
                      }
                    },
                    "id": 144,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1524:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_ptr",
                      "typeString": "struct Prescriptions.Prescription[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1523:23:1"
            },
            "scope": 153,
            "src": "1457:148:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 154,
        "src": "122:1485:1"
      }
    ],
    "src": "32:1576:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/Prescriptions.sol",
    "exportedSymbols": {
      "Prescriptions": [
        153
      ]
    },
    "id": 154,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:1"
      },
      {
        "id": 39,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "65:33:1"
      },
      {
        "absolutePath": "/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/User.sol",
        "file": "./User.sol",
        "id": 40,
        "nodeType": "ImportDirective",
        "scope": 154,
        "sourceUnit": 549,
        "src": "100:20:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 153,
        "linearizedBaseContracts": [
          153
        ],
        "name": "Prescriptions",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 42,
            "name": "verifying_institution",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "151:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 41,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "151:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 44,
            "name": "UserContract",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "193:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_User_$548",
              "typeString": "contract User"
            },
            "typeName": {
              "contractScope": null,
              "id": 43,
              "name": "User",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 548,
              "src": "193:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_User_$548",
                "typeString": "contract User"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "239:51:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 47,
                      "name": "verifying_institution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "249:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 48,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 563,
                        "src": "273:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "273:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "249:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "249:34:1"
                }
              ]
            },
            "documentation": null,
            "id": 53,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:1"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:0:1"
            },
            "scope": 153,
            "src": "217:73:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Prescriptions.Prescription",
            "id": 62,
            "members": [
              {
                "constant": false,
                "id": 55,
                "name": "physician",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "326:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 54,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "326:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "name": "patient",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "353:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 56,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "353:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "name": "medicine_name",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "379:20:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 58,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "379:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "name": "medicine_amount",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "409:22:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 60,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "409:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Prescription",
            "nodeType": "StructDefinition",
            "scope": 153,
            "src": "296:208:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 67,
            "name": "prescriptions_physician",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "510:65:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Prescriptions.Prescription[])"
            },
            "typeName": {
              "id": 66,
              "keyType": {
                "id": 63,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "518:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "510:34:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Prescriptions.Prescription[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 64,
                  "name": "Prescription",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 62,
                  "src": "529:12:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Prescription_$62_storage_ptr",
                    "typeString": "struct Prescriptions.Prescription"
                  }
                },
                "id": 65,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "529:14:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_ptr",
                  "typeString": "struct Prescriptions.Prescription[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 72,
            "name": "prescriptions_patient",
            "nodeType": "VariableDeclaration",
            "scope": 153,
            "src": "581:63:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Prescriptions.Prescription[])"
            },
            "typeName": {
              "id": 71,
              "keyType": {
                "id": 68,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "589:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "581:34:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Prescriptions.Prescription[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 69,
                  "name": "Prescription",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 62,
                  "src": "600:12:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Prescription_$62_storage_ptr",
                    "typeString": "struct Prescriptions.Prescription"
                  }
                },
                "id": 70,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "600:14:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_ptr",
                  "typeString": "struct Prescriptions.Prescription[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "738:188:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 78,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 563,
                            "src": "756:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "756:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 80,
                          "name": "verifying_institution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "770:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "756:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79207468652076657269667920696e737469747574696f6e206861732074686520726967687420746f20636f6e6e65637420707265736372697074696f6e20746f207573657221",
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "793:76:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c572522a3a88ffd25f4670a493b7a0cd229ac63cc2952d745c10df6214ad483",
                          "typeString": "literal_string \"Only the verify institution has the right to connect prescription to user!\""
                        },
                        "value": "Only the verify institution has the right to connect prescription to user!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c572522a3a88ffd25f4670a493b7a0cd229ac63cc2952d745c10df6214ad483",
                          "typeString": "literal_string \"Only the verify institution has the right to connect prescription to user!\""
                        }
                      ],
                      "id": 77,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        566,
                        567
                      ],
                      "referencedDeclaration": 567,
                      "src": "748:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "748:122:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "748:122:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 85,
                      "name": "UserContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "880:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$548",
                        "typeString": "contract User"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 87,
                          "name": "smart_contract_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "900:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 86,
                        "name": "User",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "895:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_User_$548_$",
                          "typeString": "type(contract User)"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "895:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$548",
                        "typeString": "contract User"
                      }
                    },
                    "src": "880:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$548",
                      "typeString": "contract User"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "880:39:1"
                }
              ]
            },
            "documentation": null,
            "id": 92,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "establishConnectionToUserSmartContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "name": "smart_contract_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "703:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "703:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "702:28:1"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:0:1"
            },
            "scope": 153,
            "src": "655:271:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
              "src": "998:453:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "70687973696369616e",
                              "id": 100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1047:11:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7a4bcc4bfc6dad10916882da635b169b4e796df7ded52169f3dd7d89621a0071",
                                "typeString": "literal_string \"physician\""
                              },
                              "value": "physician"
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 101,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 563,
                                "src": "1060:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1060:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_7a4bcc4bfc6dad10916882da635b169b4e796df7ded52169f3dd7d89621a0071",
                                "typeString": "literal_string \"physician\""
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 98,
                              "name": "UserContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "1016:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_User_$548",
                                "typeString": "contract User"
                              }
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checkVerification",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 481,
                            "src": "1016:30:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (string memory,address) view external returns (bool)"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1016:55:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1075:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1016:63:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520646f6e277420686176652074686520726967687420746f20637265617465206120707265736372697074696f6e21",
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1081:52:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd4fa14b7b32d8d7186aef69e0838638b3bf9f6f3c0c9338aaba778405507d4a",
                          "typeString": "literal_string \"You don't have the right to create a prescription!\""
                        },
                        "value": "You don't have the right to create a prescription!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd4fa14b7b32d8d7186aef69e0838638b3bf9f6f3c0c9338aaba778405507d4a",
                          "typeString": "literal_string \"You don't have the right to create a prescription!\""
                        }
                      ],
                      "id": 97,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        566,
                        567
                      ],
                      "referencedDeclaration": 567,
                      "src": "1008:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1008:126:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:126:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "696e7375726564",
                              "id": 112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1183:9:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fba31b96a3cc712b8fc7c59148ff4bc53c9767a5e9a1ad14afdb5d2f35bd8a43",
                                "typeString": "literal_string \"insured\""
                              },
                              "value": "insured"
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 113,
                                "name": "prescription_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 94,
                                "src": "1194:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                                  "typeString": "struct Prescriptions.Prescription memory"
                                }
                              },
                              "id": 114,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "patient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 57,
                              "src": "1194:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_fba31b96a3cc712b8fc7c59148ff4bc53c9767a5e9a1ad14afdb5d2f35bd8a43",
                                "typeString": "literal_string \"insured\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 110,
                              "name": "UserContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "1152:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_User_$548",
                                "typeString": "contract User"
                              }
                            },
                            "id": 111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checkVerification",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 481,
                            "src": "1152:30:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (string memory,address) view external returns (bool)"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1152:64:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1220:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1152:72:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546869732070617469656e74206973206e6f742072656769737465726564206f7220766572696669656421",
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1226:45:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30892ac0d7d9977ed55659448ed491488b3dea2433338b20ac15ff2e2d256da6",
                          "typeString": "literal_string \"This patient is not registered or verified!\""
                        },
                        "value": "This patient is not registered or verified!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30892ac0d7d9977ed55659448ed491488b3dea2433338b20ac15ff2e2d256da6",
                          "typeString": "literal_string \"This patient is not registered or verified!\""
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        566,
                        567
                      ],
                      "referencedDeclaration": 567,
                      "src": "1144:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:128:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:128:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 127,
                              "name": "prescription_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "1336:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                                "typeString": "struct Prescriptions.Prescription memory"
                              }
                            },
                            "id": 128,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "physician",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55,
                            "src": "1336:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 129,
                              "name": "prescription_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "1361:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                                "typeString": "struct Prescriptions.Prescription memory"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "patient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57,
                            "src": "1361:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 131,
                              "name": "prescription_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "1384:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                                "typeString": "struct Prescriptions.Prescription memory"
                              }
                            },
                            "id": 132,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "medicine_name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59,
                            "src": "1384:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 133,
                              "name": "prescription_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "1413:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                                "typeString": "struct Prescriptions.Prescription memory"
                              }
                            },
                            "id": 134,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "medicine_amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61,
                            "src": "1413:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 126,
                          "name": "Prescription",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1323:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Prescription_$62_storage_ptr_$",
                            "typeString": "type(struct Prescriptions.Prescription storage pointer)"
                          }
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1323:120:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prescription_$62_memory",
                          "typeString": "struct Prescriptions.Prescription memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Prescription_$62_memory",
                          "typeString": "struct Prescriptions.Prescription memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 121,
                          "name": "prescriptions_physician",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "1282:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Prescriptions.Prescription storage ref[] storage ref)"
                          }
                        },
                        "id": 124,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 122,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 563,
                            "src": "1306:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1306:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1282:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Prescription_$62_storage_$dyn_storage",
                          "typeString": "struct Prescriptions.Prescription storage ref[] storage ref"
                        }
                      },
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1282:40:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Prescription_$62_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Prescriptions.Prescription storage ref) returns (uint256)"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1282:162:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "1282:162:1"
                }
              ]
            },
            "documentation": null,
            "id": 139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newPrescription",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "name": "prescription_",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "957:33:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Prescription_$62_memory_ptr",
                    "typeString": "struct Prescriptions.Prescription"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 93,
                    "name": "Prescription",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 62,
                    "src": "957:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prescription_$62_storage_ptr",
                      "typeString": "struct Prescriptions.Prescription"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "956:35:1"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "998:0:1"
            },
            "scope": 153,
            "src": "932:519:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "1546:59:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 147,
                      "name": "prescriptions_physician",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "1563:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Prescriptions.Prescription storage ref[] storage ref)"
                      }
                    },
                    "id": 149,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 148,
                      "name": "public_key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1587:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1563:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Prescription_$62_storage_$dyn_storage",
                      "typeString": "struct Prescriptions.Prescription storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 146,
                  "id": 150,
                  "nodeType": "Return",
                  "src": "1556:42:1"
                }
              ]
            },
            "documentation": null,
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrescriptions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "1483:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1483:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1482:20:1"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "1524:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Prescription_$62_memory_$dyn_memory_ptr",
                    "typeString": "struct Prescriptions.Prescription[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 143,
                      "name": "Prescription",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 62,
                      "src": "1524:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prescription_$62_storage_ptr",
                        "typeString": "struct Prescriptions.Prescription"
                      }
                    },
                    "id": 144,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1524:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Prescription_$62_storage_$dyn_storage_ptr",
                      "typeString": "struct Prescriptions.Prescription[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1523:23:1"
            },
            "scope": 153,
            "src": "1457:148:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 154,
        "src": "122:1485:1"
      }
    ],
    "src": "32:1576:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x1ED531Aab0a1EE3aC69aBDd508eE273B252d5111",
      "transactionHash": "0x93d5cec4ee728a632fa22aadba1db1457b404d21d0e01e55b2bacc0f5e81adaa"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-28T20:00:43.922Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}