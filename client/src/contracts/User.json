{
  "contractName": "User",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "insureds",
      "outputs": [
        {
          "internalType": "string",
          "name": "surname",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "street",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "street_number",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "post_code",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "city",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "birth_date",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "insurance",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "insurance_number",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "insured_number",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "insured_status",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "physicians",
      "outputs": [
        {
          "internalType": "string",
          "name": "job_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "surname",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "physician_number",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "street",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "street_number",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "post_code",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "city",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "telephone_number",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "business_number",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "verifying_institution",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "surname",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "street",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "street_number",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "post_code",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "city",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "birth_date",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "insurance",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "insurance_number",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "insured_number",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "insured_status",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ],
          "internalType": "struct User.Insured",
          "name": "insured_",
          "type": "tuple"
        }
      ],
      "name": "addNewInsured",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "public_key",
          "type": "address"
        }
      ],
      "name": "verifyInsured",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "public_key",
          "type": "address"
        }
      ],
      "name": "getInsured",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "surname",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "street",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "street_number",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "post_code",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "city",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "birth_date",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "insurance",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "insurance_number",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "insured_number",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "insured_status",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ],
          "internalType": "struct User.Insured",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "job_title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "surname",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "physician_number",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "street",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "street_number",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "post_code",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "city",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "telephone_number",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "business_number",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ],
          "internalType": "struct User.Physician",
          "name": "physician_",
          "type": "tuple"
        }
      ],
      "name": "addNewPhysician",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "public_key",
          "type": "address"
        }
      ],
      "name": "verifyPhysician",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "public_key",
          "type": "address"
        }
      ],
      "name": "getPhysician",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "job_title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "surname",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "physician_number",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "street",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "street_number",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "post_code",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "city",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "telephone_number",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "business_number",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ],
          "internalType": "struct User.Physician",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "public_key",
          "type": "address"
        }
      ],
      "name": "checkInsuredVerification",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "public_key",
          "type": "address"
        }
      ],
      "name": "checkPhysicianVerification",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"surname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"street\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"street_number\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"post_code\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"birth_date\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"insurance\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"insurance_number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"insured_number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"insured_status\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"internalType\":\"struct User.Insured\",\"name\":\"insured_\",\"type\":\"tuple\"}],\"name\":\"addNewInsured\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"job_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"surname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"physician_number\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"street\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"street_number\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"post_code\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"telephone_number\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"business_number\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"internalType\":\"struct User.Physician\",\"name\":\"physician_\",\"type\":\"tuple\"}],\"name\":\"addNewPhysician\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"public_key\",\"type\":\"address\"}],\"name\":\"checkInsuredVerification\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"public_key\",\"type\":\"address\"}],\"name\":\"checkPhysicianVerification\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"public_key\",\"type\":\"address\"}],\"name\":\"getInsured\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"surname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"street\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"street_number\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"post_code\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"birth_date\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"insurance\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"insurance_number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"insured_number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"insured_status\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"internalType\":\"struct User.Insured\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"public_key\",\"type\":\"address\"}],\"name\":\"getPhysician\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"job_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"surname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"physician_number\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"street\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"street_number\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"post_code\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"telephone_number\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"business_number\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"internalType\":\"struct User.Physician\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"insureds\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"surname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"street\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"street_number\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"post_code\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"birth_date\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"insurance\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"insurance_number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"insured_number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"insured_status\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"physicians\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"job_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"surname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"physician_number\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"street\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"street_number\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"post_code\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"telephone_number\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"business_number\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"public_key\",\"type\":\"address\"}],\"name\":\"verifyInsured\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"public_key\",\"type\":\"address\"}],\"name\":\"verifyPhysician\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"verifying_institution\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/User.sol\":\"User\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/User.sol\":{\"keccak256\":\"0xe439443023d4658152b4fa3ff87daf6e7a1ddfb2b162cfd6c716098ea92aace8\",\"urls\":[\"bzz-raw://97832132855f433a3332c7e69b25e96fd92a8dcdc42a523128b6fac17234eaae\",\"dweb:/ipfs/QmXRwKuPe1Cmir9SmDJnkQU7ZUoCVyECAtueZT5dQNfHkK\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612dbf806100606000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806381eceeb71161007157806381eceeb714610176578063c11dd80814610194578063c2b85314146101c4578063c863b9e5146101f4578063e669845a1461022f578063f5860dfc14610269576100a9565b80630ee60c57146100ae5780631ee952ad146100de57806327b52abc1461010e5780634b7b98421461013e5780636e98f9f31461015a575b600080fd5b6100c860048036036100c3919081019061240e565b610299565b6040516100d59190612970565b60405180910390f35b6100f860048036036100f3919081019061240e565b61040f565b6040516101059190612bf4565b60405180910390f35b6101286004803603610123919081019061240e565b610961565b6040516101359190612970565b60405180910390f35b61015860048036036101539190810190612437565b610a1f565b005b610174600480360361016f9190810190612478565b610bff565b005b61017e610dc9565b60405161018b9190612955565b60405180910390f35b6101ae60048036036101a9919081019061240e565b610dee565b6040516101bb9190612bd2565b60405180910390f35b6101de60048036036101d9919081019061240e565b61134a565b6040516101eb9190612970565b60405180910390f35b61020e6004803603610209919081019061240e565b611408565b6040516102269c9b9a9998979695949392919061298b565b60405180910390f35b6102496004803603610244919081019061240e565b61189d565b6040516102609b9a99989796959493929190612a76565b60405180910390f35b610283600480360361027e919081019061240e565b611d2c565b6040516102909190612970565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032190612b72565b60405180910390fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154116103af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a690612b52565b60405180910390fd5b6001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a0160006101000a81548160ff021916908315150217905550919050565b610417611ea1565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154111561095b57600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180610160016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105465780601f1061051b57610100808354040283529160200191610546565b820191906000526020600020905b81548152906001019060200180831161052957829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105e85780601f106105bd576101008083540402835291602001916105e8565b820191906000526020600020905b8154815290600101906020018083116105cb57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561068a5780601f1061065f5761010080835404028352916020019161068a565b820191906000526020600020905b81548152906001019060200180831161066d57829003601f168201915b5050505050815260200160038201548152602001600482018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107365780601f1061070b57610100808354040283529160200191610736565b820191906000526020600020905b81548152906001019060200180831161071957829003601f168201915b50505050508152602001600582018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107d85780601f106107ad576101008083540402835291602001916107d8565b820191906000526020600020905b8154815290600101906020018083116107bb57829003601f168201915b5050505050815260200160068201548152602001600782018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108845780601f1061085957610100808354040283529160200191610884565b820191906000526020600020905b81548152906001019060200180831161086757829003601f168201915b50505050508152602001600882018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109265780601f106108fb57610100808354040283529160200191610926565b820191906000526020600020905b81548152906001019060200180831161090957829003601f168201915b5050505050815260200160098201548152602001600a820160009054906101000a900460ff161515151581525050905061095c565b5b919050565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060090154118015610a07575060011515600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600b0160009054906101000a900460ff161515145b15610a155760019050610a1a565b600090505b919050565b60405180610180016040528082600001518152602001826020015181526020018260400151815260200182606001518152602001826080015181526020018260a0015181526020018260c0015181526020018260e00151815260200182610100015181526020018261012001518152602001826101400151815260200160001515815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610afe929190611efd565b506020820151816001019080519060200190610b1b929190611efd565b506040820151816002019080519060200190610b38929190611efd565b506060820151816003019080519060200190610b55929190611efd565b506080820151816004015560a0820151816005019080519060200190610b7c929190611efd565b5060c0820151816006019080519060200190610b99929190611efd565b5060e0820151816007019080519060200190610bb6929190611efd565b506101008201518160080155610120820151816009015561014082015181600a015561016082015181600b0160006101000a81548160ff02191690831515021790555090505050565b60405180610160016040528082600001518152602001826020015181526020018260400151815260200182606001518152602001826080015181526020018260a0015181526020018260c0015181526020018260e0015181526020018261010001518152602001826101200151815260200160001515815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610cd3929190611efd565b506020820151816001019080519060200190610cf0929190611efd565b506040820151816002019080519060200190610d0d929190611efd565b50606082015181600301556080820151816004019080519060200190610d34929190611efd565b5060a0820151816005019080519060200190610d51929190611efd565b5060c0820151816006015560e0820151816007019080519060200190610d78929190611efd565b50610100820151816008019080519060200190610d96929190611efd565b50610120820151816009015561014082015181600a0160006101000a81548160ff02191690831515021790555090505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610df6611f7d565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060090154111561134457600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180610180016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f255780601f10610efa57610100808354040283529160200191610f25565b820191906000526020600020905b815481529060010190602001808311610f0857829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fc75780601f10610f9c57610100808354040283529160200191610fc7565b820191906000526020600020905b815481529060010190602001808311610faa57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110695780601f1061103e57610100808354040283529160200191611069565b820191906000526020600020905b81548152906001019060200180831161104c57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561110b5780601f106110e05761010080835404028352916020019161110b565b820191906000526020600020905b8154815290600101906020018083116110ee57829003601f168201915b5050505050815260200160048201548152602001600582018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111b75780601f1061118c576101008083540402835291602001916111b7565b820191906000526020600020905b81548152906001019060200180831161119a57829003601f168201915b50505050508152602001600682018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112595780601f1061122e57610100808354040283529160200191611259565b820191906000526020600020905b81548152906001019060200180831161123c57829003601f168201915b50505050508152602001600782018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112fb5780601f106112d0576101008083540402835291602001916112fb565b820191906000526020600020905b8154815290600101906020018083116112de57829003601f168201915b505050505081526020016008820154815260200160098201548152602001600a8201548152602001600b820160009054906101000a900460ff1615151515815250509050611345565b5b919050565b600080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541180156113f0575060011515600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a0160009054906101000a900460ff161515145b156113fe5760019050611403565b600090505b919050565b6001602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114b45780601f10611489576101008083540402835291602001916114b4565b820191906000526020600020905b81548152906001019060200180831161149757829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115525780601f1061152757610100808354040283529160200191611552565b820191906000526020600020905b81548152906001019060200180831161153557829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115f05780601f106115c5576101008083540402835291602001916115f0565b820191906000526020600020905b8154815290600101906020018083116115d357829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561168e5780601f106116635761010080835404028352916020019161168e565b820191906000526020600020905b81548152906001019060200180831161167157829003601f168201915b505050505090806004015490806005018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117325780601f1061170757610100808354040283529160200191611732565b820191906000526020600020905b81548152906001019060200180831161171557829003601f168201915b505050505090806006018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117d05780601f106117a5576101008083540402835291602001916117d0565b820191906000526020600020905b8154815290600101906020018083116117b357829003601f168201915b505050505090806007018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561186e5780601f106118435761010080835404028352916020019161186e565b820191906000526020600020905b81548152906001019060200180831161185157829003601f168201915b50505050509080600801549080600901549080600a01549080600b0160009054906101000a900460ff1690508c565b6002602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119495780601f1061191e57610100808354040283529160200191611949565b820191906000526020600020905b81548152906001019060200180831161192c57829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119e75780601f106119bc576101008083540402835291602001916119e7565b820191906000526020600020905b8154815290600101906020018083116119ca57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a855780601f10611a5a57610100808354040283529160200191611a85565b820191906000526020600020905b815481529060010190602001808311611a6857829003601f168201915b505050505090806003015490806004018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b295780601f10611afe57610100808354040283529160200191611b29565b820191906000526020600020905b815481529060010190602001808311611b0c57829003601f168201915b505050505090806005018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611bc75780601f10611b9c57610100808354040283529160200191611bc7565b820191906000526020600020905b815481529060010190602001808311611baa57829003601f168201915b505050505090806006015490806007018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c6b5780601f10611c4057610100808354040283529160200191611c6b565b820191906000526020600020905b815481529060010190602001808311611c4e57829003601f168201915b505050505090806008018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d095780601f10611cde57610100808354040283529160200191611d09565b820191906000526020600020905b815481529060010190602001808311611cec57829003601f168201915b50505050509080600901549080600a0160009054906101000a900460ff1690508b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611dbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611db490612b92565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206009015411611e42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e3990612bb2565b60405180910390fd5b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600b0160006101000a81548160ff021916908315150217905550919050565b604051806101600160405280606081526020016060815260200160608152602001600081526020016060815260200160608152602001600081526020016060815260200160608152602001600081526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611f3e57805160ff1916838001178555611f6c565b82800160010185558215611f6c579182015b82811115611f6b578251825591602001919060010190611f50565b5b509050611f799190611fe0565b5090565b60405180610180016040528060608152602001606081526020016060815260200160608152602001600081526020016060815260200160608152602001606081526020016000815260200160008152602001600081526020016000151581525090565b61200291905b80821115611ffe576000816000905550600101611fe6565b5090565b90565b60008135905061201481612d37565b92915050565b60008135905061202981612d4e565b92915050565b600082601f83011261204057600080fd5b813561205361204e82612c43565b612c16565b9150808252602083016020830185838301111561206f57600080fd5b61207a838284612ce4565b50505092915050565b6000610180828403121561209657600080fd5b6120a1610180612c16565b9050600082013567ffffffffffffffff8111156120bd57600080fd5b6120c98482850161202f565b600083015250602082013567ffffffffffffffff8111156120e957600080fd5b6120f58482850161202f565b602083015250604082013567ffffffffffffffff81111561211557600080fd5b6121218482850161202f565b604083015250606082013567ffffffffffffffff81111561214157600080fd5b61214d8482850161202f565b6060830152506080612161848285016123f9565b60808301525060a082013567ffffffffffffffff81111561218157600080fd5b61218d8482850161202f565b60a08301525060c082013567ffffffffffffffff8111156121ad57600080fd5b6121b98482850161202f565b60c08301525060e082013567ffffffffffffffff8111156121d957600080fd5b6121e58482850161202f565b60e0830152506101006121fa848285016123f9565b61010083015250610120612210848285016123f9565b61012083015250610140612226848285016123f9565b6101408301525061016061223c8482850161201a565b6101608301525092915050565b6000610160828403121561225c57600080fd5b612267610160612c16565b9050600082013567ffffffffffffffff81111561228357600080fd5b61228f8482850161202f565b600083015250602082013567ffffffffffffffff8111156122af57600080fd5b6122bb8482850161202f565b602083015250604082013567ffffffffffffffff8111156122db57600080fd5b6122e78482850161202f565b60408301525060606122fb848285016123f9565b606083015250608082013567ffffffffffffffff81111561231b57600080fd5b6123278482850161202f565b60808301525060a082013567ffffffffffffffff81111561234757600080fd5b6123538482850161202f565b60a08301525060c0612367848285016123f9565b60c08301525060e082013567ffffffffffffffff81111561238757600080fd5b6123938482850161202f565b60e08301525061010082013567ffffffffffffffff8111156123b457600080fd5b6123c08482850161202f565b610100830152506101206123d6848285016123f9565b610120830152506101406123ec8482850161201a565b6101408301525092915050565b60008135905061240881612d65565b92915050565b60006020828403121561242057600080fd5b600061242e84828501612005565b91505092915050565b60006020828403121561244957600080fd5b600082013567ffffffffffffffff81111561246357600080fd5b61246f84828501612083565b91505092915050565b60006020828403121561248a57600080fd5b600082013567ffffffffffffffff8111156124a457600080fd5b6124b084828501612249565b91505092915050565b6124c281612c9c565b82525050565b6124d181612cae565b82525050565b6124e081612cae565b82525050565b60006124f182612c6f565b6124fb8185612c7a565b935061250b818560208601612cf3565b61251481612d26565b840191505092915050565b600061252a82612c6f565b6125348185612c8b565b9350612544818560208601612cf3565b61254d81612d26565b840191505092915050565b6000612565602783612c8b565b91507f4e6f2070687973696369616e2065786973747320756e6465722074686973206160008301527f64647265737321000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006125cb603e83612c8b565b91507f4f6e6c79207468652076657269667920696e737469747574696f6e206861732060008301527f74686520726967687420746f207665726966792070687973696369616e2100006020830152604082019050919050565b6000612631603c83612c8b565b91507f4f6e6c79207468652076657269667920696e737469747574696f6e206861732060008301527f74686520726967687420746f2076657269667920696e737572656421000000006020830152604082019050919050565b6000612697602583612c8b565b91507f4e6f20696e73757265642065786973747320756e64657220746869732061646460008301527f72657373210000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061018083016000830151848203600086015261270e82826124e6565b9150506020830151848203602086015261272882826124e6565b9150506040830151848203604086015261274282826124e6565b9150506060830151848203606086015261275c82826124e6565b91505060808301516127716080860182612937565b5060a083015184820360a086015261278982826124e6565b91505060c083015184820360c08601526127a382826124e6565b91505060e083015184820360e08601526127bd82826124e6565b9150506101008301516127d4610100860182612937565b506101208301516127e9610120860182612937565b506101408301516127fe610140860182612937565b506101608301516128136101608601826124c8565b508091505092915050565b600061016083016000830151848203600086015261283c82826124e6565b9150506020830151848203602086015261285682826124e6565b9150506040830151848203604086015261287082826124e6565b91505060608301516128856060860182612937565b506080830151848203608086015261289d82826124e6565b91505060a083015184820360a08601526128b782826124e6565b91505060c08301516128cc60c0860182612937565b5060e083015184820360e08601526128e482826124e6565b91505061010083015184820361010086015261290082826124e6565b915050610120830151612917610120860182612937565b5061014083015161292c6101408601826124c8565b508091505092915050565b61294081612cda565b82525050565b61294f81612cda565b82525050565b600060208201905061296a60008301846124b9565b92915050565b600060208201905061298560008301846124d7565b92915050565b60006101808201905081810360008301526129a6818f61251f565b905081810360208301526129ba818e61251f565b905081810360408301526129ce818d61251f565b905081810360608301526129e2818c61251f565b90506129f1608083018b612946565b81810360a0830152612a03818a61251f565b905081810360c0830152612a17818961251f565b905081810360e0830152612a2b818861251f565b9050612a3b610100830187612946565b612a49610120830186612946565b612a57610140830185612946565b612a656101608301846124d7565b9d9c50505050505050505050505050565b6000610160820190508181036000830152612a91818e61251f565b90508181036020830152612aa5818d61251f565b90508181036040830152612ab9818c61251f565b9050612ac8606083018b612946565b8181036080830152612ada818a61251f565b905081810360a0830152612aee818961251f565b9050612afd60c0830188612946565b81810360e0830152612b0f818761251f565b9050818103610100830152612b24818661251f565b9050612b34610120830185612946565b612b426101408301846124d7565b9c9b505050505050505050505050565b60006020820190508181036000830152612b6b81612558565b9050919050565b60006020820190508181036000830152612b8b816125be565b9050919050565b60006020820190508181036000830152612bab81612624565b9050919050565b60006020820190508181036000830152612bcb8161268a565b9050919050565b60006020820190508181036000830152612bec81846126f0565b905092915050565b60006020820190508181036000830152612c0e818461281e565b905092915050565b6000604051905081810181811067ffffffffffffffff82111715612c3957600080fd5b8060405250919050565b600067ffffffffffffffff821115612c5a57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612ca782612cba565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015612d11578082015181840152602081019050612cf6565b83811115612d20576000848401525b50505050565b6000601f19601f8301169050919050565b612d4081612c9c565b8114612d4b57600080fd5b50565b612d5781612cae565b8114612d6257600080fd5b50565b612d6e81612cda565b8114612d7957600080fd5b5056fea365627a7a72315820b8559102c270d17f6a2c5ef31e307fe7a7df5a305e36f86fc12b4347182c408f6c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c806381eceeb71161007157806381eceeb714610176578063c11dd80814610194578063c2b85314146101c4578063c863b9e5146101f4578063e669845a1461022f578063f5860dfc14610269576100a9565b80630ee60c57146100ae5780631ee952ad146100de57806327b52abc1461010e5780634b7b98421461013e5780636e98f9f31461015a575b600080fd5b6100c860048036036100c3919081019061240e565b610299565b6040516100d59190612970565b60405180910390f35b6100f860048036036100f3919081019061240e565b61040f565b6040516101059190612bf4565b60405180910390f35b6101286004803603610123919081019061240e565b610961565b6040516101359190612970565b60405180910390f35b61015860048036036101539190810190612437565b610a1f565b005b610174600480360361016f9190810190612478565b610bff565b005b61017e610dc9565b60405161018b9190612955565b60405180910390f35b6101ae60048036036101a9919081019061240e565b610dee565b6040516101bb9190612bd2565b60405180910390f35b6101de60048036036101d9919081019061240e565b61134a565b6040516101eb9190612970565b60405180910390f35b61020e6004803603610209919081019061240e565b611408565b6040516102269c9b9a9998979695949392919061298b565b60405180910390f35b6102496004803603610244919081019061240e565b61189d565b6040516102609b9a99989796959493929190612a76565b60405180910390f35b610283600480360361027e919081019061240e565b611d2c565b6040516102909190612970565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032190612b72565b60405180910390fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154116103af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a690612b52565b60405180910390fd5b6001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a0160006101000a81548160ff021916908315150217905550919050565b610417611ea1565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154111561095b57600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180610160016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105465780601f1061051b57610100808354040283529160200191610546565b820191906000526020600020905b81548152906001019060200180831161052957829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105e85780601f106105bd576101008083540402835291602001916105e8565b820191906000526020600020905b8154815290600101906020018083116105cb57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561068a5780601f1061065f5761010080835404028352916020019161068a565b820191906000526020600020905b81548152906001019060200180831161066d57829003601f168201915b5050505050815260200160038201548152602001600482018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107365780601f1061070b57610100808354040283529160200191610736565b820191906000526020600020905b81548152906001019060200180831161071957829003601f168201915b50505050508152602001600582018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107d85780601f106107ad576101008083540402835291602001916107d8565b820191906000526020600020905b8154815290600101906020018083116107bb57829003601f168201915b5050505050815260200160068201548152602001600782018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108845780601f1061085957610100808354040283529160200191610884565b820191906000526020600020905b81548152906001019060200180831161086757829003601f168201915b50505050508152602001600882018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109265780601f106108fb57610100808354040283529160200191610926565b820191906000526020600020905b81548152906001019060200180831161090957829003601f168201915b5050505050815260200160098201548152602001600a820160009054906101000a900460ff161515151581525050905061095c565b5b919050565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060090154118015610a07575060011515600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600b0160009054906101000a900460ff161515145b15610a155760019050610a1a565b600090505b919050565b60405180610180016040528082600001518152602001826020015181526020018260400151815260200182606001518152602001826080015181526020018260a0015181526020018260c0015181526020018260e00151815260200182610100015181526020018261012001518152602001826101400151815260200160001515815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610afe929190611efd565b506020820151816001019080519060200190610b1b929190611efd565b506040820151816002019080519060200190610b38929190611efd565b506060820151816003019080519060200190610b55929190611efd565b506080820151816004015560a0820151816005019080519060200190610b7c929190611efd565b5060c0820151816006019080519060200190610b99929190611efd565b5060e0820151816007019080519060200190610bb6929190611efd565b506101008201518160080155610120820151816009015561014082015181600a015561016082015181600b0160006101000a81548160ff02191690831515021790555090505050565b60405180610160016040528082600001518152602001826020015181526020018260400151815260200182606001518152602001826080015181526020018260a0015181526020018260c0015181526020018260e0015181526020018261010001518152602001826101200151815260200160001515815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610cd3929190611efd565b506020820151816001019080519060200190610cf0929190611efd565b506040820151816002019080519060200190610d0d929190611efd565b50606082015181600301556080820151816004019080519060200190610d34929190611efd565b5060a0820151816005019080519060200190610d51929190611efd565b5060c0820151816006015560e0820151816007019080519060200190610d78929190611efd565b50610100820151816008019080519060200190610d96929190611efd565b50610120820151816009015561014082015181600a0160006101000a81548160ff02191690831515021790555090505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610df6611f7d565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060090154111561134457600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180610180016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f255780601f10610efa57610100808354040283529160200191610f25565b820191906000526020600020905b815481529060010190602001808311610f0857829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fc75780601f10610f9c57610100808354040283529160200191610fc7565b820191906000526020600020905b815481529060010190602001808311610faa57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110695780601f1061103e57610100808354040283529160200191611069565b820191906000526020600020905b81548152906001019060200180831161104c57829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561110b5780601f106110e05761010080835404028352916020019161110b565b820191906000526020600020905b8154815290600101906020018083116110ee57829003601f168201915b5050505050815260200160048201548152602001600582018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111b75780601f1061118c576101008083540402835291602001916111b7565b820191906000526020600020905b81548152906001019060200180831161119a57829003601f168201915b50505050508152602001600682018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112595780601f1061122e57610100808354040283529160200191611259565b820191906000526020600020905b81548152906001019060200180831161123c57829003601f168201915b50505050508152602001600782018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112fb5780601f106112d0576101008083540402835291602001916112fb565b820191906000526020600020905b8154815290600101906020018083116112de57829003601f168201915b505050505081526020016008820154815260200160098201548152602001600a8201548152602001600b820160009054906101000a900460ff1615151515815250509050611345565b5b919050565b600080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541180156113f0575060011515600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a0160009054906101000a900460ff161515145b156113fe5760019050611403565b600090505b919050565b6001602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114b45780601f10611489576101008083540402835291602001916114b4565b820191906000526020600020905b81548152906001019060200180831161149757829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115525780601f1061152757610100808354040283529160200191611552565b820191906000526020600020905b81548152906001019060200180831161153557829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115f05780601f106115c5576101008083540402835291602001916115f0565b820191906000526020600020905b8154815290600101906020018083116115d357829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561168e5780601f106116635761010080835404028352916020019161168e565b820191906000526020600020905b81548152906001019060200180831161167157829003601f168201915b505050505090806004015490806005018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117325780601f1061170757610100808354040283529160200191611732565b820191906000526020600020905b81548152906001019060200180831161171557829003601f168201915b505050505090806006018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117d05780601f106117a5576101008083540402835291602001916117d0565b820191906000526020600020905b8154815290600101906020018083116117b357829003601f168201915b505050505090806007018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561186e5780601f106118435761010080835404028352916020019161186e565b820191906000526020600020905b81548152906001019060200180831161185157829003601f168201915b50505050509080600801549080600901549080600a01549080600b0160009054906101000a900460ff1690508c565b6002602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119495780601f1061191e57610100808354040283529160200191611949565b820191906000526020600020905b81548152906001019060200180831161192c57829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119e75780601f106119bc576101008083540402835291602001916119e7565b820191906000526020600020905b8154815290600101906020018083116119ca57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a855780601f10611a5a57610100808354040283529160200191611a85565b820191906000526020600020905b815481529060010190602001808311611a6857829003601f168201915b505050505090806003015490806004018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b295780601f10611afe57610100808354040283529160200191611b29565b820191906000526020600020905b815481529060010190602001808311611b0c57829003601f168201915b505050505090806005018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611bc75780601f10611b9c57610100808354040283529160200191611bc7565b820191906000526020600020905b815481529060010190602001808311611baa57829003601f168201915b505050505090806006015490806007018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c6b5780601f10611c4057610100808354040283529160200191611c6b565b820191906000526020600020905b815481529060010190602001808311611c4e57829003601f168201915b505050505090806008018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d095780601f10611cde57610100808354040283529160200191611d09565b820191906000526020600020905b815481529060010190602001808311611cec57829003601f168201915b50505050509080600901549080600a0160009054906101000a900460ff1690508b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611dbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611db490612b92565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206009015411611e42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e3990612bb2565b60405180910390fd5b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600b0160006101000a81548160ff021916908315150217905550919050565b604051806101600160405280606081526020016060815260200160608152602001600081526020016060815260200160608152602001600081526020016060815260200160608152602001600081526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611f3e57805160ff1916838001178555611f6c565b82800160010185558215611f6c579182015b82811115611f6b578251825591602001919060010190611f50565b5b509050611f799190611fe0565b5090565b60405180610180016040528060608152602001606081526020016060815260200160608152602001600081526020016060815260200160608152602001606081526020016000815260200160008152602001600081526020016000151581525090565b61200291905b80821115611ffe576000816000905550600101611fe6565b5090565b90565b60008135905061201481612d37565b92915050565b60008135905061202981612d4e565b92915050565b600082601f83011261204057600080fd5b813561205361204e82612c43565b612c16565b9150808252602083016020830185838301111561206f57600080fd5b61207a838284612ce4565b50505092915050565b6000610180828403121561209657600080fd5b6120a1610180612c16565b9050600082013567ffffffffffffffff8111156120bd57600080fd5b6120c98482850161202f565b600083015250602082013567ffffffffffffffff8111156120e957600080fd5b6120f58482850161202f565b602083015250604082013567ffffffffffffffff81111561211557600080fd5b6121218482850161202f565b604083015250606082013567ffffffffffffffff81111561214157600080fd5b61214d8482850161202f565b6060830152506080612161848285016123f9565b60808301525060a082013567ffffffffffffffff81111561218157600080fd5b61218d8482850161202f565b60a08301525060c082013567ffffffffffffffff8111156121ad57600080fd5b6121b98482850161202f565b60c08301525060e082013567ffffffffffffffff8111156121d957600080fd5b6121e58482850161202f565b60e0830152506101006121fa848285016123f9565b61010083015250610120612210848285016123f9565b61012083015250610140612226848285016123f9565b6101408301525061016061223c8482850161201a565b6101608301525092915050565b6000610160828403121561225c57600080fd5b612267610160612c16565b9050600082013567ffffffffffffffff81111561228357600080fd5b61228f8482850161202f565b600083015250602082013567ffffffffffffffff8111156122af57600080fd5b6122bb8482850161202f565b602083015250604082013567ffffffffffffffff8111156122db57600080fd5b6122e78482850161202f565b60408301525060606122fb848285016123f9565b606083015250608082013567ffffffffffffffff81111561231b57600080fd5b6123278482850161202f565b60808301525060a082013567ffffffffffffffff81111561234757600080fd5b6123538482850161202f565b60a08301525060c0612367848285016123f9565b60c08301525060e082013567ffffffffffffffff81111561238757600080fd5b6123938482850161202f565b60e08301525061010082013567ffffffffffffffff8111156123b457600080fd5b6123c08482850161202f565b610100830152506101206123d6848285016123f9565b610120830152506101406123ec8482850161201a565b6101408301525092915050565b60008135905061240881612d65565b92915050565b60006020828403121561242057600080fd5b600061242e84828501612005565b91505092915050565b60006020828403121561244957600080fd5b600082013567ffffffffffffffff81111561246357600080fd5b61246f84828501612083565b91505092915050565b60006020828403121561248a57600080fd5b600082013567ffffffffffffffff8111156124a457600080fd5b6124b084828501612249565b91505092915050565b6124c281612c9c565b82525050565b6124d181612cae565b82525050565b6124e081612cae565b82525050565b60006124f182612c6f565b6124fb8185612c7a565b935061250b818560208601612cf3565b61251481612d26565b840191505092915050565b600061252a82612c6f565b6125348185612c8b565b9350612544818560208601612cf3565b61254d81612d26565b840191505092915050565b6000612565602783612c8b565b91507f4e6f2070687973696369616e2065786973747320756e6465722074686973206160008301527f64647265737321000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006125cb603e83612c8b565b91507f4f6e6c79207468652076657269667920696e737469747574696f6e206861732060008301527f74686520726967687420746f207665726966792070687973696369616e2100006020830152604082019050919050565b6000612631603c83612c8b565b91507f4f6e6c79207468652076657269667920696e737469747574696f6e206861732060008301527f74686520726967687420746f2076657269667920696e737572656421000000006020830152604082019050919050565b6000612697602583612c8b565b91507f4e6f20696e73757265642065786973747320756e64657220746869732061646460008301527f72657373210000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061018083016000830151848203600086015261270e82826124e6565b9150506020830151848203602086015261272882826124e6565b9150506040830151848203604086015261274282826124e6565b9150506060830151848203606086015261275c82826124e6565b91505060808301516127716080860182612937565b5060a083015184820360a086015261278982826124e6565b91505060c083015184820360c08601526127a382826124e6565b91505060e083015184820360e08601526127bd82826124e6565b9150506101008301516127d4610100860182612937565b506101208301516127e9610120860182612937565b506101408301516127fe610140860182612937565b506101608301516128136101608601826124c8565b508091505092915050565b600061016083016000830151848203600086015261283c82826124e6565b9150506020830151848203602086015261285682826124e6565b9150506040830151848203604086015261287082826124e6565b91505060608301516128856060860182612937565b506080830151848203608086015261289d82826124e6565b91505060a083015184820360a08601526128b782826124e6565b91505060c08301516128cc60c0860182612937565b5060e083015184820360e08601526128e482826124e6565b91505061010083015184820361010086015261290082826124e6565b915050610120830151612917610120860182612937565b5061014083015161292c6101408601826124c8565b508091505092915050565b61294081612cda565b82525050565b61294f81612cda565b82525050565b600060208201905061296a60008301846124b9565b92915050565b600060208201905061298560008301846124d7565b92915050565b60006101808201905081810360008301526129a6818f61251f565b905081810360208301526129ba818e61251f565b905081810360408301526129ce818d61251f565b905081810360608301526129e2818c61251f565b90506129f1608083018b612946565b81810360a0830152612a03818a61251f565b905081810360c0830152612a17818961251f565b905081810360e0830152612a2b818861251f565b9050612a3b610100830187612946565b612a49610120830186612946565b612a57610140830185612946565b612a656101608301846124d7565b9d9c50505050505050505050505050565b6000610160820190508181036000830152612a91818e61251f565b90508181036020830152612aa5818d61251f565b90508181036040830152612ab9818c61251f565b9050612ac8606083018b612946565b8181036080830152612ada818a61251f565b905081810360a0830152612aee818961251f565b9050612afd60c0830188612946565b81810360e0830152612b0f818761251f565b9050818103610100830152612b24818661251f565b9050612b34610120830185612946565b612b426101408301846124d7565b9c9b505050505050505050505050565b60006020820190508181036000830152612b6b81612558565b9050919050565b60006020820190508181036000830152612b8b816125be565b9050919050565b60006020820190508181036000830152612bab81612624565b9050919050565b60006020820190508181036000830152612bcb8161268a565b9050919050565b60006020820190508181036000830152612bec81846126f0565b905092915050565b60006020820190508181036000830152612c0e818461281e565b905092915050565b6000604051905081810181811067ffffffffffffffff82111715612c3957600080fd5b8060405250919050565b600067ffffffffffffffff821115612c5a57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612ca782612cba565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015612d11578082015181840152602081019050612cf6565b83811115612d20576000848401525b50505050565b6000601f19601f8301169050919050565b612d4081612c9c565b8114612d4b57600080fd5b50565b612d5781612cae565b8114612d6257600080fd5b50565b612d6e81612cda565b8114612d7957600080fd5b5056fea365627a7a72315820b8559102c270d17f6a2c5ef31e307fe7a7df5a305e36f86fc12b4347182c408f6c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "243:3967:2:-;;;306:73;8:9:-1;5:2;;;30:1;27;20:12;5:2;306:73:2;362:10;338:21;;:34;;;;;;;;;;;;;;;;;;243:3967;;;;;;",
  "deployedSourceMap": "243:3967:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;243:3967:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3046:346;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3473:197;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3676:259;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1538:336;;;;;;;;;;;;;;;;:::i;:::-;;2609:347;;;;;;;;;;;;;;;;:::i;:::-;;263:36;;;:::i;:::-;;;;;;;;;;;;;;;;2377:187;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3941:267;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1303:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1447:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;1964:334;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3046:346;3107:4;3144:21;;;;;;;;;;;3130:35;;:10;:35;;;3122:110;;;;;;;;;;;;;;;;;;;;;;3292:1;3250:10;:22;3261:10;3250:22;;;;;;;;;;;;;;;:39;;;:43;3242:95;;;;;;;;;;;;;;;;;;;;;;3381:4;3347:10;:22;3358:10;3347:22;;;;;;;;;;;;;;;:31;;;:38;;;;;;;;;;;;;;;;;;3046:346;;;:::o;3473:197::-;3535:16;;:::i;:::-;3607:1;3565:10;:22;3576:10;3565:22;;;;;;;;;;;;;;;:39;;;:43;3562:101;;;3630:10;:22;3641:10;3630:22;;;;;;;;;;;;;;;3623:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3562:101;3473:197;;;;:::o;3676:259::-;3751:4;3807:1;3769:8;:20;3778:10;3769:20;;;;;;;;;;;;;;;:35;;;:39;:80;;;;;3845:4;3812:37;;:8;:20;3821:10;3812:20;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:37;;;3769:80;3766:163;;;3871:4;3864:11;;;;3766:163;3913:5;3906:12;;3676:259;;;;:::o;1538:336::-;1626:241;;;;;;;;1634:8;:16;;;1626:241;;;;1652:8;:13;;;1626:241;;;;1667:8;:15;;;1626:241;;;;1684:8;:22;;;1626:241;;;;1708:8;:18;;;1626:241;;;;1728:8;:13;;;1626:241;;;;1743:8;:19;;;1626:241;;;;1764:8;:18;;;1626:241;;;;1784:8;:25;;;1626:241;;;;1811:8;:23;;;1626:241;;;;1836:8;:23;;;1626:241;;;;1861:5;1626:241;;;;;1603:8;:20;1612:10;1603:20;;;;;;;;;;;;;;;:264;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1538:336;:::o;2609:347::-;2704:245;;;;;;;;2714:10;:20;;;2704:245;;;;2736:10;:18;;;2704:245;;;;2756:10;:15;;;2704:245;;;;2773:10;:27;;;2704:245;;;;2802:10;:17;;;2704:245;;;;2821:10;:24;;;2704:245;;;;2847:10;:20;;;2704:245;;;;2869:10;:15;;;2704:245;;;;2886:10;:27;;;2704:245;;;;2915:10;:26;;;2704:245;;;;2943:5;2704:245;;;;;2679:10;:22;2690:10;2679:22;;;;;;;;;;;;;;;:270;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2609:347;:::o;263:36::-;;;;;;;;;;;;;:::o;2377:187::-;2437:14;;:::i;:::-;2503:1;2465:8;:20;2474:10;2465:20;;;;;;;;;;;;;;;:35;;;:39;2462:95;;;2526:8;:20;2535:10;2526:20;;;;;;;;;;;;;;;2519:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2462:95;2377:187;;;;:::o;3941:267::-;4018:4;4078:1;4036:10;:22;4047:10;4036:22;;;;;;;;;;;;;;;:39;;;:43;:86;;;;;4118:4;4083:39;;:10;:22;4094:10;4083:22;;;;;;;;;;;;;;;:31;;;;;;;;;;;;:39;;;4036:86;4033:169;;;4144:4;4137:11;;;;4033:169;4186:5;4179:12;;3941:267;;;;:::ooo;1964:334::-;2023:4;2060:21;;;;;;;;;;;2046:35;;:10;:35;;;2038:108;;;;;;;;;;;;;;;;;;;;;;2202:1;2164:8;:20;2173:10;2164:20;;;;;;;;;;;;;;;:35;;;:39;2156:89;;;;;;;;;;;;;;;;;;;;;;2287:4;2255:8;:20;2264:10;2255:20;;;;;;;;;;;;;;;:29;;;:36;;;;;;;;;;;;;;;;;;1964:334;;;:::o;243:3967::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:124;;219:6;206:20;197:29;;231:30;255:5;231:30;;;191:75;;;;;274:434;;372:3;365:4;357:6;353:17;349:27;339:2;;390:1;387;380:12;339:2;427:6;414:20;449:61;464:45;502:6;464:45;;;449:61;;;440:70;;530:6;523:5;516:21;566:4;558:6;554:17;599:4;592:5;588:16;634:3;625:6;620:3;616:16;613:25;610:2;;;651:1;648;641:12;610:2;661:41;695:6;690:3;685;661:41;;;332:376;;;;;;;;742:2633;;855:6;843:9;838:3;834:19;830:32;827:2;;;875:1;872;865:12;827:2;893:22;908:6;893:22;;;884:31;;996:1;985:9;981:17;968:31;1019:18;1011:6;1008:30;1005:2;;;1051:1;1048;1041:12;1005:2;1086:55;1137:3;1128:6;1117:9;1113:22;1086:55;;;1079:4;1072:5;1068:16;1061:81;925:228;1231:2;1220:9;1216:18;1203:32;1255:18;1247:6;1244:30;1241:2;;;1287:1;1284;1277:12;1241:2;1322:55;1373:3;1364:6;1353:9;1349:22;1322:55;;;1315:4;1308:5;1304:16;1297:81;1163:226;1469:2;1458:9;1454:18;1441:32;1493:18;1485:6;1482:30;1479:2;;;1525:1;1522;1515:12;1479:2;1560:55;1611:3;1602:6;1591:9;1587:22;1560:55;;;1553:4;1546:5;1542:16;1535:81;1399:228;1714:2;1703:9;1699:18;1686:32;1738:18;1730:6;1727:30;1724:2;;;1770:1;1767;1760:12;1724:2;1805:55;1856:3;1847:6;1836:9;1832:22;1805:55;;;1798:4;1791:5;1787:16;1780:81;1637:235;1927:3;1961:49;2006:3;1997:6;1986:9;1982:22;1961:49;;;1954:4;1947:5;1943:16;1936:75;1882:140;2100:3;2089:9;2085:19;2072:33;2125:18;2117:6;2114:30;2111:2;;;2157:1;2154;2147:12;2111:2;2192:55;2243:3;2234:6;2223:9;2219:22;2192:55;;;2185:4;2178:5;2174:16;2167:81;2032:227;2343:3;2332:9;2328:19;2315:33;2368:18;2360:6;2357:30;2354:2;;;2400:1;2397;2390:12;2354:2;2435:55;2486:3;2477:6;2466:9;2462:22;2435:55;;;2428:4;2421:5;2417:16;2410:81;2269:233;2585:3;2574:9;2570:19;2557:33;2610:18;2602:6;2599:30;2596:2;;;2642:1;2639;2632:12;2596:2;2677:55;2728:3;2719:6;2708:9;2704:22;2677:55;;;2670:4;2663:5;2659:16;2652:81;2512:232;2806:3;2842:49;2887:3;2878:6;2867:9;2863:22;2842:49;;;2833:6;2826:5;2822:18;2815:77;2754:149;2963:3;2999:49;3044:3;3035:6;3024:9;3020:22;2999:49;;;2990:6;2983:5;2979:18;2972:77;2913:147;3120:3;3156:49;3201:3;3192:6;3181:9;3177:22;3156:49;;;3147:6;3140:5;3136:18;3129:77;3070:147;3271:3;3307:46;3349:3;3340:6;3329:9;3325:22;3307:46;;;3298:6;3291:5;3287:18;3280:74;3227:138;821:2554;;;;;3410:2485;;3525:6;3513:9;3508:3;3504:19;3500:32;3497:2;;;3545:1;3542;3535:12;3497:2;3563:22;3578:6;3563:22;;;3554:31;;3668:1;3657:9;3653:17;3640:31;3691:18;3683:6;3680:30;3677:2;;;3723:1;3720;3713:12;3677:2;3758:55;3809:3;3800:6;3789:9;3785:22;3758:55;;;3751:4;3744:5;3740:16;3733:81;3595:230;3906:2;3895:9;3891:18;3878:32;3930:18;3922:6;3919:30;3916:2;;;3962:1;3959;3952:12;3916:2;3997:55;4048:3;4039:6;4028:9;4024:22;3997:55;;;3990:4;3983:5;3979:16;3972:81;3835:229;4142:2;4131:9;4127:18;4114:32;4166:18;4158:6;4155:30;4152:2;;;4198:1;4195;4188:12;4152:2;4233:55;4284:3;4275:6;4264:9;4260:22;4233:55;;;4226:4;4219:5;4215:16;4208:81;4074:226;4362:2;4395:49;4440:3;4431:6;4420:9;4416:22;4395:49;;;4388:4;4381:5;4377:16;4370:75;4310:146;4536:3;4525:9;4521:19;4508:33;4561:18;4553:6;4550:30;4547:2;;;4593:1;4590;4583:12;4547:2;4628:55;4679:3;4670:6;4659:9;4655:22;4628:55;;;4621:4;4614:5;4610:16;4603:81;4466:229;4782:3;4771:9;4767:19;4754:33;4807:18;4799:6;4796:30;4793:2;;;4839:1;4836;4829:12;4793:2;4874:55;4925:3;4916:6;4905:9;4901:22;4874:55;;;4867:4;4860:5;4856:16;4849:81;4705:236;4996:3;5030:49;5075:3;5066:6;5055:9;5051:22;5030:49;;;5023:4;5016:5;5012:16;5005:75;4951:140;5169:3;5158:9;5154:19;5141:33;5194:18;5186:6;5183:30;5180:2;;;5226:1;5223;5216:12;5180:2;5261:55;5312:3;5303:6;5292:9;5288:22;5261:55;;;5254:4;5247:5;5243:16;5236:81;5101:227;5418:3;5407:9;5403:19;5390:33;5443:18;5435:6;5432:30;5429:2;;;5475:1;5472;5465:12;5429:2;5512:55;5563:3;5554:6;5543:9;5539:22;5512:55;;;5503:6;5496:5;5492:18;5485:83;5338:241;5640:3;5676:49;5721:3;5712:6;5701:9;5697:22;5676:49;;;5667:6;5660:5;5656:18;5649:77;5589:148;5791:3;5827:46;5869:3;5860:6;5849:9;5845:22;5827:46;;;5818:6;5811:5;5807:18;5800:74;5747:138;3491:2404;;;;;5902:130;;5982:6;5969:20;5960:29;;5994:33;6021:5;5994:33;;;5954:78;;;;;6039:241;;6143:2;6131:9;6122:7;6118:23;6114:32;6111:2;;;6159:1;6156;6149:12;6111:2;6194:1;6211:53;6256:7;6247:6;6236:9;6232:22;6211:53;;;6201:63;;6173:97;6105:175;;;;;6287:375;;6415:2;6403:9;6394:7;6390:23;6386:32;6383:2;;;6431:1;6428;6421:12;6383:2;6494:1;6483:9;6479:17;6466:31;6517:18;6509:6;6506:30;6503:2;;;6549:1;6546;6539:12;6503:2;6569:77;6638:7;6629:6;6618:9;6614:22;6569:77;;;6559:87;;6445:207;6377:285;;;;;6669:379;;6799:2;6787:9;6778:7;6774:23;6770:32;6767:2;;;6815:1;6812;6805:12;6767:2;6878:1;6867:9;6863:17;6850:31;6901:18;6893:6;6890:30;6887:2;;;6933:1;6930;6923:12;6887:2;6953:79;7024:7;7015:6;7004:9;7000:22;6953:79;;;6943:89;;6829:209;6761:287;;;;;7055:113;7138:24;7156:5;7138:24;;;7133:3;7126:37;7120:48;;;7175:94;7242:21;7257:5;7242:21;;;7237:3;7230:34;7224:45;;;7276:104;7353:21;7368:5;7353:21;;;7348:3;7341:34;7335:45;;;7387:319;;7485:35;7514:5;7485:35;;;7532:61;7586:6;7581:3;7532:61;;;7525:68;;7598:52;7643:6;7638:3;7631:4;7624:5;7620:16;7598:52;;;7671:29;7693:6;7671:29;;;7666:3;7662:39;7655:46;;7465:241;;;;;;7713:339;;7821:35;7850:5;7821:35;;;7868:71;7932:6;7927:3;7868:71;;;7861:78;;7944:52;7989:6;7984:3;7977:4;7970:5;7966:16;7944:52;;;8017:29;8039:6;8017:29;;;8012:3;8008:39;8001:46;;7801:251;;;;;;8060:376;;8220:67;8284:2;8279:3;8220:67;;;8213:74;;8320:34;8316:1;8311:3;8307:11;8300:55;8389:9;8384:2;8379:3;8375:12;8368:31;8427:2;8422:3;8418:12;8411:19;;8206:230;;;;8445:399;;8605:67;8669:2;8664:3;8605:67;;;8598:74;;8705:34;8701:1;8696:3;8692:11;8685:55;8774:32;8769:2;8764:3;8760:12;8753:54;8835:2;8830:3;8826:12;8819:19;;8591:253;;;;8853:397;;9013:67;9077:2;9072:3;9013:67;;;9006:74;;9113:34;9109:1;9104:3;9100:11;9093:55;9182:30;9177:2;9172:3;9168:12;9161:52;9241:2;9236:3;9232:12;9225:19;;8999:251;;;;9259:374;;9419:67;9483:2;9478:3;9419:67;;;9412:74;;9519:34;9515:1;9510:3;9506:11;9499:55;9588:7;9583:2;9578:3;9574:12;9567:29;9624:2;9619:3;9615:12;9608:19;;9405:228;;;;9690:2615;;9839:6;9834:3;9830:16;9927:4;9920:5;9916:16;9910:23;9979:3;9973:4;9969:14;9962:4;9957:3;9953:14;9946:38;9999:69;10063:4;10049:12;9999:69;;;9991:77;;9861:219;10153:4;10146:5;10142:16;10136:23;10205:3;10199:4;10195:14;10188:4;10183:3;10179:14;10172:38;10225:69;10289:4;10275:12;10225:69;;;10217:77;;10090:216;10381:4;10374:5;10370:16;10364:23;10433:3;10427:4;10423:14;10416:4;10411:3;10407:14;10400:38;10453:69;10517:4;10503:12;10453:69;;;10445:77;;10316:218;10616:4;10609:5;10605:16;10599:23;10668:3;10662:4;10658:14;10651:4;10646:3;10642:14;10635:38;10688:69;10752:4;10738:12;10688:69;;;10680:77;;10544:225;10847:4;10840:5;10836:16;10830:23;10859:63;10916:4;10911:3;10907:14;10893:12;10859:63;;;10779:149;11001:4;10994:5;10990:16;10984:23;11053:3;11047:4;11043:14;11036:4;11031:3;11027:14;11020:38;11073:69;11137:4;11123:12;11073:69;;;11065:77;;10938:216;11233:4;11226:5;11222:16;11216:23;11285:3;11279:4;11275:14;11268:4;11263:3;11259:14;11252:38;11305:69;11369:4;11355:12;11305:69;;;11297:77;;11164:222;11464:4;11457:5;11453:16;11447:23;11516:3;11510:4;11506:14;11499:4;11494:3;11490:14;11483:38;11536:69;11600:4;11586:12;11536:69;;;11528:77;;11396:221;11702:6;11695:5;11691:18;11685:25;11716:65;11773:6;11768:3;11764:16;11750:12;11716:65;;;11627:160;11870:6;11863:5;11859:18;11853:25;11884:65;11941:6;11936:3;11932:16;11918:12;11884:65;;;11797:158;12038:6;12031:5;12027:18;12021:25;12052:65;12109:6;12104:3;12100:16;12086:12;12052:65;;;11965:158;12200:6;12193:5;12189:18;12183:25;12214:59;12265:6;12260:3;12256:16;12242:12;12214:59;;;12133:146;12296:4;12289:11;;9812:2493;;;;;;12365:2458;;12518:6;12513:3;12509:16;12608:4;12601:5;12597:16;12591:23;12660:3;12654:4;12650:14;12643:4;12638:3;12634:14;12627:38;12680:69;12744:4;12730:12;12680:69;;;12672:77;;12540:221;12837:4;12830:5;12826:16;12820:23;12889:3;12883:4;12879:14;12872:4;12867:3;12863:14;12856:38;12909:69;12973:4;12959:12;12909:69;;;12901:77;;12771:219;13063:4;13056:5;13052:16;13046:23;13115:3;13109:4;13105:14;13098:4;13093:3;13089:14;13082:38;13135:69;13199:4;13185:12;13135:69;;;13127:77;;13000:216;13301:4;13294:5;13290:16;13284:23;13313:63;13370:4;13365:3;13361:14;13347:12;13313:63;;;13226:156;13457:4;13450:5;13446:16;13440:23;13509:3;13503:4;13499:14;13492:4;13487:3;13483:14;13476:38;13529:69;13593:4;13579:12;13529:69;;;13521:77;;13392:218;13692:4;13685:5;13681:16;13675:23;13744:3;13738:4;13734:14;13727:4;13722:3;13718:14;13711:38;13764:69;13828:4;13814:12;13764:69;;;13756:77;;13620:225;13923:4;13916:5;13912:16;13906:23;13935:63;13992:4;13987:3;13983:14;13969:12;13935:63;;;13855:149;14077:4;14070:5;14066:16;14060:23;14129:3;14123:4;14119:14;14112:4;14107:3;14103:14;14096:38;14149:69;14213:4;14199:12;14149:69;;;14141:77;;14014:216;14315:6;14308:5;14304:18;14298:25;14371:3;14365:4;14361:14;14352:6;14347:3;14343:16;14336:40;14391:69;14455:4;14441:12;14391:69;;;14383:77;;14240:232;14556:6;14549:5;14545:18;14539:25;14570:65;14627:6;14622:3;14618:16;14604:12;14570:65;;;14482:159;14718:6;14711:5;14707:18;14701:25;14732:59;14783:6;14778:3;14774:16;14760:12;14732:59;;;14651:146;14814:4;14807:11;;12491:2332;;;;;;14830:103;14903:24;14921:5;14903:24;;;14898:3;14891:37;14885:48;;;14940:113;15023:24;15041:5;15023:24;;;15018:3;15011:37;15005:48;;;15060:213;;15178:2;15167:9;15163:18;15155:26;;15192:71;15260:1;15249:9;15245:17;15236:6;15192:71;;;15149:124;;;;;15280:201;;15392:2;15381:9;15377:18;15369:26;;15406:65;15468:1;15457:9;15453:17;15444:6;15406:65;;;15363:118;;;;;15488:1995;;16022:3;16011:9;16007:19;15999:27;;16073:9;16067:4;16063:20;16059:1;16048:9;16044:17;16037:47;16098:74;16167:4;16158:6;16098:74;;;16090:82;;16220:9;16214:4;16210:20;16205:2;16194:9;16190:18;16183:48;16245:74;16314:4;16305:6;16245:74;;;16237:82;;16367:9;16361:4;16357:20;16352:2;16341:9;16337:18;16330:48;16392:74;16461:4;16452:6;16392:74;;;16384:82;;16514:9;16508:4;16504:20;16499:2;16488:9;16484:18;16477:48;16539:74;16608:4;16599:6;16539:74;;;16531:82;;16624:73;16692:3;16681:9;16677:19;16668:6;16624:73;;;16746:9;16740:4;16736:20;16730:3;16719:9;16715:19;16708:49;16771:74;16840:4;16831:6;16771:74;;;16763:82;;16894:9;16888:4;16884:20;16878:3;16867:9;16863:19;16856:49;16919:74;16988:4;16979:6;16919:74;;;16911:82;;17042:9;17036:4;17032:20;17026:3;17015:9;17011:19;17004:49;17067:74;17136:4;17127:6;17067:74;;;17059:82;;17152:73;17220:3;17209:9;17205:19;17196:6;17152:73;;;17236;17304:3;17293:9;17289:19;17280:6;17236:73;;;17320:74;17389:3;17378:9;17374:19;17364:7;17320:74;;;17405:68;17468:3;17457:9;17453:19;17443:7;17405:68;;;15993:1490;;;;;;;;;;;;;;;;17490:1881;;17995:3;17984:9;17980:19;17972:27;;18046:9;18040:4;18036:20;18032:1;18021:9;18017:17;18010:47;18071:74;18140:4;18131:6;18071:74;;;18063:82;;18193:9;18187:4;18183:20;18178:2;18167:9;18163:18;18156:48;18218:74;18287:4;18278:6;18218:74;;;18210:82;;18340:9;18334:4;18330:20;18325:2;18314:9;18310:18;18303:48;18365:74;18434:4;18425:6;18365:74;;;18357:82;;18450:72;18518:2;18507:9;18503:18;18494:6;18450:72;;;18571:9;18565:4;18561:20;18555:3;18544:9;18540:19;18533:49;18596:74;18665:4;18656:6;18596:74;;;18588:82;;18719:9;18713:4;18709:20;18703:3;18692:9;18688:19;18681:49;18744:74;18813:4;18804:6;18744:74;;;18736:82;;18829:73;18897:3;18886:9;18882:19;18873:6;18829:73;;;18951:9;18945:4;18941:20;18935:3;18924:9;18920:19;18913:49;18976:74;19045:4;19036:6;18976:74;;;18968:82;;19099:9;19093:4;19089:20;19083:3;19072:9;19068:19;19061:49;19124:74;19193:4;19184:6;19124:74;;;19116:82;;19209:73;19277:3;19266:9;19262:19;19253:6;19209:73;;;19293:68;19356:3;19345:9;19341:19;19331:7;19293:68;;;17966:1405;;;;;;;;;;;;;;;19378:407;;19569:2;19558:9;19554:18;19546:26;;19619:9;19613:4;19609:20;19605:1;19594:9;19590:17;19583:47;19644:131;19770:4;19644:131;;;19636:139;;19540:245;;;;19792:407;;19983:2;19972:9;19968:18;19960:26;;20033:9;20027:4;20023:20;20019:1;20008:9;20004:17;19997:47;20058:131;20184:4;20058:131;;;20050:139;;19954:245;;;;20206:407;;20397:2;20386:9;20382:18;20374:26;;20447:9;20441:4;20437:20;20433:1;20422:9;20418:17;20411:47;20472:131;20598:4;20472:131;;;20464:139;;20368:245;;;;20620:407;;20811:2;20800:9;20796:18;20788:26;;20861:9;20855:4;20851:20;20847:1;20836:9;20832:17;20825:47;20886:131;21012:4;20886:131;;;20878:139;;20782:245;;;;21034:357;;21200:2;21189:9;21185:18;21177:26;;21250:9;21244:4;21240:20;21236:1;21225:9;21221:17;21214:47;21275:106;21376:4;21367:6;21275:106;;;21267:114;;21171:220;;;;;21398:365;;21568:2;21557:9;21553:18;21545:26;;21618:9;21612:4;21608:20;21604:1;21593:9;21589:17;21582:47;21643:110;21748:4;21739:6;21643:110;;;21635:118;;21539:224;;;;;21770:256;;21832:2;21826:9;21816:19;;21870:4;21862:6;21858:17;21969:6;21957:10;21954:22;21933:18;21921:10;21918:34;21915:62;21912:2;;;21990:1;21987;21980:12;21912:2;22010:10;22006:2;21999:22;21810:216;;;;;22033:318;;22173:18;22165:6;22162:30;22159:2;;;22205:1;22202;22195:12;22159:2;22272:4;22268:9;22261:4;22253:6;22249:17;22245:33;22237:41;;22336:4;22330;22326:15;22318:23;;22096:255;;;;22358:118;;22448:5;22442:12;22432:22;;22413:63;;;;22484:153;;22589:6;22584:3;22577:19;22626:4;22621:3;22617:14;22602:29;;22570:67;;;;;22646:163;;22761:6;22756:3;22749:19;22798:4;22793:3;22789:14;22774:29;;22742:67;;;;;22817:91;;22879:24;22897:5;22879:24;;;22868:35;;22862:46;;;;22915:85;;22988:5;22981:13;22974:21;22963:32;;22957:43;;;;23007:121;;23080:42;23073:5;23069:54;23058:65;;23052:76;;;;23135:72;;23197:5;23186:16;;23180:27;;;;23215:145;23296:6;23291:3;23286;23273:30;23352:1;23343:6;23338:3;23334:16;23327:27;23266:94;;;;23369:268;23434:1;23441:101;23455:6;23452:1;23449:13;23441:101;;;23531:1;23526:3;23522:11;23516:18;23512:1;23507:3;23503:11;23496:39;23477:2;23474:1;23470:10;23465:15;;23441:101;;;23557:6;23554:1;23551:13;23548:2;;;23622:1;23613:6;23608:3;23604:16;23597:27;23548:2;23418:219;;;;;23645:97;;23733:2;23729:7;23724:2;23717:5;23713:14;23709:28;23699:38;;23693:49;;;;23750:117;23819:24;23837:5;23819:24;;;23812:5;23809:35;23799:2;;23858:1;23855;23848:12;23799:2;23793:74;;23874:111;23940:21;23955:5;23940:21;;;23933:5;23930:32;23920:2;;23976:1;23973;23966:12;23920:2;23914:71;;23992:117;24061:24;24079:5;24061:24;;;24054:5;24051:35;24041:2;;24100:1;24097;24090:12;24041:2;24035:74;",
  "source": "// SPDX-License-Identifier: MIT\n\n// Defining the solidity version that is used and allowing experimental functions to allow using structs as datatype within the function call\npragma solidity >=0.4.21 <0.7.0;\npragma experimental ABIEncoderV2;\n\ncontract User {\n    address public verifying_institution;\n\n    constructor () public {\n        verifying_institution = msg.sender;\n    }\n\n    // Defining datatype insured to store all necessary data related to the insured\n    struct Insured {\n        string surname;\n        string name;\n        string street;\n        string street_number;\n        uint post_code;\n        string city;\n\n        string birth_date;\n\n        string insurance;\n        uint insurance_number;\n        uint insured_number;\n        uint insured_status;\n\n        bool verified;\n    }\n\n    // Defining datatype physician to store all necessary data related to the physician\n    struct Physician {\n        string job_title;\n        string surname;\n        string name;\n        uint physician_number;\n\n        string street;\n        string street_number;\n        uint post_code;\n        string city;\n        string telephone_number; \n        uint business_number;\n\n        bool verified;\n    }\n\n    // Insured Number mapped on the related insured object with all data of the insured\n    mapping(address => Insured) public insureds;\n\n    // Physician Number mapped on the related physician object with all data of the physician\n    mapping(address => Physician) public physicians;\n\n    // Function to add a new Insured\n    function addNewInsured(Insured memory insured_)  public{\n        insureds[msg.sender] = Insured(insured_.surname, insured_.name, insured_.street, insured_.street_number, insured_.post_code, insured_.city, insured_.birth_date, insured_.insurance, insured_.insurance_number, insured_.insured_number, insured_.insured_status, false);\n    }\n\n    // From the address of the veryifying_institution every insured can be verified\n    function verifyInsured(address public_key) public returns (bool){\n        require(msg.sender == verifying_institution, \"Only the verify institution has the right to verify insured!\");\n        require(insureds[public_key].insured_number > 0, \"No insured exists under this address!\");\n        insureds[public_key].verified = true;\n    }\n\n    // Function returns true, if insured with the insured_number_ exists\n    function getInsured(address public_key) public view returns(Insured memory){\n        if(insureds[public_key].insured_number > 0){\n            return insureds[public_key];\n        } \n    }\n\n    // Function to add a new Physician\n    function addNewPhysician(Physician memory physician_) public{\n        physicians[msg.sender] = Physician(physician_.job_title, physician_.surname, physician_.name, physician_.physician_number, physician_.street, physician_.street_number, physician_.post_code, physician_.city, physician_.telephone_number, physician_.business_number, false);\n    }\n\n    // From the address of the veryifying_institution every insured can be verified\n    function verifyPhysician(address public_key) public returns (bool){\n        require(msg.sender == verifying_institution, \"Only the verify institution has the right to verify physician!\");\n        require(physicians[public_key].physician_number > 0, \"No physician exists under this address!\");\n        physicians[public_key].verified = true;\n    }\n\n    // Function returns true, if insured with the physician_number_ exists\n    function getPhysician(address public_key) public view returns(Physician memory){\n        if(physicians[public_key].physician_number > 0){\n            return physicians[public_key];\n        } \n    }\n\n    function checkInsuredVerification(address public_key) public view returns (bool){\n        if(insureds[public_key].insured_number > 0 && insureds[public_key].verified == true){\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    function checkPhysicianVerification(address public_key) public view returns (bool){\n        if(physicians[public_key].physician_number > 0 && physicians[public_key].verified == true){\n            return true;\n        } else {\n            return false;\n        }\n    }\n}",
  "sourcePath": "/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/User.sol",
  "ast": {
    "absolutePath": "/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/User.sol",
    "exportedSymbols": {
      "User": [
        406
      ]
    },
    "id": 407,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 103,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "175:32:2"
      },
      {
        "id": 104,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "208:33:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 406,
        "linearizedBaseContracts": [
          406
        ],
        "name": "User",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 106,
            "name": "verifying_institution",
            "nodeType": "VariableDeclaration",
            "scope": 406,
            "src": "263:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 105,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "263:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "328:51:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 109,
                      "name": "verifying_institution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "338:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 110,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "362:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "362:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "338:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "338:34:2"
                }
              ]
            },
            "documentation": null,
            "id": 115,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "318:2:2"
            },
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "328:0:2"
            },
            "scope": 406,
            "src": "306:73:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "User.Insured",
            "id": 140,
            "members": [
              {
                "constant": false,
                "id": 117,
                "name": "surname",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "494:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 116,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "494:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 119,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "518:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 118,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "518:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 121,
                "name": "street",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "539:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 120,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "539:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 123,
                "name": "street_number",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "562:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 122,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "562:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 125,
                "name": "post_code",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "592:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 124,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "592:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 127,
                "name": "city",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "616:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 126,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "616:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 129,
                "name": "birth_date",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "638:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 128,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "638:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 131,
                "name": "insurance",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "666:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 130,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "666:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 133,
                "name": "insurance_number",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "692:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 132,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "692:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 135,
                "name": "insured_number",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "723:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 134,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "723:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 137,
                "name": "insured_status",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "752:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 136,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "752:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 139,
                "name": "verified",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "782:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 138,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "782:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Insured",
            "nodeType": "StructDefinition",
            "scope": 406,
            "src": "469:333:2",
            "visibility": "public"
          },
          {
            "canonicalName": "User.Physician",
            "id": 163,
            "members": [
              {
                "constant": false,
                "id": 142,
                "name": "job_title",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "923:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 141,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "923:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 144,
                "name": "surname",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "949:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 143,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "949:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 146,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "973:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 145,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "973:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 148,
                "name": "physician_number",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "994:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 147,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "994:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 150,
                "name": "street",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "1026:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 149,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1026:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 152,
                "name": "street_number",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "1049:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 151,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1049:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 154,
                "name": "post_code",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "1079:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 153,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1079:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 156,
                "name": "city",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "1103:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 155,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1103:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 158,
                "name": "telephone_number",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "1124:23:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 157,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1124:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 160,
                "name": "business_number",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "1158:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 159,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1158:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 162,
                "name": "verified",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "1189:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 161,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1189:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Physician",
            "nodeType": "StructDefinition",
            "scope": 406,
            "src": "896:313:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 167,
            "name": "insureds",
            "nodeType": "VariableDeclaration",
            "scope": 406,
            "src": "1303:43:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$140_storage_$",
              "typeString": "mapping(address => struct User.Insured)"
            },
            "typeName": {
              "id": 166,
              "keyType": {
                "id": 164,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1311:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1303:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$140_storage_$",
                "typeString": "mapping(address => struct User.Insured)"
              },
              "valueType": {
                "contractScope": null,
                "id": 165,
                "name": "Insured",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 140,
                "src": "1322:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Insured_$140_storage_ptr",
                  "typeString": "struct User.Insured"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 171,
            "name": "physicians",
            "nodeType": "VariableDeclaration",
            "scope": 406,
            "src": "1447:47:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$163_storage_$",
              "typeString": "mapping(address => struct User.Physician)"
            },
            "typeName": {
              "id": 170,
              "keyType": {
                "id": 168,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1455:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1447:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$163_storage_$",
                "typeString": "mapping(address => struct User.Physician)"
              },
              "valueType": {
                "contractScope": null,
                "id": 169,
                "name": "Physician",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 163,
                "src": "1466:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Physician_$163_storage_ptr",
                  "typeString": "struct User.Physician"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 207,
              "nodeType": "Block",
              "src": "1593:281:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 176,
                        "name": "insureds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "1603:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$140_storage_$",
                          "typeString": "mapping(address => struct User.Insured storage ref)"
                        }
                      },
                      "id": 179,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 177,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "1612:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1612:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1603:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Insured_$140_storage",
                        "typeString": "struct User.Insured storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 181,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1634:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 182,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "surname",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 117,
                          "src": "1634:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 183,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1652:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 119,
                          "src": "1652:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 185,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1667:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "street",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 121,
                          "src": "1667:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 187,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1684:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 188,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "street_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 123,
                          "src": "1684:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 189,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1708:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "post_code",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 125,
                          "src": "1708:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 191,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1728:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "city",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 127,
                          "src": "1728:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 193,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1743:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "birth_date",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 129,
                          "src": "1743:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 195,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1764:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insurance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 131,
                          "src": "1764:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 197,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1784:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insurance_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 133,
                          "src": "1784:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 199,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1811:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insured_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 135,
                          "src": "1811:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 201,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1836:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 202,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insured_status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 137,
                          "src": "1836:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1861:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 180,
                        "name": "Insured",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "1626:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Insured_$140_storage_ptr_$",
                          "typeString": "type(struct User.Insured storage pointer)"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1626:241:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Insured_$140_memory",
                        "typeString": "struct User.Insured memory"
                      }
                    },
                    "src": "1603:264:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Insured_$140_storage",
                      "typeString": "struct User.Insured storage ref"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "1603:264:2"
                }
              ]
            },
            "documentation": null,
            "id": 208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewInsured",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "name": "insured_",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "1561:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                    "typeString": "struct User.Insured"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 172,
                    "name": "Insured",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 140,
                    "src": "1561:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Insured_$140_storage_ptr",
                      "typeString": "struct User.Insured"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1560:25:2"
            },
            "returnParameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1593:0:2"
            },
            "scope": 406,
            "src": "1538:336:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "2028:270:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 216,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "2046:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2046:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 218,
                          "name": "verifying_institution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "2060:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2046:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79207468652076657269667920696e737469747574696f6e206861732074686520726967687420746f2076657269667920696e737572656421",
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2083:62:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b28323f2b7eff626061b322269fb98cd0ae41ab455088b84484fe122df1b9d6",
                          "typeString": "literal_string \"Only the verify institution has the right to verify insured!\""
                        },
                        "value": "Only the verify institution has the right to verify insured!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b28323f2b7eff626061b322269fb98cd0ae41ab455088b84484fe122df1b9d6",
                          "typeString": "literal_string \"Only the verify institution has the right to verify insured!\""
                        }
                      ],
                      "id": 215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        424,
                        425
                      ],
                      "referencedDeclaration": 425,
                      "src": "2038:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2038:108:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "2038:108:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 224,
                              "name": "insureds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 167,
                              "src": "2164:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$140_storage_$",
                                "typeString": "mapping(address => struct User.Insured storage ref)"
                              }
                            },
                            "id": 226,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 225,
                              "name": "public_key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 210,
                              "src": "2173:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2164:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_storage",
                              "typeString": "struct User.Insured storage ref"
                            }
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insured_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 135,
                          "src": "2164:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2202:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2164:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f20696e73757265642065786973747320756e6465722074686973206164647265737321",
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2205:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa211096b51314ff31b43f708355080861e00e2aa99e82a7bd876298f283c156",
                          "typeString": "literal_string \"No insured exists under this address!\""
                        },
                        "value": "No insured exists under this address!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa211096b51314ff31b43f708355080861e00e2aa99e82a7bd876298f283c156",
                          "typeString": "literal_string \"No insured exists under this address!\""
                        }
                      ],
                      "id": 223,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        424,
                        425
                      ],
                      "referencedDeclaration": 425,
                      "src": "2156:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2156:89:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "2156:89:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 233,
                          "name": "insureds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "2255:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$140_storage_$",
                            "typeString": "mapping(address => struct User.Insured storage ref)"
                          }
                        },
                        "id": 235,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 234,
                          "name": "public_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "2264:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2255:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Insured_$140_storage",
                          "typeString": "struct User.Insured storage ref"
                        }
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "verified",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 139,
                      "src": "2255:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2287:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2255:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "2255:36:2"
                }
              ]
            },
            "documentation": null,
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyInsured",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 210,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "1987:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1987:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1986:20:2"
            },
            "returnParameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "2023:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2023:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2022:6:2"
            },
            "scope": 406,
            "src": "1964:334:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "2452:112:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 248,
                          "name": "insureds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "2465:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$140_storage_$",
                            "typeString": "mapping(address => struct User.Insured storage ref)"
                          }
                        },
                        "id": 250,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 249,
                          "name": "public_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 243,
                          "src": "2474:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2465:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Insured_$140_storage",
                          "typeString": "struct User.Insured storage ref"
                        }
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "insured_number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 135,
                      "src": "2465:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2503:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2465:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 259,
                  "nodeType": "IfStatement",
                  "src": "2462:95:2",
                  "trueBody": {
                    "id": 258,
                    "nodeType": "Block",
                    "src": "2505:52:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 254,
                            "name": "insureds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "2526:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$140_storage_$",
                              "typeString": "mapping(address => struct User.Insured storage ref)"
                            }
                          },
                          "id": 256,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 255,
                            "name": "public_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 243,
                            "src": "2535:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2526:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Insured_$140_storage",
                            "typeString": "struct User.Insured storage ref"
                          }
                        },
                        "functionReturnParameters": 247,
                        "id": 257,
                        "nodeType": "Return",
                        "src": "2519:27:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInsured",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "2397:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2397:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2396:20:2"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "2437:14:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                    "typeString": "struct User.Insured"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 245,
                    "name": "Insured",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 140,
                    "src": "2437:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Insured_$140_storage_ptr",
                      "typeString": "struct User.Insured"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2436:16:2"
            },
            "scope": 406,
            "src": "2377:187:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "2669:287:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 266,
                        "name": "physicians",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "2679:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$163_storage_$",
                          "typeString": "mapping(address => struct User.Physician storage ref)"
                        }
                      },
                      "id": 269,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 267,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "2690:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2690:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2679:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Physician_$163_storage",
                        "typeString": "struct User.Physician storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 271,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "2714:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 272,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "job_title",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 142,
                          "src": "2714:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 273,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "2736:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 274,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "surname",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 144,
                          "src": "2736:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 275,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "2756:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 276,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 146,
                          "src": "2756:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 277,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "2773:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 278,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "physician_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 148,
                          "src": "2773:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 279,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "2802:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 280,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "street",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 150,
                          "src": "2802:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 281,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "2821:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 282,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "street_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 152,
                          "src": "2821:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 283,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "2847:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 284,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "post_code",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 154,
                          "src": "2847:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 285,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "2869:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "city",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 156,
                          "src": "2869:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 287,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "2886:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 288,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "telephone_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 158,
                          "src": "2886:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 289,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "2915:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "business_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 160,
                          "src": "2915:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2943:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 270,
                        "name": "Physician",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "2704:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Physician_$163_storage_ptr_$",
                          "typeString": "type(struct User.Physician storage pointer)"
                        }
                      },
                      "id": 292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2704:245:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Physician_$163_memory",
                        "typeString": "struct User.Physician memory"
                      }
                    },
                    "src": "2679:270:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Physician_$163_storage",
                      "typeString": "struct User.Physician storage ref"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "2679:270:2"
                }
              ]
            },
            "documentation": null,
            "id": 296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewPhysician",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 263,
                  "name": "physician_",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "2634:27:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                    "typeString": "struct User.Physician"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 262,
                    "name": "Physician",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 163,
                    "src": "2634:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Physician_$163_storage_ptr",
                      "typeString": "struct User.Physician"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2633:29:2"
            },
            "returnParameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2669:0:2"
            },
            "scope": 406,
            "src": "2609:347:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 328,
              "nodeType": "Block",
              "src": "3112:280:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 304,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "3130:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3130:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 306,
                          "name": "verifying_institution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "3144:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3130:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79207468652076657269667920696e737469747574696f6e206861732074686520726967687420746f207665726966792070687973696369616e21",
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3167:64:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5124a821fe938e75080afbed991945cc8cf0a9edaf27edb7a65b6e2115e46237",
                          "typeString": "literal_string \"Only the verify institution has the right to verify physician!\""
                        },
                        "value": "Only the verify institution has the right to verify physician!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5124a821fe938e75080afbed991945cc8cf0a9edaf27edb7a65b6e2115e46237",
                          "typeString": "literal_string \"Only the verify institution has the right to verify physician!\""
                        }
                      ],
                      "id": 303,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        424,
                        425
                      ],
                      "referencedDeclaration": 425,
                      "src": "3122:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3122:110:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "3122:110:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 312,
                              "name": "physicians",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 171,
                              "src": "3250:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$163_storage_$",
                                "typeString": "mapping(address => struct User.Physician storage ref)"
                              }
                            },
                            "id": 314,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 313,
                              "name": "public_key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 298,
                              "src": "3261:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3250:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_storage",
                              "typeString": "struct User.Physician storage ref"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "physician_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 148,
                          "src": "3250:39:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3292:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3250:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f2070687973696369616e2065786973747320756e6465722074686973206164647265737321",
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3295:41:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ed217086064b34e54c44d9110ea6ba325df9ce2e2b0c43ff96dfd07cc6e4c38",
                          "typeString": "literal_string \"No physician exists under this address!\""
                        },
                        "value": "No physician exists under this address!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ed217086064b34e54c44d9110ea6ba325df9ce2e2b0c43ff96dfd07cc6e4c38",
                          "typeString": "literal_string \"No physician exists under this address!\""
                        }
                      ],
                      "id": 311,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        424,
                        425
                      ],
                      "referencedDeclaration": 425,
                      "src": "3242:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3242:95:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "3242:95:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 321,
                          "name": "physicians",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "3347:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$163_storage_$",
                            "typeString": "mapping(address => struct User.Physician storage ref)"
                          }
                        },
                        "id": 323,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 322,
                          "name": "public_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "3358:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3347:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Physician_$163_storage",
                          "typeString": "struct User.Physician storage ref"
                        }
                      },
                      "id": 324,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "verified",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 162,
                      "src": "3347:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3381:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3347:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "3347:38:2"
                }
              ]
            },
            "documentation": null,
            "id": 329,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyPhysician",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "3071:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3071:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3070:20:2"
            },
            "returnParameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 301,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "3107:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3107:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3106:6:2"
            },
            "scope": 406,
            "src": "3046:346:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 348,
              "nodeType": "Block",
              "src": "3552:118:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 336,
                          "name": "physicians",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "3565:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$163_storage_$",
                            "typeString": "mapping(address => struct User.Physician storage ref)"
                          }
                        },
                        "id": 338,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 337,
                          "name": "public_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 331,
                          "src": "3576:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3565:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Physician_$163_storage",
                          "typeString": "struct User.Physician storage ref"
                        }
                      },
                      "id": 339,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "physician_number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 148,
                      "src": "3565:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3607:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3565:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 347,
                  "nodeType": "IfStatement",
                  "src": "3562:101:2",
                  "trueBody": {
                    "id": 346,
                    "nodeType": "Block",
                    "src": "3609:54:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 342,
                            "name": "physicians",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "3630:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$163_storage_$",
                              "typeString": "mapping(address => struct User.Physician storage ref)"
                            }
                          },
                          "id": 344,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 343,
                            "name": "public_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 331,
                            "src": "3641:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3630:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Physician_$163_storage",
                            "typeString": "struct User.Physician storage ref"
                          }
                        },
                        "functionReturnParameters": 335,
                        "id": 345,
                        "nodeType": "Return",
                        "src": "3623:29:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 349,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPhysician",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 331,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "3495:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3495:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3494:20:2"
            },
            "returnParameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 334,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "3535:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                    "typeString": "struct User.Physician"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 333,
                    "name": "Physician",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 163,
                    "src": "3535:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Physician_$163_storage_ptr",
                      "typeString": "struct User.Physician"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3534:18:2"
            },
            "scope": 406,
            "src": "3473:197:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 376,
              "nodeType": "Block",
              "src": "3756:179:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 356,
                            "name": "insureds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "3769:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$140_storage_$",
                              "typeString": "mapping(address => struct User.Insured storage ref)"
                            }
                          },
                          "id": 358,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 357,
                            "name": "public_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 351,
                            "src": "3778:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3769:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Insured_$140_storage",
                            "typeString": "struct User.Insured storage ref"
                          }
                        },
                        "id": 359,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "insured_number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 135,
                        "src": "3769:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3807:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3769:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 362,
                            "name": "insureds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "3812:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$140_storage_$",
                              "typeString": "mapping(address => struct User.Insured storage ref)"
                            }
                          },
                          "id": 364,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 363,
                            "name": "public_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 351,
                            "src": "3821:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3812:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Insured_$140_storage",
                            "typeString": "struct User.Insured storage ref"
                          }
                        },
                        "id": 365,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "verified",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 139,
                        "src": "3812:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3845:4:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "3812:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3769:80:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 374,
                    "nodeType": "Block",
                    "src": "3892:37:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3913:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 355,
                        "id": 373,
                        "nodeType": "Return",
                        "src": "3906:12:2"
                      }
                    ]
                  },
                  "id": 375,
                  "nodeType": "IfStatement",
                  "src": "3766:163:2",
                  "trueBody": {
                    "id": 371,
                    "nodeType": "Block",
                    "src": "3850:36:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3871:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 355,
                        "id": 370,
                        "nodeType": "Return",
                        "src": "3864:11:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkInsuredVerification",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "3710:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3710:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3709:20:2"
            },
            "returnParameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 354,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "3751:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 353,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3751:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3750:6:2"
            },
            "scope": 406,
            "src": "3676:259:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 404,
              "nodeType": "Block",
              "src": "4023:185:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 384,
                            "name": "physicians",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "4036:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$163_storage_$",
                              "typeString": "mapping(address => struct User.Physician storage ref)"
                            }
                          },
                          "id": 386,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 385,
                            "name": "public_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 379,
                            "src": "4047:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4036:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Physician_$163_storage",
                            "typeString": "struct User.Physician storage ref"
                          }
                        },
                        "id": 387,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "physician_number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 148,
                        "src": "4036:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4078:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4036:43:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 390,
                            "name": "physicians",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "4083:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$163_storage_$",
                              "typeString": "mapping(address => struct User.Physician storage ref)"
                            }
                          },
                          "id": 392,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 391,
                            "name": "public_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 379,
                            "src": "4094:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4083:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Physician_$163_storage",
                            "typeString": "struct User.Physician storage ref"
                          }
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "verified",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 162,
                        "src": "4083:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4118:4:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "4083:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4036:86:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 402,
                    "nodeType": "Block",
                    "src": "4165:37:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4186:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 383,
                        "id": 401,
                        "nodeType": "Return",
                        "src": "4179:12:2"
                      }
                    ]
                  },
                  "id": 403,
                  "nodeType": "IfStatement",
                  "src": "4033:169:2",
                  "trueBody": {
                    "id": 399,
                    "nodeType": "Block",
                    "src": "4123:36:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4144:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 383,
                        "id": 398,
                        "nodeType": "Return",
                        "src": "4137:11:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 405,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkPhysicianVerification",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 379,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "3977:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3977:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3976:20:2"
            },
            "returnParameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 382,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "4018:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4018:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4017:6:2"
            },
            "scope": 406,
            "src": "3941:267:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 407,
        "src": "243:3967:2"
      }
    ],
    "src": "175:4035:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/User.sol",
    "exportedSymbols": {
      "User": [
        406
      ]
    },
    "id": 407,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 103,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "175:32:2"
      },
      {
        "id": 104,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "208:33:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 406,
        "linearizedBaseContracts": [
          406
        ],
        "name": "User",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 106,
            "name": "verifying_institution",
            "nodeType": "VariableDeclaration",
            "scope": 406,
            "src": "263:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 105,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "263:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "328:51:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 109,
                      "name": "verifying_institution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "338:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 110,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "362:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "362:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "338:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "338:34:2"
                }
              ]
            },
            "documentation": null,
            "id": 115,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "318:2:2"
            },
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "328:0:2"
            },
            "scope": 406,
            "src": "306:73:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "User.Insured",
            "id": 140,
            "members": [
              {
                "constant": false,
                "id": 117,
                "name": "surname",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "494:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 116,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "494:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 119,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "518:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 118,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "518:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 121,
                "name": "street",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "539:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 120,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "539:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 123,
                "name": "street_number",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "562:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 122,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "562:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 125,
                "name": "post_code",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "592:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 124,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "592:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 127,
                "name": "city",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "616:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 126,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "616:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 129,
                "name": "birth_date",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "638:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 128,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "638:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 131,
                "name": "insurance",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "666:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 130,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "666:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 133,
                "name": "insurance_number",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "692:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 132,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "692:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 135,
                "name": "insured_number",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "723:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 134,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "723:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 137,
                "name": "insured_status",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "752:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 136,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "752:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 139,
                "name": "verified",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "782:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 138,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "782:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Insured",
            "nodeType": "StructDefinition",
            "scope": 406,
            "src": "469:333:2",
            "visibility": "public"
          },
          {
            "canonicalName": "User.Physician",
            "id": 163,
            "members": [
              {
                "constant": false,
                "id": 142,
                "name": "job_title",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "923:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 141,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "923:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 144,
                "name": "surname",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "949:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 143,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "949:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 146,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "973:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 145,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "973:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 148,
                "name": "physician_number",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "994:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 147,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "994:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 150,
                "name": "street",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "1026:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 149,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1026:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 152,
                "name": "street_number",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "1049:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 151,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1049:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 154,
                "name": "post_code",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "1079:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 153,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1079:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 156,
                "name": "city",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "1103:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 155,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1103:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 158,
                "name": "telephone_number",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "1124:23:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 157,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1124:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 160,
                "name": "business_number",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "1158:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 159,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1158:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 162,
                "name": "verified",
                "nodeType": "VariableDeclaration",
                "scope": 163,
                "src": "1189:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 161,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1189:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Physician",
            "nodeType": "StructDefinition",
            "scope": 406,
            "src": "896:313:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 167,
            "name": "insureds",
            "nodeType": "VariableDeclaration",
            "scope": 406,
            "src": "1303:43:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$140_storage_$",
              "typeString": "mapping(address => struct User.Insured)"
            },
            "typeName": {
              "id": 166,
              "keyType": {
                "id": 164,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1311:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1303:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$140_storage_$",
                "typeString": "mapping(address => struct User.Insured)"
              },
              "valueType": {
                "contractScope": null,
                "id": 165,
                "name": "Insured",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 140,
                "src": "1322:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Insured_$140_storage_ptr",
                  "typeString": "struct User.Insured"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 171,
            "name": "physicians",
            "nodeType": "VariableDeclaration",
            "scope": 406,
            "src": "1447:47:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$163_storage_$",
              "typeString": "mapping(address => struct User.Physician)"
            },
            "typeName": {
              "id": 170,
              "keyType": {
                "id": 168,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1455:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1447:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$163_storage_$",
                "typeString": "mapping(address => struct User.Physician)"
              },
              "valueType": {
                "contractScope": null,
                "id": 169,
                "name": "Physician",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 163,
                "src": "1466:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Physician_$163_storage_ptr",
                  "typeString": "struct User.Physician"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 207,
              "nodeType": "Block",
              "src": "1593:281:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 176,
                        "name": "insureds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "1603:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$140_storage_$",
                          "typeString": "mapping(address => struct User.Insured storage ref)"
                        }
                      },
                      "id": 179,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 177,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "1612:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1612:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1603:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Insured_$140_storage",
                        "typeString": "struct User.Insured storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 181,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1634:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 182,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "surname",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 117,
                          "src": "1634:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 183,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1652:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 119,
                          "src": "1652:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 185,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1667:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "street",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 121,
                          "src": "1667:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 187,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1684:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 188,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "street_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 123,
                          "src": "1684:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 189,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1708:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "post_code",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 125,
                          "src": "1708:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 191,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1728:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "city",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 127,
                          "src": "1728:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 193,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1743:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "birth_date",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 129,
                          "src": "1743:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 195,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1764:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insurance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 131,
                          "src": "1764:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 197,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1784:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insurance_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 133,
                          "src": "1784:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 199,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1811:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insured_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 135,
                          "src": "1811:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 201,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1836:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 202,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insured_status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 137,
                          "src": "1836:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1861:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 180,
                        "name": "Insured",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "1626:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Insured_$140_storage_ptr_$",
                          "typeString": "type(struct User.Insured storage pointer)"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1626:241:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Insured_$140_memory",
                        "typeString": "struct User.Insured memory"
                      }
                    },
                    "src": "1603:264:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Insured_$140_storage",
                      "typeString": "struct User.Insured storage ref"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "1603:264:2"
                }
              ]
            },
            "documentation": null,
            "id": 208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewInsured",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "name": "insured_",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "1561:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                    "typeString": "struct User.Insured"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 172,
                    "name": "Insured",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 140,
                    "src": "1561:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Insured_$140_storage_ptr",
                      "typeString": "struct User.Insured"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1560:25:2"
            },
            "returnParameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1593:0:2"
            },
            "scope": 406,
            "src": "1538:336:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "2028:270:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 216,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "2046:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2046:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 218,
                          "name": "verifying_institution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "2060:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2046:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79207468652076657269667920696e737469747574696f6e206861732074686520726967687420746f2076657269667920696e737572656421",
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2083:62:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b28323f2b7eff626061b322269fb98cd0ae41ab455088b84484fe122df1b9d6",
                          "typeString": "literal_string \"Only the verify institution has the right to verify insured!\""
                        },
                        "value": "Only the verify institution has the right to verify insured!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b28323f2b7eff626061b322269fb98cd0ae41ab455088b84484fe122df1b9d6",
                          "typeString": "literal_string \"Only the verify institution has the right to verify insured!\""
                        }
                      ],
                      "id": 215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        424,
                        425
                      ],
                      "referencedDeclaration": 425,
                      "src": "2038:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2038:108:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "2038:108:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 224,
                              "name": "insureds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 167,
                              "src": "2164:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$140_storage_$",
                                "typeString": "mapping(address => struct User.Insured storage ref)"
                              }
                            },
                            "id": 226,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 225,
                              "name": "public_key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 210,
                              "src": "2173:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2164:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$140_storage",
                              "typeString": "struct User.Insured storage ref"
                            }
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insured_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 135,
                          "src": "2164:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2202:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2164:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f20696e73757265642065786973747320756e6465722074686973206164647265737321",
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2205:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa211096b51314ff31b43f708355080861e00e2aa99e82a7bd876298f283c156",
                          "typeString": "literal_string \"No insured exists under this address!\""
                        },
                        "value": "No insured exists under this address!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa211096b51314ff31b43f708355080861e00e2aa99e82a7bd876298f283c156",
                          "typeString": "literal_string \"No insured exists under this address!\""
                        }
                      ],
                      "id": 223,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        424,
                        425
                      ],
                      "referencedDeclaration": 425,
                      "src": "2156:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2156:89:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "2156:89:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 233,
                          "name": "insureds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "2255:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$140_storage_$",
                            "typeString": "mapping(address => struct User.Insured storage ref)"
                          }
                        },
                        "id": 235,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 234,
                          "name": "public_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "2264:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2255:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Insured_$140_storage",
                          "typeString": "struct User.Insured storage ref"
                        }
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "verified",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 139,
                      "src": "2255:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2287:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2255:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "2255:36:2"
                }
              ]
            },
            "documentation": null,
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyInsured",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 210,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "1987:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1987:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1986:20:2"
            },
            "returnParameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "2023:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2023:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2022:6:2"
            },
            "scope": 406,
            "src": "1964:334:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "2452:112:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 248,
                          "name": "insureds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "2465:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$140_storage_$",
                            "typeString": "mapping(address => struct User.Insured storage ref)"
                          }
                        },
                        "id": 250,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 249,
                          "name": "public_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 243,
                          "src": "2474:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2465:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Insured_$140_storage",
                          "typeString": "struct User.Insured storage ref"
                        }
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "insured_number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 135,
                      "src": "2465:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2503:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2465:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 259,
                  "nodeType": "IfStatement",
                  "src": "2462:95:2",
                  "trueBody": {
                    "id": 258,
                    "nodeType": "Block",
                    "src": "2505:52:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 254,
                            "name": "insureds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "2526:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$140_storage_$",
                              "typeString": "mapping(address => struct User.Insured storage ref)"
                            }
                          },
                          "id": 256,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 255,
                            "name": "public_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 243,
                            "src": "2535:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2526:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Insured_$140_storage",
                            "typeString": "struct User.Insured storage ref"
                          }
                        },
                        "functionReturnParameters": 247,
                        "id": 257,
                        "nodeType": "Return",
                        "src": "2519:27:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInsured",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "2397:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2397:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2396:20:2"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "2437:14:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Insured_$140_memory_ptr",
                    "typeString": "struct User.Insured"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 245,
                    "name": "Insured",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 140,
                    "src": "2437:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Insured_$140_storage_ptr",
                      "typeString": "struct User.Insured"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2436:16:2"
            },
            "scope": 406,
            "src": "2377:187:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "2669:287:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 266,
                        "name": "physicians",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "2679:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$163_storage_$",
                          "typeString": "mapping(address => struct User.Physician storage ref)"
                        }
                      },
                      "id": 269,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 267,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "2690:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2690:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2679:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Physician_$163_storage",
                        "typeString": "struct User.Physician storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 271,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "2714:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 272,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "job_title",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 142,
                          "src": "2714:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 273,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "2736:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 274,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "surname",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 144,
                          "src": "2736:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 275,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "2756:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 276,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 146,
                          "src": "2756:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 277,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "2773:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 278,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "physician_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 148,
                          "src": "2773:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 279,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "2802:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 280,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "street",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 150,
                          "src": "2802:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 281,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "2821:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 282,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "street_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 152,
                          "src": "2821:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 283,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "2847:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 284,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "post_code",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 154,
                          "src": "2847:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 285,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "2869:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "city",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 156,
                          "src": "2869:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 287,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "2886:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 288,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "telephone_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 158,
                          "src": "2886:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 289,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "2915:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "business_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 160,
                          "src": "2915:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2943:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 270,
                        "name": "Physician",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "2704:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Physician_$163_storage_ptr_$",
                          "typeString": "type(struct User.Physician storage pointer)"
                        }
                      },
                      "id": 292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2704:245:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Physician_$163_memory",
                        "typeString": "struct User.Physician memory"
                      }
                    },
                    "src": "2679:270:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Physician_$163_storage",
                      "typeString": "struct User.Physician storage ref"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "2679:270:2"
                }
              ]
            },
            "documentation": null,
            "id": 296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewPhysician",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 263,
                  "name": "physician_",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "2634:27:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                    "typeString": "struct User.Physician"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 262,
                    "name": "Physician",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 163,
                    "src": "2634:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Physician_$163_storage_ptr",
                      "typeString": "struct User.Physician"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2633:29:2"
            },
            "returnParameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2669:0:2"
            },
            "scope": 406,
            "src": "2609:347:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 328,
              "nodeType": "Block",
              "src": "3112:280:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 304,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "3130:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3130:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 306,
                          "name": "verifying_institution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "3144:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3130:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79207468652076657269667920696e737469747574696f6e206861732074686520726967687420746f207665726966792070687973696369616e21",
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3167:64:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5124a821fe938e75080afbed991945cc8cf0a9edaf27edb7a65b6e2115e46237",
                          "typeString": "literal_string \"Only the verify institution has the right to verify physician!\""
                        },
                        "value": "Only the verify institution has the right to verify physician!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5124a821fe938e75080afbed991945cc8cf0a9edaf27edb7a65b6e2115e46237",
                          "typeString": "literal_string \"Only the verify institution has the right to verify physician!\""
                        }
                      ],
                      "id": 303,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        424,
                        425
                      ],
                      "referencedDeclaration": 425,
                      "src": "3122:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3122:110:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "3122:110:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 312,
                              "name": "physicians",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 171,
                              "src": "3250:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$163_storage_$",
                                "typeString": "mapping(address => struct User.Physician storage ref)"
                              }
                            },
                            "id": 314,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 313,
                              "name": "public_key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 298,
                              "src": "3261:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3250:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$163_storage",
                              "typeString": "struct User.Physician storage ref"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "physician_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 148,
                          "src": "3250:39:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3292:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3250:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f2070687973696369616e2065786973747320756e6465722074686973206164647265737321",
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3295:41:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ed217086064b34e54c44d9110ea6ba325df9ce2e2b0c43ff96dfd07cc6e4c38",
                          "typeString": "literal_string \"No physician exists under this address!\""
                        },
                        "value": "No physician exists under this address!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ed217086064b34e54c44d9110ea6ba325df9ce2e2b0c43ff96dfd07cc6e4c38",
                          "typeString": "literal_string \"No physician exists under this address!\""
                        }
                      ],
                      "id": 311,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        424,
                        425
                      ],
                      "referencedDeclaration": 425,
                      "src": "3242:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3242:95:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "3242:95:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 321,
                          "name": "physicians",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "3347:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$163_storage_$",
                            "typeString": "mapping(address => struct User.Physician storage ref)"
                          }
                        },
                        "id": 323,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 322,
                          "name": "public_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "3358:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3347:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Physician_$163_storage",
                          "typeString": "struct User.Physician storage ref"
                        }
                      },
                      "id": 324,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "verified",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 162,
                      "src": "3347:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3381:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3347:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "3347:38:2"
                }
              ]
            },
            "documentation": null,
            "id": 329,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyPhysician",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "3071:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3071:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3070:20:2"
            },
            "returnParameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 301,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "3107:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3107:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3106:6:2"
            },
            "scope": 406,
            "src": "3046:346:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 348,
              "nodeType": "Block",
              "src": "3552:118:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 336,
                          "name": "physicians",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "3565:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$163_storage_$",
                            "typeString": "mapping(address => struct User.Physician storage ref)"
                          }
                        },
                        "id": 338,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 337,
                          "name": "public_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 331,
                          "src": "3576:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3565:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Physician_$163_storage",
                          "typeString": "struct User.Physician storage ref"
                        }
                      },
                      "id": 339,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "physician_number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 148,
                      "src": "3565:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3607:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3565:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 347,
                  "nodeType": "IfStatement",
                  "src": "3562:101:2",
                  "trueBody": {
                    "id": 346,
                    "nodeType": "Block",
                    "src": "3609:54:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 342,
                            "name": "physicians",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "3630:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$163_storage_$",
                              "typeString": "mapping(address => struct User.Physician storage ref)"
                            }
                          },
                          "id": 344,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 343,
                            "name": "public_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 331,
                            "src": "3641:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3630:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Physician_$163_storage",
                            "typeString": "struct User.Physician storage ref"
                          }
                        },
                        "functionReturnParameters": 335,
                        "id": 345,
                        "nodeType": "Return",
                        "src": "3623:29:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 349,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPhysician",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 331,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "3495:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3495:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3494:20:2"
            },
            "returnParameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 334,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "3535:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Physician_$163_memory_ptr",
                    "typeString": "struct User.Physician"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 333,
                    "name": "Physician",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 163,
                    "src": "3535:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Physician_$163_storage_ptr",
                      "typeString": "struct User.Physician"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3534:18:2"
            },
            "scope": 406,
            "src": "3473:197:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 376,
              "nodeType": "Block",
              "src": "3756:179:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 356,
                            "name": "insureds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "3769:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$140_storage_$",
                              "typeString": "mapping(address => struct User.Insured storage ref)"
                            }
                          },
                          "id": 358,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 357,
                            "name": "public_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 351,
                            "src": "3778:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3769:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Insured_$140_storage",
                            "typeString": "struct User.Insured storage ref"
                          }
                        },
                        "id": 359,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "insured_number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 135,
                        "src": "3769:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3807:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3769:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 362,
                            "name": "insureds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "3812:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$140_storage_$",
                              "typeString": "mapping(address => struct User.Insured storage ref)"
                            }
                          },
                          "id": 364,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 363,
                            "name": "public_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 351,
                            "src": "3821:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3812:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Insured_$140_storage",
                            "typeString": "struct User.Insured storage ref"
                          }
                        },
                        "id": 365,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "verified",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 139,
                        "src": "3812:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3845:4:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "3812:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3769:80:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 374,
                    "nodeType": "Block",
                    "src": "3892:37:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3913:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 355,
                        "id": 373,
                        "nodeType": "Return",
                        "src": "3906:12:2"
                      }
                    ]
                  },
                  "id": 375,
                  "nodeType": "IfStatement",
                  "src": "3766:163:2",
                  "trueBody": {
                    "id": 371,
                    "nodeType": "Block",
                    "src": "3850:36:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3871:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 355,
                        "id": 370,
                        "nodeType": "Return",
                        "src": "3864:11:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkInsuredVerification",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "3710:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3710:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3709:20:2"
            },
            "returnParameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 354,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "3751:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 353,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3751:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3750:6:2"
            },
            "scope": 406,
            "src": "3676:259:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 404,
              "nodeType": "Block",
              "src": "4023:185:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 384,
                            "name": "physicians",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "4036:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$163_storage_$",
                              "typeString": "mapping(address => struct User.Physician storage ref)"
                            }
                          },
                          "id": 386,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 385,
                            "name": "public_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 379,
                            "src": "4047:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4036:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Physician_$163_storage",
                            "typeString": "struct User.Physician storage ref"
                          }
                        },
                        "id": 387,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "physician_number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 148,
                        "src": "4036:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4078:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4036:43:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 390,
                            "name": "physicians",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "4083:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$163_storage_$",
                              "typeString": "mapping(address => struct User.Physician storage ref)"
                            }
                          },
                          "id": 392,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 391,
                            "name": "public_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 379,
                            "src": "4094:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4083:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Physician_$163_storage",
                            "typeString": "struct User.Physician storage ref"
                          }
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "verified",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 162,
                        "src": "4083:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4118:4:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "4083:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4036:86:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 402,
                    "nodeType": "Block",
                    "src": "4165:37:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4186:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 383,
                        "id": 401,
                        "nodeType": "Return",
                        "src": "4179:12:2"
                      }
                    ]
                  },
                  "id": 403,
                  "nodeType": "IfStatement",
                  "src": "4033:169:2",
                  "trueBody": {
                    "id": 399,
                    "nodeType": "Block",
                    "src": "4123:36:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4144:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 383,
                        "id": 398,
                        "nodeType": "Return",
                        "src": "4137:11:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 405,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkPhysicianVerification",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 379,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "3977:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3977:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3976:20:2"
            },
            "returnParameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 382,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "4018:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4018:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4017:6:2"
            },
            "scope": 406,
            "src": "3941:267:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 407,
        "src": "243:3967:2"
      }
    ],
    "src": "175:4035:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x7a796B19985588E62c4EB2d445f22D368569F68E",
      "transactionHash": "0x688d92f583dc8e37972a1f5a7d1cec3e45e18ae3f1281165c67c265280c1e3d8"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-27T12:48:37.225Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}