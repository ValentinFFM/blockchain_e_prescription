{
  "contractName": "User",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "insureds",
      "outputs": [
        {
          "internalType": "string",
          "name": "surname",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "street",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "street_number",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "post_code",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "city",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "birth_date",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "insurance",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "insurance_number",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "insured_number",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "insured_status",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "physicians",
      "outputs": [
        {
          "internalType": "string",
          "name": "job_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "surname",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "physician_number",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "street",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "street_number",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "post_code",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "city",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "telephone_number",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "business_number",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "verifying_institution",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "surname",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "street",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "street_number",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "post_code",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "city",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "birth_date",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "insurance",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "insurance_number",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "insured_number",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "insured_status",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ],
          "internalType": "struct User.Insured",
          "name": "insured_",
          "type": "tuple"
        }
      ],
      "name": "addNewInsured",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "public_key",
          "type": "address"
        }
      ],
      "name": "verifyInsured",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "public_key",
          "type": "address"
        }
      ],
      "name": "getInsured",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "surname",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "street",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "street_number",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "post_code",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "city",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "birth_date",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "insurance",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "insurance_number",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "insured_number",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "insured_status",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ],
          "internalType": "struct User.Insured",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "job_title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "surname",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "physician_number",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "street",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "street_number",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "post_code",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "city",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "telephone_number",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "business_number",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ],
          "internalType": "struct User.Physician",
          "name": "physician_",
          "type": "tuple"
        }
      ],
      "name": "addNewPhysician",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "public_key",
          "type": "address"
        }
      ],
      "name": "verifyPhysician",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "public_key",
          "type": "address"
        }
      ],
      "name": "getPhysician",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "job_title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "surname",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "physician_number",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "street",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "street_number",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "post_code",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "city",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "telephone_number",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "business_number",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ],
          "internalType": "struct User.Physician",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "public_key",
          "type": "address"
        }
      ],
      "name": "checkInsuredVerification",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"surname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"street\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"street_number\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"post_code\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"birth_date\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"insurance\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"insurance_number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"insured_number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"insured_status\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"internalType\":\"struct User.Insured\",\"name\":\"insured_\",\"type\":\"tuple\"}],\"name\":\"addNewInsured\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"job_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"surname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"physician_number\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"street\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"street_number\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"post_code\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"telephone_number\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"business_number\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"internalType\":\"struct User.Physician\",\"name\":\"physician_\",\"type\":\"tuple\"}],\"name\":\"addNewPhysician\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"public_key\",\"type\":\"address\"}],\"name\":\"checkInsuredVerification\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"public_key\",\"type\":\"address\"}],\"name\":\"getInsured\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"surname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"street\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"street_number\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"post_code\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"birth_date\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"insurance\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"insurance_number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"insured_number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"insured_status\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"internalType\":\"struct User.Insured\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"public_key\",\"type\":\"address\"}],\"name\":\"getPhysician\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"job_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"surname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"physician_number\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"street\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"street_number\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"post_code\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"telephone_number\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"business_number\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"internalType\":\"struct User.Physician\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"insureds\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"surname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"street\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"street_number\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"post_code\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"birth_date\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"insurance\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"insurance_number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"insured_number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"insured_status\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"physicians\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"job_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"surname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"physician_number\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"street\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"street_number\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"post_code\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"telephone_number\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"business_number\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"public_key\",\"type\":\"address\"}],\"name\":\"verifyInsured\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"public_key\",\"type\":\"address\"}],\"name\":\"verifyPhysician\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"verifying_institution\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/User.sol\":\"User\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/User.sol\":{\"keccak256\":\"0x5e82d143a845bc54a4beafcd66e7d80b94771a9f3350b7c8790785038cc766b2\",\"urls\":[\"bzz-raw://10092b4723c53024a06067a47c778815e74654ba89eebb036406d0c8c4afa998\",\"dweb:/ipfs/QmWEgwaPSwNrN8c73Q13FxBvgZ3nnWt1FJXxoixcFcWVgK\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c806381eceeb71161006657806381eceeb71461016b578063c11dd80814610189578063c863b9e5146101b9578063e669845a146101f4578063f5860dfc1461022e5761009e565b80630ee60c57146100a35780631ee952ad146100d357806327b52abc146101035780634b7b9842146101335780636e98f9f31461014f575b600080fd5b6100bd60048036036100b89190810190612315565b61025e565b6040516100ca9190612877565b60405180910390f35b6100ed60048036036100e89190810190612315565b6103d4565b6040516100fa9190612afb565b60405180910390f35b61011d60048036036101189190810190612315565b610926565b60405161012a9190612877565b60405180910390f35b61014d6004803603610148919081019061233e565b6109e4565b005b6101696004803603610164919081019061237f565b610bc4565b005b610173610d8e565b604051610180919061285c565b60405180910390f35b6101a3600480360361019e9190810190612315565b610db3565b6040516101b09190612ad9565b60405180910390f35b6101d360048036036101ce9190810190612315565b61130f565b6040516101eb9c9b9a99989796959493929190612892565b60405180910390f35b61020e60048036036102099190810190612315565b6117a4565b6040516102259b9a9998979695949392919061297d565b60405180910390f35b61024860048036036102439190810190612315565b611c33565b6040516102559190612877565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e690612a79565b60405180910390fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015411610374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036b90612a59565b60405180910390fd5b6001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a0160006101000a81548160ff021916908315150217905550919050565b6103dc611da8565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154111561092057600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180610160016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561050b5780601f106104e05761010080835404028352916020019161050b565b820191906000526020600020905b8154815290600101906020018083116104ee57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561064f5780601f106106245761010080835404028352916020019161064f565b820191906000526020600020905b81548152906001019060200180831161063257829003601f168201915b5050505050815260200160038201548152602001600482018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106fb5780601f106106d0576101008083540402835291602001916106fb565b820191906000526020600020905b8154815290600101906020018083116106de57829003601f168201915b50505050508152602001600582018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561079d5780601f106107725761010080835404028352916020019161079d565b820191906000526020600020905b81548152906001019060200180831161078057829003601f168201915b5050505050815260200160068201548152602001600782018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108495780601f1061081e57610100808354040283529160200191610849565b820191906000526020600020905b81548152906001019060200180831161082c57829003601f168201915b50505050508152602001600882018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108eb5780601f106108c0576101008083540402835291602001916108eb565b820191906000526020600020905b8154815290600101906020018083116108ce57829003601f168201915b5050505050815260200160098201548152602001600a820160009054906101000a900460ff1615151515815250509050610921565b5b919050565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600901541180156109cc575060011515600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600b0160009054906101000a900460ff161515145b156109da57600190506109df565b600090505b919050565b60405180610180016040528082600001518152602001826020015181526020018260400151815260200182606001518152602001826080015181526020018260a0015181526020018260c0015181526020018260e00151815260200182610100015181526020018261012001518152602001826101400151815260200160001515815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610ac3929190611e04565b506020820151816001019080519060200190610ae0929190611e04565b506040820151816002019080519060200190610afd929190611e04565b506060820151816003019080519060200190610b1a929190611e04565b506080820151816004015560a0820151816005019080519060200190610b41929190611e04565b5060c0820151816006019080519060200190610b5e929190611e04565b5060e0820151816007019080519060200190610b7b929190611e04565b506101008201518160080155610120820151816009015561014082015181600a015561016082015181600b0160006101000a81548160ff02191690831515021790555090505050565b60405180610160016040528082600001518152602001826020015181526020018260400151815260200182606001518152602001826080015181526020018260a0015181526020018260c0015181526020018260e0015181526020018261010001518152602001826101200151815260200160001515815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610c98929190611e04565b506020820151816001019080519060200190610cb5929190611e04565b506040820151816002019080519060200190610cd2929190611e04565b50606082015181600301556080820151816004019080519060200190610cf9929190611e04565b5060a0820151816005019080519060200190610d16929190611e04565b5060c0820151816006015560e0820151816007019080519060200190610d3d929190611e04565b50610100820151816008019080519060200190610d5b929190611e04565b50610120820151816009015561014082015181600a0160006101000a81548160ff02191690831515021790555090505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610dbb611e84565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060090154111561130957600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180610180016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610eea5780601f10610ebf57610100808354040283529160200191610eea565b820191906000526020600020905b815481529060010190602001808311610ecd57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f8c5780601f10610f6157610100808354040283529160200191610f8c565b820191906000526020600020905b815481529060010190602001808311610f6f57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561102e5780601f106110035761010080835404028352916020019161102e565b820191906000526020600020905b81548152906001019060200180831161101157829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110d05780601f106110a5576101008083540402835291602001916110d0565b820191906000526020600020905b8154815290600101906020018083116110b357829003601f168201915b5050505050815260200160048201548152602001600582018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561117c5780601f106111515761010080835404028352916020019161117c565b820191906000526020600020905b81548152906001019060200180831161115f57829003601f168201915b50505050508152602001600682018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561121e5780601f106111f35761010080835404028352916020019161121e565b820191906000526020600020905b81548152906001019060200180831161120157829003601f168201915b50505050508152602001600782018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112c05780601f10611295576101008083540402835291602001916112c0565b820191906000526020600020905b8154815290600101906020018083116112a357829003601f168201915b505050505081526020016008820154815260200160098201548152602001600a8201548152602001600b820160009054906101000a900460ff161515151581525050905061130a565b5b919050565b6001602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113bb5780601f10611390576101008083540402835291602001916113bb565b820191906000526020600020905b81548152906001019060200180831161139e57829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114595780601f1061142e57610100808354040283529160200191611459565b820191906000526020600020905b81548152906001019060200180831161143c57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114f75780601f106114cc576101008083540402835291602001916114f7565b820191906000526020600020905b8154815290600101906020018083116114da57829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115955780601f1061156a57610100808354040283529160200191611595565b820191906000526020600020905b81548152906001019060200180831161157857829003601f168201915b505050505090806004015490806005018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116395780601f1061160e57610100808354040283529160200191611639565b820191906000526020600020905b81548152906001019060200180831161161c57829003601f168201915b505050505090806006018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116d75780601f106116ac576101008083540402835291602001916116d7565b820191906000526020600020905b8154815290600101906020018083116116ba57829003601f168201915b505050505090806007018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117755780601f1061174a57610100808354040283529160200191611775565b820191906000526020600020905b81548152906001019060200180831161175857829003601f168201915b50505050509080600801549080600901549080600a01549080600b0160009054906101000a900460ff1690508c565b6002602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118505780601f1061182557610100808354040283529160200191611850565b820191906000526020600020905b81548152906001019060200180831161183357829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118ee5780601f106118c3576101008083540402835291602001916118ee565b820191906000526020600020905b8154815290600101906020018083116118d157829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561198c5780601f106119615761010080835404028352916020019161198c565b820191906000526020600020905b81548152906001019060200180831161196f57829003601f168201915b505050505090806003015490806004018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a305780601f10611a0557610100808354040283529160200191611a30565b820191906000526020600020905b815481529060010190602001808311611a1357829003601f168201915b505050505090806005018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ace5780601f10611aa357610100808354040283529160200191611ace565b820191906000526020600020905b815481529060010190602001808311611ab157829003601f168201915b505050505090806006015490806007018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b725780601f10611b4757610100808354040283529160200191611b72565b820191906000526020600020905b815481529060010190602001808311611b5557829003601f168201915b505050505090806008018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c105780601f10611be557610100808354040283529160200191611c10565b820191906000526020600020905b815481529060010190602001808311611bf357829003601f168201915b50505050509080600901549080600a0160009054906101000a900460ff1690508b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611cc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cbb90612a99565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206009015411611d49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d4090612ab9565b60405180910390fd5b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600b0160006101000a81548160ff021916908315150217905550919050565b604051806101600160405280606081526020016060815260200160608152602001600081526020016060815260200160608152602001600081526020016060815260200160608152602001600081526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611e4557805160ff1916838001178555611e73565b82800160010185558215611e73579182015b82811115611e72578251825591602001919060010190611e57565b5b509050611e809190611ee7565b5090565b60405180610180016040528060608152602001606081526020016060815260200160608152602001600081526020016060815260200160608152602001606081526020016000815260200160008152602001600081526020016000151581525090565b611f0991905b80821115611f05576000816000905550600101611eed565b5090565b90565b600081359050611f1b81612c3e565b92915050565b600081359050611f3081612c55565b92915050565b600082601f830112611f4757600080fd5b8135611f5a611f5582612b4a565b612b1d565b91508082526020830160208301858383011115611f7657600080fd5b611f81838284612beb565b50505092915050565b60006101808284031215611f9d57600080fd5b611fa8610180612b1d565b9050600082013567ffffffffffffffff811115611fc457600080fd5b611fd084828501611f36565b600083015250602082013567ffffffffffffffff811115611ff057600080fd5b611ffc84828501611f36565b602083015250604082013567ffffffffffffffff81111561201c57600080fd5b61202884828501611f36565b604083015250606082013567ffffffffffffffff81111561204857600080fd5b61205484828501611f36565b606083015250608061206884828501612300565b60808301525060a082013567ffffffffffffffff81111561208857600080fd5b61209484828501611f36565b60a08301525060c082013567ffffffffffffffff8111156120b457600080fd5b6120c084828501611f36565b60c08301525060e082013567ffffffffffffffff8111156120e057600080fd5b6120ec84828501611f36565b60e08301525061010061210184828501612300565b6101008301525061012061211784828501612300565b6101208301525061014061212d84828501612300565b6101408301525061016061214384828501611f21565b6101608301525092915050565b6000610160828403121561216357600080fd5b61216e610160612b1d565b9050600082013567ffffffffffffffff81111561218a57600080fd5b61219684828501611f36565b600083015250602082013567ffffffffffffffff8111156121b657600080fd5b6121c284828501611f36565b602083015250604082013567ffffffffffffffff8111156121e257600080fd5b6121ee84828501611f36565b604083015250606061220284828501612300565b606083015250608082013567ffffffffffffffff81111561222257600080fd5b61222e84828501611f36565b60808301525060a082013567ffffffffffffffff81111561224e57600080fd5b61225a84828501611f36565b60a08301525060c061226e84828501612300565b60c08301525060e082013567ffffffffffffffff81111561228e57600080fd5b61229a84828501611f36565b60e08301525061010082013567ffffffffffffffff8111156122bb57600080fd5b6122c784828501611f36565b610100830152506101206122dd84828501612300565b610120830152506101406122f384828501611f21565b6101408301525092915050565b60008135905061230f81612c6c565b92915050565b60006020828403121561232757600080fd5b600061233584828501611f0c565b91505092915050565b60006020828403121561235057600080fd5b600082013567ffffffffffffffff81111561236a57600080fd5b61237684828501611f8a565b91505092915050565b60006020828403121561239157600080fd5b600082013567ffffffffffffffff8111156123ab57600080fd5b6123b784828501612150565b91505092915050565b6123c981612ba3565b82525050565b6123d881612bb5565b82525050565b6123e781612bb5565b82525050565b60006123f882612b76565b6124028185612b81565b9350612412818560208601612bfa565b61241b81612c2d565b840191505092915050565b600061243182612b76565b61243b8185612b92565b935061244b818560208601612bfa565b61245481612c2d565b840191505092915050565b600061246c602783612b92565b91507f4e6f2070687973696369616e2065786973747320756e6465722074686973206160008301527f64647265737321000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006124d2603e83612b92565b91507f4f6e6c79207468652076657269667920696e737469747574696f6e206861732060008301527f74686520726967687420746f207665726966792070687973696369616e2100006020830152604082019050919050565b6000612538603c83612b92565b91507f4f6e6c79207468652076657269667920696e737469747574696f6e206861732060008301527f74686520726967687420746f2076657269667920696e737572656421000000006020830152604082019050919050565b600061259e602583612b92565b91507f4e6f20696e73757265642065786973747320756e64657220746869732061646460008301527f72657373210000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061018083016000830151848203600086015261261582826123ed565b9150506020830151848203602086015261262f82826123ed565b9150506040830151848203604086015261264982826123ed565b9150506060830151848203606086015261266382826123ed565b9150506080830151612678608086018261283e565b5060a083015184820360a086015261269082826123ed565b91505060c083015184820360c08601526126aa82826123ed565b91505060e083015184820360e08601526126c482826123ed565b9150506101008301516126db61010086018261283e565b506101208301516126f061012086018261283e565b5061014083015161270561014086018261283e565b5061016083015161271a6101608601826123cf565b508091505092915050565b600061016083016000830151848203600086015261274382826123ed565b9150506020830151848203602086015261275d82826123ed565b9150506040830151848203604086015261277782826123ed565b915050606083015161278c606086018261283e565b50608083015184820360808601526127a482826123ed565b91505060a083015184820360a08601526127be82826123ed565b91505060c08301516127d360c086018261283e565b5060e083015184820360e08601526127eb82826123ed565b91505061010083015184820361010086015261280782826123ed565b91505061012083015161281e61012086018261283e565b506101408301516128336101408601826123cf565b508091505092915050565b61284781612be1565b82525050565b61285681612be1565b82525050565b600060208201905061287160008301846123c0565b92915050565b600060208201905061288c60008301846123de565b92915050565b60006101808201905081810360008301526128ad818f612426565b905081810360208301526128c1818e612426565b905081810360408301526128d5818d612426565b905081810360608301526128e9818c612426565b90506128f8608083018b61284d565b81810360a083015261290a818a612426565b905081810360c083015261291e8189612426565b905081810360e08301526129328188612426565b905061294261010083018761284d565b61295061012083018661284d565b61295e61014083018561284d565b61296c6101608301846123de565b9d9c50505050505050505050505050565b6000610160820190508181036000830152612998818e612426565b905081810360208301526129ac818d612426565b905081810360408301526129c0818c612426565b90506129cf606083018b61284d565b81810360808301526129e1818a612426565b905081810360a08301526129f58189612426565b9050612a0460c083018861284d565b81810360e0830152612a168187612426565b9050818103610100830152612a2b8186612426565b9050612a3b61012083018561284d565b612a496101408301846123de565b9c9b505050505050505050505050565b60006020820190508181036000830152612a728161245f565b9050919050565b60006020820190508181036000830152612a92816124c5565b9050919050565b60006020820190508181036000830152612ab28161252b565b9050919050565b60006020820190508181036000830152612ad281612591565b9050919050565b60006020820190508181036000830152612af381846125f7565b905092915050565b60006020820190508181036000830152612b158184612725565b905092915050565b6000604051905081810181811067ffffffffffffffff82111715612b4057600080fd5b8060405250919050565b600067ffffffffffffffff821115612b6157600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612bae82612bc1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015612c18578082015181840152602081019050612bfd565b83811115612c27576000848401525b50505050565b6000601f19601f8301169050919050565b612c4781612ba3565b8114612c5257600080fd5b50565b612c5e81612bb5565b8114612c6957600080fd5b50565b612c7581612be1565b8114612c8057600080fd5b5056fea365627a7a723158201959c7b37e862832bc133acce3f6ea8c43612948c555962ef4c5cc6a1960a7cb6c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "243:3694:2:-;;;306:73;8:9:-1;5:2;;;30:1;27;20:12;5:2;306:73:2;362:10;338:21;;:34;;;;;;;;;;;;;;;;;;243:3694;;;;;;",
  "deployedSourceMap": "243:3694:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;243:3694:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3046:346;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3473:197;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3676:259;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1538:336;;;;;;;;;;;;;;;;:::i;:::-;;2609:347;;;;;;;;;;;;;;;;:::i;:::-;;263:36;;;:::i;:::-;;;;;;;;;;;;;;;;2377:187;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1303:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1447:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;1964:334;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3046:346;3107:4;3144:21;;;;;;;;;;;3130:35;;:10;:35;;;3122:110;;;;;;;;;;;;;;;;;;;;;;3292:1;3250:10;:22;3261:10;3250:22;;;;;;;;;;;;;;;:39;;;:43;3242:95;;;;;;;;;;;;;;;;;;;;;;3381:4;3347:10;:22;3358:10;3347:22;;;;;;;;;;;;;;;:31;;;:38;;;;;;;;;;;;;;;;;;3046:346;;;:::o;3473:197::-;3535:16;;:::i;:::-;3607:1;3565:10;:22;3576:10;3565:22;;;;;;;;;;;;;;;:39;;;:43;3562:101;;;3630:10;:22;3641:10;3630:22;;;;;;;;;;;;;;;3623:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3562:101;3473:197;;;;:::o;3676:259::-;3751:4;3807:1;3769:8;:20;3778:10;3769:20;;;;;;;;;;;;;;;:35;;;:39;:80;;;;;3845:4;3812:37;;:8;:20;3821:10;3812:20;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:37;;;3769:80;3766:163;;;3871:4;3864:11;;;;3766:163;3913:5;3906:12;;3676:259;;;;:::o;1538:336::-;1626:241;;;;;;;;1634:8;:16;;;1626:241;;;;1652:8;:13;;;1626:241;;;;1667:8;:15;;;1626:241;;;;1684:8;:22;;;1626:241;;;;1708:8;:18;;;1626:241;;;;1728:8;:13;;;1626:241;;;;1743:8;:19;;;1626:241;;;;1764:8;:18;;;1626:241;;;;1784:8;:25;;;1626:241;;;;1811:8;:23;;;1626:241;;;;1836:8;:23;;;1626:241;;;;1861:5;1626:241;;;;;1603:8;:20;1612:10;1603:20;;;;;;;;;;;;;;;:264;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1538:336;:::o;2609:347::-;2704:245;;;;;;;;2714:10;:20;;;2704:245;;;;2736:10;:18;;;2704:245;;;;2756:10;:15;;;2704:245;;;;2773:10;:27;;;2704:245;;;;2802:10;:17;;;2704:245;;;;2821:10;:24;;;2704:245;;;;2847:10;:20;;;2704:245;;;;2869:10;:15;;;2704:245;;;;2886:10;:27;;;2704:245;;;;2915:10;:26;;;2704:245;;;;2943:5;2704:245;;;;;2679:10;:22;2690:10;2679:22;;;;;;;;;;;;;;;:270;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2609:347;:::o;263:36::-;;;;;;;;;;;;;:::o;2377:187::-;2437:14;;:::i;:::-;2503:1;2465:8;:20;2474:10;2465:20;;;;;;;;;;;;;;;:35;;;:39;2462:95;;;2526:8;:20;2535:10;2526:20;;;;;;;;;;;;;;;2519:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2462:95;2377:187;;;;:::ooo;1964:334::-;2023:4;2060:21;;;;;;;;;;;2046:35;;:10;:35;;;2038:108;;;;;;;;;;;;;;;;;;;;;;2202:1;2164:8;:20;2173:10;2164:20;;;;;;;;;;;;;;;:35;;;:39;2156:89;;;;;;;;;;;;;;;;;;;;;;2287:4;2255:8;:20;2264:10;2255:20;;;;;;;;;;;;;;;:29;;;:36;;;;;;;;;;;;;;;;;;1964:334;;;:::o;243:3694::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:124;;219:6;206:20;197:29;;231:30;255:5;231:30;;;191:75;;;;;274:434;;372:3;365:4;357:6;353:17;349:27;339:2;;390:1;387;380:12;339:2;427:6;414:20;449:61;464:45;502:6;464:45;;;449:61;;;440:70;;530:6;523:5;516:21;566:4;558:6;554:17;599:4;592:5;588:16;634:3;625:6;620:3;616:16;613:25;610:2;;;651:1;648;641:12;610:2;661:41;695:6;690:3;685;661:41;;;332:376;;;;;;;;742:2632;;854:6;842:9;837:3;833:19;829:32;826:2;;;874:1;871;864:12;826:2;892:22;907:6;892:22;;;883:31;;995:1;984:9;980:17;967:31;1018:18;1010:6;1007:30;1004:2;;;1050:1;1047;1040:12;1004:2;1085:55;1136:3;1127:6;1116:9;1112:22;1085:55;;;1078:4;1071:5;1067:16;1060:81;924:228;1230:2;1219:9;1215:18;1202:32;1254:18;1246:6;1243:30;1240:2;;;1286:1;1283;1276:12;1240:2;1321:55;1372:3;1363:6;1352:9;1348:22;1321:55;;;1314:4;1307:5;1303:16;1296:81;1162:226;1468:2;1457:9;1453:18;1440:32;1492:18;1484:6;1481:30;1478:2;;;1524:1;1521;1514:12;1478:2;1559:55;1610:3;1601:6;1590:9;1586:22;1559:55;;;1552:4;1545:5;1541:16;1534:81;1398:228;1713:2;1702:9;1698:18;1685:32;1737:18;1729:6;1726:30;1723:2;;;1769:1;1766;1759:12;1723:2;1804:55;1855:3;1846:6;1835:9;1831:22;1804:55;;;1797:4;1790:5;1786:16;1779:81;1636:235;1926:3;1960:49;2005:3;1996:6;1985:9;1981:22;1960:49;;;1953:4;1946:5;1942:16;1935:75;1881:140;2099:3;2088:9;2084:19;2071:33;2124:18;2116:6;2113:30;2110:2;;;2156:1;2153;2146:12;2110:2;2191:55;2242:3;2233:6;2222:9;2218:22;2191:55;;;2184:4;2177:5;2173:16;2166:81;2031:227;2342:3;2331:9;2327:19;2314:33;2367:18;2359:6;2356:30;2353:2;;;2399:1;2396;2389:12;2353:2;2434:55;2485:3;2476:6;2465:9;2461:22;2434:55;;;2427:4;2420:5;2416:16;2409:81;2268:233;2584:3;2573:9;2569:19;2556:33;2609:18;2601:6;2598:30;2595:2;;;2641:1;2638;2631:12;2595:2;2676:55;2727:3;2718:6;2707:9;2703:22;2676:55;;;2669:4;2662:5;2658:16;2651:81;2511:232;2805:3;2841:49;2886:3;2877:6;2866:9;2862:22;2841:49;;;2832:6;2825:5;2821:18;2814:77;2753:149;2962:3;2998:49;3043:3;3034:6;3023:9;3019:22;2998:49;;;2989:6;2982:5;2978:18;2971:77;2912:147;3119:3;3155:49;3200:3;3191:6;3180:9;3176:22;3155:49;;;3146:6;3139:5;3135:18;3128:77;3069:147;3270:3;3306:46;3348:3;3339:6;3328:9;3324:22;3306:46;;;3297:6;3290:5;3286:18;3279:74;3226:138;820:2554;;;;;3409:2485;;3524:6;3512:9;3507:3;3503:19;3499:32;3496:2;;;3544:1;3541;3534:12;3496:2;3562:22;3577:6;3562:22;;;3553:31;;3667:1;3656:9;3652:17;3639:31;3690:18;3682:6;3679:30;3676:2;;;3722:1;3719;3712:12;3676:2;3757:55;3808:3;3799:6;3788:9;3784:22;3757:55;;;3750:4;3743:5;3739:16;3732:81;3594:230;3905:2;3894:9;3890:18;3877:32;3929:18;3921:6;3918:30;3915:2;;;3961:1;3958;3951:12;3915:2;3996:55;4047:3;4038:6;4027:9;4023:22;3996:55;;;3989:4;3982:5;3978:16;3971:81;3834:229;4141:2;4130:9;4126:18;4113:32;4165:18;4157:6;4154:30;4151:2;;;4197:1;4194;4187:12;4151:2;4232:55;4283:3;4274:6;4263:9;4259:22;4232:55;;;4225:4;4218:5;4214:16;4207:81;4073:226;4361:2;4394:49;4439:3;4430:6;4419:9;4415:22;4394:49;;;4387:4;4380:5;4376:16;4369:75;4309:146;4535:3;4524:9;4520:19;4507:33;4560:18;4552:6;4549:30;4546:2;;;4592:1;4589;4582:12;4546:2;4627:55;4678:3;4669:6;4658:9;4654:22;4627:55;;;4620:4;4613:5;4609:16;4602:81;4465:229;4781:3;4770:9;4766:19;4753:33;4806:18;4798:6;4795:30;4792:2;;;4838:1;4835;4828:12;4792:2;4873:55;4924:3;4915:6;4904:9;4900:22;4873:55;;;4866:4;4859:5;4855:16;4848:81;4704:236;4995:3;5029:49;5074:3;5065:6;5054:9;5050:22;5029:49;;;5022:4;5015:5;5011:16;5004:75;4950:140;5168:3;5157:9;5153:19;5140:33;5193:18;5185:6;5182:30;5179:2;;;5225:1;5222;5215:12;5179:2;5260:55;5311:3;5302:6;5291:9;5287:22;5260:55;;;5253:4;5246:5;5242:16;5235:81;5100:227;5417:3;5406:9;5402:19;5389:33;5442:18;5434:6;5431:30;5428:2;;;5474:1;5471;5464:12;5428:2;5511:55;5562:3;5553:6;5542:9;5538:22;5511:55;;;5502:6;5495:5;5491:18;5484:83;5337:241;5639:3;5675:49;5720:3;5711:6;5700:9;5696:22;5675:49;;;5666:6;5659:5;5655:18;5648:77;5588:148;5790:3;5826:46;5868:3;5859:6;5848:9;5844:22;5826:46;;;5817:6;5810:5;5806:18;5799:74;5746:138;3490:2404;;;;;5901:130;;5981:6;5968:20;5959:29;;5993:33;6020:5;5993:33;;;5953:78;;;;;6038:241;;6142:2;6130:9;6121:7;6117:23;6113:32;6110:2;;;6158:1;6155;6148:12;6110:2;6193:1;6210:53;6255:7;6246:6;6235:9;6231:22;6210:53;;;6200:63;;6172:97;6104:175;;;;;6286:373;;6413:2;6401:9;6392:7;6388:23;6384:32;6381:2;;;6429:1;6426;6419:12;6381:2;6492:1;6481:9;6477:17;6464:31;6515:18;6507:6;6504:30;6501:2;;;6547:1;6544;6537:12;6501:2;6567:76;6635:7;6626:6;6615:9;6611:22;6567:76;;;6557:86;;6443:206;6375:284;;;;;6666:379;;6796:2;6784:9;6775:7;6771:23;6767:32;6764:2;;;6812:1;6809;6802:12;6764:2;6875:1;6864:9;6860:17;6847:31;6898:18;6890:6;6887:30;6884:2;;;6930:1;6927;6920:12;6884:2;6950:79;7021:7;7012:6;7001:9;6997:22;6950:79;;;6940:89;;6826:209;6758:287;;;;;7052:113;7135:24;7153:5;7135:24;;;7130:3;7123:37;7117:48;;;7172:94;7239:21;7254:5;7239:21;;;7234:3;7227:34;7221:45;;;7273:104;7350:21;7365:5;7350:21;;;7345:3;7338:34;7332:45;;;7384:319;;7482:35;7511:5;7482:35;;;7529:61;7583:6;7578:3;7529:61;;;7522:68;;7595:52;7640:6;7635:3;7628:4;7621:5;7617:16;7595:52;;;7668:29;7690:6;7668:29;;;7663:3;7659:39;7652:46;;7462:241;;;;;;7710:339;;7818:35;7847:5;7818:35;;;7865:71;7929:6;7924:3;7865:71;;;7858:78;;7941:52;7986:6;7981:3;7974:4;7967:5;7963:16;7941:52;;;8014:29;8036:6;8014:29;;;8009:3;8005:39;7998:46;;7798:251;;;;;;8057:376;;8217:67;8281:2;8276:3;8217:67;;;8210:74;;8317:34;8313:1;8308:3;8304:11;8297:55;8386:9;8381:2;8376:3;8372:12;8365:31;8424:2;8419:3;8415:12;8408:19;;8203:230;;;;8442:399;;8602:67;8666:2;8661:3;8602:67;;;8595:74;;8702:34;8698:1;8693:3;8689:11;8682:55;8771:32;8766:2;8761:3;8757:12;8750:54;8832:2;8827:3;8823:12;8816:19;;8588:253;;;;8850:397;;9010:67;9074:2;9069:3;9010:67;;;9003:74;;9110:34;9106:1;9101:3;9097:11;9090:55;9179:30;9174:2;9169:3;9165:12;9158:52;9238:2;9233:3;9229:12;9222:19;;8996:251;;;;9256:374;;9416:67;9480:2;9475:3;9416:67;;;9409:74;;9516:34;9512:1;9507:3;9503:11;9496:55;9585:7;9580:2;9575:3;9571:12;9564:29;9621:2;9616:3;9612:12;9605:19;;9402:228;;;;9687:2613;;9834:6;9829:3;9825:16;9922:4;9915:5;9911:16;9905:23;9974:3;9968:4;9964:14;9957:4;9952:3;9948:14;9941:38;9994:69;10058:4;10044:12;9994:69;;;9986:77;;9856:219;10148:4;10141:5;10137:16;10131:23;10200:3;10194:4;10190:14;10183:4;10178:3;10174:14;10167:38;10220:69;10284:4;10270:12;10220:69;;;10212:77;;10085:216;10376:4;10369:5;10365:16;10359:23;10428:3;10422:4;10418:14;10411:4;10406:3;10402:14;10395:38;10448:69;10512:4;10498:12;10448:69;;;10440:77;;10311:218;10611:4;10604:5;10600:16;10594:23;10663:3;10657:4;10653:14;10646:4;10641:3;10637:14;10630:38;10683:69;10747:4;10733:12;10683:69;;;10675:77;;10539:225;10842:4;10835:5;10831:16;10825:23;10854:63;10911:4;10906:3;10902:14;10888:12;10854:63;;;10774:149;10996:4;10989:5;10985:16;10979:23;11048:3;11042:4;11038:14;11031:4;11026:3;11022:14;11015:38;11068:69;11132:4;11118:12;11068:69;;;11060:77;;10933:216;11228:4;11221:5;11217:16;11211:23;11280:3;11274:4;11270:14;11263:4;11258:3;11254:14;11247:38;11300:69;11364:4;11350:12;11300:69;;;11292:77;;11159:222;11459:4;11452:5;11448:16;11442:23;11511:3;11505:4;11501:14;11494:4;11489:3;11485:14;11478:38;11531:69;11595:4;11581:12;11531:69;;;11523:77;;11391:221;11697:6;11690:5;11686:18;11680:25;11711:65;11768:6;11763:3;11759:16;11745:12;11711:65;;;11622:160;11865:6;11858:5;11854:18;11848:25;11879:65;11936:6;11931:3;11927:16;11913:12;11879:65;;;11792:158;12033:6;12026:5;12022:18;12016:25;12047:65;12104:6;12099:3;12095:16;12081:12;12047:65;;;11960:158;12195:6;12188:5;12184:18;12178:25;12209:59;12260:6;12255:3;12251:16;12237:12;12209:59;;;12128:146;12291:4;12284:11;;9807:2493;;;;;;12360:2458;;12513:6;12508:3;12504:16;12603:4;12596:5;12592:16;12586:23;12655:3;12649:4;12645:14;12638:4;12633:3;12629:14;12622:38;12675:69;12739:4;12725:12;12675:69;;;12667:77;;12535:221;12832:4;12825:5;12821:16;12815:23;12884:3;12878:4;12874:14;12867:4;12862:3;12858:14;12851:38;12904:69;12968:4;12954:12;12904:69;;;12896:77;;12766:219;13058:4;13051:5;13047:16;13041:23;13110:3;13104:4;13100:14;13093:4;13088:3;13084:14;13077:38;13130:69;13194:4;13180:12;13130:69;;;13122:77;;12995:216;13296:4;13289:5;13285:16;13279:23;13308:63;13365:4;13360:3;13356:14;13342:12;13308:63;;;13221:156;13452:4;13445:5;13441:16;13435:23;13504:3;13498:4;13494:14;13487:4;13482:3;13478:14;13471:38;13524:69;13588:4;13574:12;13524:69;;;13516:77;;13387:218;13687:4;13680:5;13676:16;13670:23;13739:3;13733:4;13729:14;13722:4;13717:3;13713:14;13706:38;13759:69;13823:4;13809:12;13759:69;;;13751:77;;13615:225;13918:4;13911:5;13907:16;13901:23;13930:63;13987:4;13982:3;13978:14;13964:12;13930:63;;;13850:149;14072:4;14065:5;14061:16;14055:23;14124:3;14118:4;14114:14;14107:4;14102:3;14098:14;14091:38;14144:69;14208:4;14194:12;14144:69;;;14136:77;;14009:216;14310:6;14303:5;14299:18;14293:25;14366:3;14360:4;14356:14;14347:6;14342:3;14338:16;14331:40;14386:69;14450:4;14436:12;14386:69;;;14378:77;;14235:232;14551:6;14544:5;14540:18;14534:25;14565:65;14622:6;14617:3;14613:16;14599:12;14565:65;;;14477:159;14713:6;14706:5;14702:18;14696:25;14727:59;14778:6;14773:3;14769:16;14755:12;14727:59;;;14646:146;14809:4;14802:11;;12486:2332;;;;;;14825:103;14898:24;14916:5;14898:24;;;14893:3;14886:37;14880:48;;;14935:113;15018:24;15036:5;15018:24;;;15013:3;15006:37;15000:48;;;15055:213;;15173:2;15162:9;15158:18;15150:26;;15187:71;15255:1;15244:9;15240:17;15231:6;15187:71;;;15144:124;;;;;15275:201;;15387:2;15376:9;15372:18;15364:26;;15401:65;15463:1;15452:9;15448:17;15439:6;15401:65;;;15358:118;;;;;15483:1995;;16017:3;16006:9;16002:19;15994:27;;16068:9;16062:4;16058:20;16054:1;16043:9;16039:17;16032:47;16093:74;16162:4;16153:6;16093:74;;;16085:82;;16215:9;16209:4;16205:20;16200:2;16189:9;16185:18;16178:48;16240:74;16309:4;16300:6;16240:74;;;16232:82;;16362:9;16356:4;16352:20;16347:2;16336:9;16332:18;16325:48;16387:74;16456:4;16447:6;16387:74;;;16379:82;;16509:9;16503:4;16499:20;16494:2;16483:9;16479:18;16472:48;16534:74;16603:4;16594:6;16534:74;;;16526:82;;16619:73;16687:3;16676:9;16672:19;16663:6;16619:73;;;16741:9;16735:4;16731:20;16725:3;16714:9;16710:19;16703:49;16766:74;16835:4;16826:6;16766:74;;;16758:82;;16889:9;16883:4;16879:20;16873:3;16862:9;16858:19;16851:49;16914:74;16983:4;16974:6;16914:74;;;16906:82;;17037:9;17031:4;17027:20;17021:3;17010:9;17006:19;16999:49;17062:74;17131:4;17122:6;17062:74;;;17054:82;;17147:73;17215:3;17204:9;17200:19;17191:6;17147:73;;;17231;17299:3;17288:9;17284:19;17275:6;17231:73;;;17315:74;17384:3;17373:9;17369:19;17359:7;17315:74;;;17400:68;17463:3;17452:9;17448:19;17438:7;17400:68;;;15988:1490;;;;;;;;;;;;;;;;17485:1881;;17990:3;17979:9;17975:19;17967:27;;18041:9;18035:4;18031:20;18027:1;18016:9;18012:17;18005:47;18066:74;18135:4;18126:6;18066:74;;;18058:82;;18188:9;18182:4;18178:20;18173:2;18162:9;18158:18;18151:48;18213:74;18282:4;18273:6;18213:74;;;18205:82;;18335:9;18329:4;18325:20;18320:2;18309:9;18305:18;18298:48;18360:74;18429:4;18420:6;18360:74;;;18352:82;;18445:72;18513:2;18502:9;18498:18;18489:6;18445:72;;;18566:9;18560:4;18556:20;18550:3;18539:9;18535:19;18528:49;18591:74;18660:4;18651:6;18591:74;;;18583:82;;18714:9;18708:4;18704:20;18698:3;18687:9;18683:19;18676:49;18739:74;18808:4;18799:6;18739:74;;;18731:82;;18824:73;18892:3;18881:9;18877:19;18868:6;18824:73;;;18946:9;18940:4;18936:20;18930:3;18919:9;18915:19;18908:49;18971:74;19040:4;19031:6;18971:74;;;18963:82;;19094:9;19088:4;19084:20;19078:3;19067:9;19063:19;19056:49;19119:74;19188:4;19179:6;19119:74;;;19111:82;;19204:73;19272:3;19261:9;19257:19;19248:6;19204:73;;;19288:68;19351:3;19340:9;19336:19;19326:7;19288:68;;;17961:1405;;;;;;;;;;;;;;;19373:407;;19564:2;19553:9;19549:18;19541:26;;19614:9;19608:4;19604:20;19600:1;19589:9;19585:17;19578:47;19639:131;19765:4;19639:131;;;19631:139;;19535:245;;;;19787:407;;19978:2;19967:9;19963:18;19955:26;;20028:9;20022:4;20018:20;20014:1;20003:9;19999:17;19992:47;20053:131;20179:4;20053:131;;;20045:139;;19949:245;;;;20201:407;;20392:2;20381:9;20377:18;20369:26;;20442:9;20436:4;20432:20;20428:1;20417:9;20413:17;20406:47;20467:131;20593:4;20467:131;;;20459:139;;20363:245;;;;20615:407;;20806:2;20795:9;20791:18;20783:26;;20856:9;20850:4;20846:20;20842:1;20831:9;20827:17;20820:47;20881:131;21007:4;20881:131;;;20873:139;;20777:245;;;;21029:353;;21193:2;21182:9;21178:18;21170:26;;21243:9;21237:4;21233:20;21229:1;21218:9;21214:17;21207:47;21268:104;21367:4;21358:6;21268:104;;;21260:112;;21164:218;;;;;21389:365;;21559:2;21548:9;21544:18;21536:26;;21609:9;21603:4;21599:20;21595:1;21584:9;21580:17;21573:47;21634:110;21739:4;21730:6;21634:110;;;21626:118;;21530:224;;;;;21761:256;;21823:2;21817:9;21807:19;;21861:4;21853:6;21849:17;21960:6;21948:10;21945:22;21924:18;21912:10;21909:34;21906:62;21903:2;;;21981:1;21978;21971:12;21903:2;22001:10;21997:2;21990:22;21801:216;;;;;22024:318;;22164:18;22156:6;22153:30;22150:2;;;22196:1;22193;22186:12;22150:2;22263:4;22259:9;22252:4;22244:6;22240:17;22236:33;22228:41;;22327:4;22321;22317:15;22309:23;;22087:255;;;;22349:118;;22439:5;22433:12;22423:22;;22404:63;;;;22475:153;;22580:6;22575:3;22568:19;22617:4;22612:3;22608:14;22593:29;;22561:67;;;;;22637:163;;22752:6;22747:3;22740:19;22789:4;22784:3;22780:14;22765:29;;22733:67;;;;;22808:91;;22870:24;22888:5;22870:24;;;22859:35;;22853:46;;;;22906:85;;22979:5;22972:13;22965:21;22954:32;;22948:43;;;;22998:121;;23071:42;23064:5;23060:54;23049:65;;23043:76;;;;23126:72;;23188:5;23177:16;;23171:27;;;;23206:145;23287:6;23282:3;23277;23264:30;23343:1;23334:6;23329:3;23325:16;23318:27;23257:94;;;;23360:268;23425:1;23432:101;23446:6;23443:1;23440:13;23432:101;;;23522:1;23517:3;23513:11;23507:18;23503:1;23498:3;23494:11;23487:39;23468:2;23465:1;23461:10;23456:15;;23432:101;;;23548:6;23545:1;23542:13;23539:2;;;23613:1;23604:6;23599:3;23595:16;23588:27;23539:2;23409:219;;;;;23636:97;;23724:2;23720:7;23715:2;23708:5;23704:14;23700:28;23690:38;;23684:49;;;;23741:117;23810:24;23828:5;23810:24;;;23803:5;23800:35;23790:2;;23849:1;23846;23839:12;23790:2;23784:74;;23865:111;23931:21;23946:5;23931:21;;;23924:5;23921:32;23911:2;;23967:1;23964;23957:12;23911:2;23905:71;;23983:117;24052:24;24070:5;24052:24;;;24045:5;24042:35;24032:2;;24091:1;24088;24081:12;24032:2;24026:74;",
  "source": "// SPDX-License-Identifier: MIT\n\n// Defining the solidity version that is used and allowing experimental functions to allow using structs as datatype within the function call\npragma solidity >=0.4.21 <0.7.0;\npragma experimental ABIEncoderV2;\n\ncontract User {\n    address public verifying_institution;\n\n    constructor () public {\n        verifying_institution = msg.sender;\n    }\n\n    // Defining datatype insured to store all necessary data related to the insured\n    struct Insured {\n        string surname;\n        string name;\n        string street;\n        string street_number;\n        uint post_code;\n        string city;\n\n        string birth_date;\n\n        string insurance;\n        uint insurance_number;\n        uint insured_number;\n        uint insured_status;\n\n        bool verified;\n    }\n\n    // Defining datatype physician to store all necessary data related to the physician\n    struct Physician {\n        string job_title;\n        string surname;\n        string name;\n        uint physician_number;\n\n        string street;\n        string street_number;\n        uint post_code;\n        string city;\n        string telephone_number; \n        uint business_number;\n\n        bool verified;\n    }\n\n    // Insured Number mapped on the related insured object with all data of the insured\n    mapping(address => Insured) public insureds;\n\n    // Physician Number mapped on the related physician object with all data of the physician\n    mapping(address => Physician) public physicians;\n\n    // Function to add a new Insured\n    function addNewInsured(Insured memory insured_)  public{\n        insureds[msg.sender] = Insured(insured_.surname, insured_.name, insured_.street, insured_.street_number, insured_.post_code, insured_.city, insured_.birth_date, insured_.insurance, insured_.insurance_number, insured_.insured_number, insured_.insured_status, false);\n    }\n\n    // From the address of the veryifying_institution every insured can be verified\n    function verifyInsured(address public_key) public returns (bool){\n        require(msg.sender == verifying_institution, \"Only the verify institution has the right to verify insured!\");\n        require(insureds[public_key].insured_number > 0, \"No insured exists under this address!\");\n        insureds[public_key].verified = true;\n    }\n\n    // Function returns true, if insured with the insured_number_ exists\n    function getInsured(address public_key) public view returns(Insured memory){\n        if(insureds[public_key].insured_number > 0){\n            return insureds[public_key];\n        } \n    }\n\n    // Function to add a new Physician\n    function addNewPhysician(Physician memory physician_) public{\n        physicians[msg.sender] = Physician(physician_.job_title, physician_.surname, physician_.name, physician_.physician_number, physician_.street, physician_.street_number, physician_.post_code, physician_.city, physician_.telephone_number, physician_.business_number, false);\n    }\n\n    // From the address of the veryifying_institution every insured can be verified\n    function verifyPhysician(address public_key) public returns (bool){\n        require(msg.sender == verifying_institution, \"Only the verify institution has the right to verify physician!\");\n        require(physicians[public_key].physician_number > 0, \"No physician exists under this address!\");\n        physicians[public_key].verified = true;\n    }\n\n    // Function returns true, if insured with the physician_number_ exists\n    function getPhysician(address public_key) public view returns(Physician memory){\n        if(physicians[public_key].physician_number > 0){\n            return physicians[public_key];\n        } \n    }\n\n    function checkInsuredVerification(address public_key) public view returns (bool){\n        if(insureds[public_key].insured_number > 0 && insureds[public_key].verified == true){\n            return true;\n        } else {\n            return false;\n        }\n    }\n}",
  "sourcePath": "/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/User.sol",
  "ast": {
    "absolutePath": "/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/User.sol",
    "exportedSymbols": {
      "User": [
        329
      ]
    },
    "id": 330,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 54,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "175:32:2"
      },
      {
        "id": 55,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "208:33:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 329,
        "linearizedBaseContracts": [
          329
        ],
        "name": "User",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 57,
            "name": "verifying_institution",
            "nodeType": "VariableDeclaration",
            "scope": 329,
            "src": "263:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 56,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "263:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "328:51:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 60,
                      "name": "verifying_institution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "338:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "362:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "362:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "338:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "338:34:2"
                }
              ]
            },
            "documentation": null,
            "id": 66,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "318:2:2"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "328:0:2"
            },
            "scope": 329,
            "src": "306:73:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "User.Insured",
            "id": 91,
            "members": [
              {
                "constant": false,
                "id": 68,
                "name": "surname",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "494:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 67,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "494:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 70,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "518:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 69,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "518:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 72,
                "name": "street",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "539:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 71,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "539:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 74,
                "name": "street_number",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "562:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 73,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "562:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76,
                "name": "post_code",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "592:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 75,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "592:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78,
                "name": "city",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "616:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 77,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "616:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "name": "birth_date",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "638:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 79,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "638:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 82,
                "name": "insurance",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "666:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 81,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "666:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "name": "insurance_number",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "692:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 83,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "692:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86,
                "name": "insured_number",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "723:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 85,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "723:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 88,
                "name": "insured_status",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "752:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 87,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "752:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 90,
                "name": "verified",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "782:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 89,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "782:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Insured",
            "nodeType": "StructDefinition",
            "scope": 329,
            "src": "469:333:2",
            "visibility": "public"
          },
          {
            "canonicalName": "User.Physician",
            "id": 114,
            "members": [
              {
                "constant": false,
                "id": 93,
                "name": "job_title",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "923:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 92,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "923:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 95,
                "name": "surname",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "949:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 94,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "949:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 97,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "973:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 96,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "973:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 99,
                "name": "physician_number",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "994:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 98,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "994:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 101,
                "name": "street",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "1026:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 100,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1026:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 103,
                "name": "street_number",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "1049:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 102,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1049:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 105,
                "name": "post_code",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "1079:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 104,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1079:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 107,
                "name": "city",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "1103:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 106,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1103:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 109,
                "name": "telephone_number",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "1124:23:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 108,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1124:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 111,
                "name": "business_number",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "1158:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 110,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1158:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 113,
                "name": "verified",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "1189:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 112,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1189:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Physician",
            "nodeType": "StructDefinition",
            "scope": 329,
            "src": "896:313:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 118,
            "name": "insureds",
            "nodeType": "VariableDeclaration",
            "scope": 329,
            "src": "1303:43:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$91_storage_$",
              "typeString": "mapping(address => struct User.Insured)"
            },
            "typeName": {
              "id": 117,
              "keyType": {
                "id": 115,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1311:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1303:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$91_storage_$",
                "typeString": "mapping(address => struct User.Insured)"
              },
              "valueType": {
                "contractScope": null,
                "id": 116,
                "name": "Insured",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 91,
                "src": "1322:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Insured_$91_storage_ptr",
                  "typeString": "struct User.Insured"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 122,
            "name": "physicians",
            "nodeType": "VariableDeclaration",
            "scope": 329,
            "src": "1447:47:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$114_storage_$",
              "typeString": "mapping(address => struct User.Physician)"
            },
            "typeName": {
              "id": 121,
              "keyType": {
                "id": 119,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1455:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1447:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$114_storage_$",
                "typeString": "mapping(address => struct User.Physician)"
              },
              "valueType": {
                "contractScope": null,
                "id": 120,
                "name": "Physician",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 114,
                "src": "1466:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Physician_$114_storage_ptr",
                  "typeString": "struct User.Physician"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "1593:281:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "insureds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "1603:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$91_storage_$",
                          "typeString": "mapping(address => struct User.Insured storage ref)"
                        }
                      },
                      "id": 130,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 128,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "1612:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1612:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1603:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Insured_$91_storage",
                        "typeString": "struct User.Insured storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 132,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1634:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "surname",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 68,
                          "src": "1634:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 134,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1652:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 70,
                          "src": "1652:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 136,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1667:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "street",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 72,
                          "src": "1667:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 138,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1684:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 139,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "street_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74,
                          "src": "1684:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 140,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1708:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "post_code",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 76,
                          "src": "1708:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 142,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1728:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "city",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78,
                          "src": "1728:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 144,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1743:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "birth_date",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 80,
                          "src": "1743:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 146,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1764:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insurance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 82,
                          "src": "1764:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 148,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1784:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insurance_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 84,
                          "src": "1784:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 150,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1811:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insured_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86,
                          "src": "1811:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 152,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1836:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insured_status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 88,
                          "src": "1836:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1861:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 131,
                        "name": "Insured",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "1626:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Insured_$91_storage_ptr_$",
                          "typeString": "type(struct User.Insured storage pointer)"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1626:241:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Insured_$91_memory",
                        "typeString": "struct User.Insured memory"
                      }
                    },
                    "src": "1603:264:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Insured_$91_storage",
                      "typeString": "struct User.Insured storage ref"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "1603:264:2"
                }
              ]
            },
            "documentation": null,
            "id": 159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewInsured",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "name": "insured_",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "1561:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                    "typeString": "struct User.Insured"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 123,
                    "name": "Insured",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 91,
                    "src": "1561:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Insured_$91_storage_ptr",
                      "typeString": "struct User.Insured"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1560:25:2"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1593:0:2"
            },
            "scope": 329,
            "src": "1538:336:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 191,
              "nodeType": "Block",
              "src": "2028:270:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 167,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 344,
                            "src": "2046:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2046:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 169,
                          "name": "verifying_institution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "2060:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2046:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79207468652076657269667920696e737469747574696f6e206861732074686520726967687420746f2076657269667920696e737572656421",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2083:62:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b28323f2b7eff626061b322269fb98cd0ae41ab455088b84484fe122df1b9d6",
                          "typeString": "literal_string \"Only the verify institution has the right to verify insured!\""
                        },
                        "value": "Only the verify institution has the right to verify insured!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b28323f2b7eff626061b322269fb98cd0ae41ab455088b84484fe122df1b9d6",
                          "typeString": "literal_string \"Only the verify institution has the right to verify insured!\""
                        }
                      ],
                      "id": 166,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        347,
                        348
                      ],
                      "referencedDeclaration": 348,
                      "src": "2038:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2038:108:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "2038:108:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 175,
                              "name": "insureds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 118,
                              "src": "2164:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$91_storage_$",
                                "typeString": "mapping(address => struct User.Insured storage ref)"
                              }
                            },
                            "id": 177,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 176,
                              "name": "public_key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "2173:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2164:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_storage",
                              "typeString": "struct User.Insured storage ref"
                            }
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insured_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86,
                          "src": "2164:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2202:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2164:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f20696e73757265642065786973747320756e6465722074686973206164647265737321",
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2205:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa211096b51314ff31b43f708355080861e00e2aa99e82a7bd876298f283c156",
                          "typeString": "literal_string \"No insured exists under this address!\""
                        },
                        "value": "No insured exists under this address!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa211096b51314ff31b43f708355080861e00e2aa99e82a7bd876298f283c156",
                          "typeString": "literal_string \"No insured exists under this address!\""
                        }
                      ],
                      "id": 174,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        347,
                        348
                      ],
                      "referencedDeclaration": 348,
                      "src": "2156:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2156:89:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "2156:89:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 184,
                          "name": "insureds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "2255:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$91_storage_$",
                            "typeString": "mapping(address => struct User.Insured storage ref)"
                          }
                        },
                        "id": 186,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 185,
                          "name": "public_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "2264:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2255:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Insured_$91_storage",
                          "typeString": "struct User.Insured storage ref"
                        }
                      },
                      "id": 187,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "verified",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 90,
                      "src": "2255:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2287:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2255:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "2255:36:2"
                }
              ]
            },
            "documentation": null,
            "id": 192,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyInsured",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1987:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1987:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1986:20:2"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "2023:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2023:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2022:6:2"
            },
            "scope": 329,
            "src": "1964:334:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 211,
              "nodeType": "Block",
              "src": "2452:112:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 199,
                          "name": "insureds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "2465:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$91_storage_$",
                            "typeString": "mapping(address => struct User.Insured storage ref)"
                          }
                        },
                        "id": 201,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 200,
                          "name": "public_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 194,
                          "src": "2474:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2465:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Insured_$91_storage",
                          "typeString": "struct User.Insured storage ref"
                        }
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "insured_number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "2465:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2503:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2465:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 210,
                  "nodeType": "IfStatement",
                  "src": "2462:95:2",
                  "trueBody": {
                    "id": 209,
                    "nodeType": "Block",
                    "src": "2505:52:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 205,
                            "name": "insureds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 118,
                            "src": "2526:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$91_storage_$",
                              "typeString": "mapping(address => struct User.Insured storage ref)"
                            }
                          },
                          "id": 207,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 206,
                            "name": "public_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 194,
                            "src": "2535:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2526:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Insured_$91_storage",
                            "typeString": "struct User.Insured storage ref"
                          }
                        },
                        "functionReturnParameters": 198,
                        "id": 208,
                        "nodeType": "Return",
                        "src": "2519:27:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInsured",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "2397:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2397:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2396:20:2"
            },
            "returnParameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 197,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "2437:14:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                    "typeString": "struct User.Insured"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 196,
                    "name": "Insured",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 91,
                    "src": "2437:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Insured_$91_storage_ptr",
                      "typeString": "struct User.Insured"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2436:16:2"
            },
            "scope": 329,
            "src": "2377:187:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 246,
              "nodeType": "Block",
              "src": "2669:287:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 217,
                        "name": "physicians",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "2679:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$114_storage_$",
                          "typeString": "mapping(address => struct User.Physician storage ref)"
                        }
                      },
                      "id": 220,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 218,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "2690:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2690:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2679:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Physician_$114_storage",
                        "typeString": "struct User.Physician storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 222,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2714:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 223,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "job_title",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 93,
                          "src": "2714:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 224,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2736:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 225,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "surname",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 95,
                          "src": "2736:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 226,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2756:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 97,
                          "src": "2756:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 228,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2773:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 229,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "physician_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 99,
                          "src": "2773:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 230,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2802:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "street",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 101,
                          "src": "2802:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 232,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2821:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "street_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 103,
                          "src": "2821:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 234,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2847:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "post_code",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 105,
                          "src": "2847:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 236,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2869:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "city",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 107,
                          "src": "2869:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 238,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2886:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "telephone_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 109,
                          "src": "2886:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 240,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2915:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "business_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 111,
                          "src": "2915:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2943:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 221,
                        "name": "Physician",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "2704:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Physician_$114_storage_ptr_$",
                          "typeString": "type(struct User.Physician storage pointer)"
                        }
                      },
                      "id": 243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2704:245:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Physician_$114_memory",
                        "typeString": "struct User.Physician memory"
                      }
                    },
                    "src": "2679:270:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Physician_$114_storage",
                      "typeString": "struct User.Physician storage ref"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "2679:270:2"
                }
              ]
            },
            "documentation": null,
            "id": 247,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewPhysician",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "name": "physician_",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "2634:27:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                    "typeString": "struct User.Physician"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 213,
                    "name": "Physician",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 114,
                    "src": "2634:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Physician_$114_storage_ptr",
                      "typeString": "struct User.Physician"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2633:29:2"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2669:0:2"
            },
            "scope": 329,
            "src": "2609:347:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 279,
              "nodeType": "Block",
              "src": "3112:280:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 255,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 344,
                            "src": "3130:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3130:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 257,
                          "name": "verifying_institution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "3144:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3130:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79207468652076657269667920696e737469747574696f6e206861732074686520726967687420746f207665726966792070687973696369616e21",
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3167:64:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5124a821fe938e75080afbed991945cc8cf0a9edaf27edb7a65b6e2115e46237",
                          "typeString": "literal_string \"Only the verify institution has the right to verify physician!\""
                        },
                        "value": "Only the verify institution has the right to verify physician!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5124a821fe938e75080afbed991945cc8cf0a9edaf27edb7a65b6e2115e46237",
                          "typeString": "literal_string \"Only the verify institution has the right to verify physician!\""
                        }
                      ],
                      "id": 254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        347,
                        348
                      ],
                      "referencedDeclaration": 348,
                      "src": "3122:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3122:110:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "3122:110:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 263,
                              "name": "physicians",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 122,
                              "src": "3250:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$114_storage_$",
                                "typeString": "mapping(address => struct User.Physician storage ref)"
                              }
                            },
                            "id": 265,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 264,
                              "name": "public_key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 249,
                              "src": "3261:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3250:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_storage",
                              "typeString": "struct User.Physician storage ref"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "physician_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 99,
                          "src": "3250:39:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3292:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3250:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f2070687973696369616e2065786973747320756e6465722074686973206164647265737321",
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3295:41:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ed217086064b34e54c44d9110ea6ba325df9ce2e2b0c43ff96dfd07cc6e4c38",
                          "typeString": "literal_string \"No physician exists under this address!\""
                        },
                        "value": "No physician exists under this address!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ed217086064b34e54c44d9110ea6ba325df9ce2e2b0c43ff96dfd07cc6e4c38",
                          "typeString": "literal_string \"No physician exists under this address!\""
                        }
                      ],
                      "id": 262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        347,
                        348
                      ],
                      "referencedDeclaration": 348,
                      "src": "3242:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3242:95:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "3242:95:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 272,
                          "name": "physicians",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "3347:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$114_storage_$",
                            "typeString": "mapping(address => struct User.Physician storage ref)"
                          }
                        },
                        "id": 274,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 273,
                          "name": "public_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 249,
                          "src": "3358:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3347:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Physician_$114_storage",
                          "typeString": "struct User.Physician storage ref"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "verified",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 113,
                      "src": "3347:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3381:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3347:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "3347:38:2"
                }
              ]
            },
            "documentation": null,
            "id": 280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyPhysician",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "3071:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3071:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3070:20:2"
            },
            "returnParameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "3107:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3107:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3106:6:2"
            },
            "scope": 329,
            "src": "3046:346:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "3552:118:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 287,
                          "name": "physicians",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "3565:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$114_storage_$",
                            "typeString": "mapping(address => struct User.Physician storage ref)"
                          }
                        },
                        "id": 289,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 288,
                          "name": "public_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "3576:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3565:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Physician_$114_storage",
                          "typeString": "struct User.Physician storage ref"
                        }
                      },
                      "id": 290,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "physician_number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99,
                      "src": "3565:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3607:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3565:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 298,
                  "nodeType": "IfStatement",
                  "src": "3562:101:2",
                  "trueBody": {
                    "id": 297,
                    "nodeType": "Block",
                    "src": "3609:54:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 293,
                            "name": "physicians",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122,
                            "src": "3630:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$114_storage_$",
                              "typeString": "mapping(address => struct User.Physician storage ref)"
                            }
                          },
                          "id": 295,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 294,
                            "name": "public_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "3641:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3630:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Physician_$114_storage",
                            "typeString": "struct User.Physician storage ref"
                          }
                        },
                        "functionReturnParameters": 286,
                        "id": 296,
                        "nodeType": "Return",
                        "src": "3623:29:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 300,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPhysician",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "3495:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3495:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3494:20:2"
            },
            "returnParameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 285,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "3535:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                    "typeString": "struct User.Physician"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 284,
                    "name": "Physician",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 114,
                    "src": "3535:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Physician_$114_storage_ptr",
                      "typeString": "struct User.Physician"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3534:18:2"
            },
            "scope": 329,
            "src": "3473:197:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 327,
              "nodeType": "Block",
              "src": "3756:179:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 307,
                            "name": "insureds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 118,
                            "src": "3769:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$91_storage_$",
                              "typeString": "mapping(address => struct User.Insured storage ref)"
                            }
                          },
                          "id": 309,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 308,
                            "name": "public_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "3778:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3769:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Insured_$91_storage",
                            "typeString": "struct User.Insured storage ref"
                          }
                        },
                        "id": 310,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "insured_number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86,
                        "src": "3769:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3807:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3769:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 313,
                            "name": "insureds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 118,
                            "src": "3812:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$91_storage_$",
                              "typeString": "mapping(address => struct User.Insured storage ref)"
                            }
                          },
                          "id": 315,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 314,
                            "name": "public_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "3821:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3812:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Insured_$91_storage",
                            "typeString": "struct User.Insured storage ref"
                          }
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "verified",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 90,
                        "src": "3812:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3845:4:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "3812:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3769:80:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 325,
                    "nodeType": "Block",
                    "src": "3892:37:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3913:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 306,
                        "id": 324,
                        "nodeType": "Return",
                        "src": "3906:12:2"
                      }
                    ]
                  },
                  "id": 326,
                  "nodeType": "IfStatement",
                  "src": "3766:163:2",
                  "trueBody": {
                    "id": 322,
                    "nodeType": "Block",
                    "src": "3850:36:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3871:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 306,
                        "id": 321,
                        "nodeType": "Return",
                        "src": "3864:11:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 328,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkInsuredVerification",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 328,
                  "src": "3710:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3710:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3709:20:2"
            },
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 328,
                  "src": "3751:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3751:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3750:6:2"
            },
            "scope": 329,
            "src": "3676:259:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 330,
        "src": "243:3694:2"
      }
    ],
    "src": "175:3762:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/valentin/Documents/Programmdaten/Visual_Studio/5_Semester/Integrationsseminar/blockchain_e_prescription/contracts/User.sol",
    "exportedSymbols": {
      "User": [
        329
      ]
    },
    "id": 330,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 54,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "175:32:2"
      },
      {
        "id": 55,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "208:33:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 329,
        "linearizedBaseContracts": [
          329
        ],
        "name": "User",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 57,
            "name": "verifying_institution",
            "nodeType": "VariableDeclaration",
            "scope": 329,
            "src": "263:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 56,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "263:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "328:51:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 60,
                      "name": "verifying_institution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "338:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "362:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "362:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "338:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "338:34:2"
                }
              ]
            },
            "documentation": null,
            "id": 66,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "318:2:2"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "328:0:2"
            },
            "scope": 329,
            "src": "306:73:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "User.Insured",
            "id": 91,
            "members": [
              {
                "constant": false,
                "id": 68,
                "name": "surname",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "494:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 67,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "494:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 70,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "518:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 69,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "518:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 72,
                "name": "street",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "539:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 71,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "539:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 74,
                "name": "street_number",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "562:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 73,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "562:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76,
                "name": "post_code",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "592:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 75,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "592:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78,
                "name": "city",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "616:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 77,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "616:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "name": "birth_date",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "638:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 79,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "638:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 82,
                "name": "insurance",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "666:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 81,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "666:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "name": "insurance_number",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "692:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 83,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "692:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86,
                "name": "insured_number",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "723:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 85,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "723:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 88,
                "name": "insured_status",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "752:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 87,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "752:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 90,
                "name": "verified",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "782:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 89,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "782:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Insured",
            "nodeType": "StructDefinition",
            "scope": 329,
            "src": "469:333:2",
            "visibility": "public"
          },
          {
            "canonicalName": "User.Physician",
            "id": 114,
            "members": [
              {
                "constant": false,
                "id": 93,
                "name": "job_title",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "923:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 92,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "923:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 95,
                "name": "surname",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "949:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 94,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "949:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 97,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "973:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 96,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "973:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 99,
                "name": "physician_number",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "994:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 98,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "994:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 101,
                "name": "street",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "1026:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 100,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1026:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 103,
                "name": "street_number",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "1049:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 102,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1049:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 105,
                "name": "post_code",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "1079:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 104,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1079:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 107,
                "name": "city",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "1103:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 106,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1103:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 109,
                "name": "telephone_number",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "1124:23:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 108,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1124:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 111,
                "name": "business_number",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "1158:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 110,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1158:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 113,
                "name": "verified",
                "nodeType": "VariableDeclaration",
                "scope": 114,
                "src": "1189:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 112,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1189:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Physician",
            "nodeType": "StructDefinition",
            "scope": 329,
            "src": "896:313:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 118,
            "name": "insureds",
            "nodeType": "VariableDeclaration",
            "scope": 329,
            "src": "1303:43:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$91_storage_$",
              "typeString": "mapping(address => struct User.Insured)"
            },
            "typeName": {
              "id": 117,
              "keyType": {
                "id": 115,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1311:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1303:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$91_storage_$",
                "typeString": "mapping(address => struct User.Insured)"
              },
              "valueType": {
                "contractScope": null,
                "id": 116,
                "name": "Insured",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 91,
                "src": "1322:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Insured_$91_storage_ptr",
                  "typeString": "struct User.Insured"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 122,
            "name": "physicians",
            "nodeType": "VariableDeclaration",
            "scope": 329,
            "src": "1447:47:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$114_storage_$",
              "typeString": "mapping(address => struct User.Physician)"
            },
            "typeName": {
              "id": 121,
              "keyType": {
                "id": 119,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1455:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1447:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$114_storage_$",
                "typeString": "mapping(address => struct User.Physician)"
              },
              "valueType": {
                "contractScope": null,
                "id": 120,
                "name": "Physician",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 114,
                "src": "1466:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Physician_$114_storage_ptr",
                  "typeString": "struct User.Physician"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "1593:281:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "insureds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "1603:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$91_storage_$",
                          "typeString": "mapping(address => struct User.Insured storage ref)"
                        }
                      },
                      "id": 130,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 128,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "1612:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1612:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1603:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Insured_$91_storage",
                        "typeString": "struct User.Insured storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 132,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1634:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "surname",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 68,
                          "src": "1634:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 134,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1652:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 70,
                          "src": "1652:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 136,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1667:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "street",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 72,
                          "src": "1667:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 138,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1684:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 139,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "street_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74,
                          "src": "1684:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 140,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1708:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "post_code",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 76,
                          "src": "1708:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 142,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1728:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "city",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78,
                          "src": "1728:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 144,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1743:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "birth_date",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 80,
                          "src": "1743:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 146,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1764:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insurance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 82,
                          "src": "1764:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 148,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1784:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insurance_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 84,
                          "src": "1784:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 150,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1811:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insured_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86,
                          "src": "1811:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 152,
                            "name": "insured_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1836:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                              "typeString": "struct User.Insured memory"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insured_status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 88,
                          "src": "1836:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1861:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 131,
                        "name": "Insured",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "1626:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Insured_$91_storage_ptr_$",
                          "typeString": "type(struct User.Insured storage pointer)"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1626:241:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Insured_$91_memory",
                        "typeString": "struct User.Insured memory"
                      }
                    },
                    "src": "1603:264:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Insured_$91_storage",
                      "typeString": "struct User.Insured storage ref"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "1603:264:2"
                }
              ]
            },
            "documentation": null,
            "id": 159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewInsured",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "name": "insured_",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "1561:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                    "typeString": "struct User.Insured"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 123,
                    "name": "Insured",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 91,
                    "src": "1561:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Insured_$91_storage_ptr",
                      "typeString": "struct User.Insured"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1560:25:2"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1593:0:2"
            },
            "scope": 329,
            "src": "1538:336:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 191,
              "nodeType": "Block",
              "src": "2028:270:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 167,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 344,
                            "src": "2046:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2046:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 169,
                          "name": "verifying_institution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "2060:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2046:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79207468652076657269667920696e737469747574696f6e206861732074686520726967687420746f2076657269667920696e737572656421",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2083:62:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b28323f2b7eff626061b322269fb98cd0ae41ab455088b84484fe122df1b9d6",
                          "typeString": "literal_string \"Only the verify institution has the right to verify insured!\""
                        },
                        "value": "Only the verify institution has the right to verify insured!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b28323f2b7eff626061b322269fb98cd0ae41ab455088b84484fe122df1b9d6",
                          "typeString": "literal_string \"Only the verify institution has the right to verify insured!\""
                        }
                      ],
                      "id": 166,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        347,
                        348
                      ],
                      "referencedDeclaration": 348,
                      "src": "2038:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2038:108:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "2038:108:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 175,
                              "name": "insureds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 118,
                              "src": "2164:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$91_storage_$",
                                "typeString": "mapping(address => struct User.Insured storage ref)"
                              }
                            },
                            "id": 177,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 176,
                              "name": "public_key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "2173:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2164:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Insured_$91_storage",
                              "typeString": "struct User.Insured storage ref"
                            }
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "insured_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86,
                          "src": "2164:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2202:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2164:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f20696e73757265642065786973747320756e6465722074686973206164647265737321",
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2205:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa211096b51314ff31b43f708355080861e00e2aa99e82a7bd876298f283c156",
                          "typeString": "literal_string \"No insured exists under this address!\""
                        },
                        "value": "No insured exists under this address!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa211096b51314ff31b43f708355080861e00e2aa99e82a7bd876298f283c156",
                          "typeString": "literal_string \"No insured exists under this address!\""
                        }
                      ],
                      "id": 174,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        347,
                        348
                      ],
                      "referencedDeclaration": 348,
                      "src": "2156:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2156:89:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "2156:89:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 184,
                          "name": "insureds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "2255:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$91_storage_$",
                            "typeString": "mapping(address => struct User.Insured storage ref)"
                          }
                        },
                        "id": 186,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 185,
                          "name": "public_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "2264:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2255:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Insured_$91_storage",
                          "typeString": "struct User.Insured storage ref"
                        }
                      },
                      "id": 187,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "verified",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 90,
                      "src": "2255:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2287:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2255:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "2255:36:2"
                }
              ]
            },
            "documentation": null,
            "id": 192,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyInsured",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1987:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1987:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1986:20:2"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "2023:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2023:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2022:6:2"
            },
            "scope": 329,
            "src": "1964:334:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 211,
              "nodeType": "Block",
              "src": "2452:112:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 199,
                          "name": "insureds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "2465:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$91_storage_$",
                            "typeString": "mapping(address => struct User.Insured storage ref)"
                          }
                        },
                        "id": 201,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 200,
                          "name": "public_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 194,
                          "src": "2474:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2465:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Insured_$91_storage",
                          "typeString": "struct User.Insured storage ref"
                        }
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "insured_number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "2465:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2503:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2465:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 210,
                  "nodeType": "IfStatement",
                  "src": "2462:95:2",
                  "trueBody": {
                    "id": 209,
                    "nodeType": "Block",
                    "src": "2505:52:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 205,
                            "name": "insureds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 118,
                            "src": "2526:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$91_storage_$",
                              "typeString": "mapping(address => struct User.Insured storage ref)"
                            }
                          },
                          "id": 207,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 206,
                            "name": "public_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 194,
                            "src": "2535:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2526:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Insured_$91_storage",
                            "typeString": "struct User.Insured storage ref"
                          }
                        },
                        "functionReturnParameters": 198,
                        "id": 208,
                        "nodeType": "Return",
                        "src": "2519:27:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInsured",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "2397:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2397:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2396:20:2"
            },
            "returnParameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 197,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "2437:14:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Insured_$91_memory_ptr",
                    "typeString": "struct User.Insured"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 196,
                    "name": "Insured",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 91,
                    "src": "2437:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Insured_$91_storage_ptr",
                      "typeString": "struct User.Insured"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2436:16:2"
            },
            "scope": 329,
            "src": "2377:187:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 246,
              "nodeType": "Block",
              "src": "2669:287:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 217,
                        "name": "physicians",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "2679:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$114_storage_$",
                          "typeString": "mapping(address => struct User.Physician storage ref)"
                        }
                      },
                      "id": 220,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 218,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "2690:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2690:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2679:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Physician_$114_storage",
                        "typeString": "struct User.Physician storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 222,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2714:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 223,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "job_title",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 93,
                          "src": "2714:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 224,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2736:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 225,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "surname",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 95,
                          "src": "2736:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 226,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2756:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 97,
                          "src": "2756:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 228,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2773:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 229,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "physician_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 99,
                          "src": "2773:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 230,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2802:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "street",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 101,
                          "src": "2802:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 232,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2821:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "street_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 103,
                          "src": "2821:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 234,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2847:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "post_code",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 105,
                          "src": "2847:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 236,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2869:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "city",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 107,
                          "src": "2869:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 238,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2886:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "telephone_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 109,
                          "src": "2886:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 240,
                            "name": "physician_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "2915:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                              "typeString": "struct User.Physician memory"
                            }
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "business_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 111,
                          "src": "2915:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2943:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 221,
                        "name": "Physician",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "2704:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Physician_$114_storage_ptr_$",
                          "typeString": "type(struct User.Physician storage pointer)"
                        }
                      },
                      "id": 243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2704:245:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Physician_$114_memory",
                        "typeString": "struct User.Physician memory"
                      }
                    },
                    "src": "2679:270:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Physician_$114_storage",
                      "typeString": "struct User.Physician storage ref"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "2679:270:2"
                }
              ]
            },
            "documentation": null,
            "id": 247,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewPhysician",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "name": "physician_",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "2634:27:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                    "typeString": "struct User.Physician"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 213,
                    "name": "Physician",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 114,
                    "src": "2634:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Physician_$114_storage_ptr",
                      "typeString": "struct User.Physician"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2633:29:2"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2669:0:2"
            },
            "scope": 329,
            "src": "2609:347:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 279,
              "nodeType": "Block",
              "src": "3112:280:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 255,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 344,
                            "src": "3130:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3130:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 257,
                          "name": "verifying_institution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "3144:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3130:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c79207468652076657269667920696e737469747574696f6e206861732074686520726967687420746f207665726966792070687973696369616e21",
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3167:64:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5124a821fe938e75080afbed991945cc8cf0a9edaf27edb7a65b6e2115e46237",
                          "typeString": "literal_string \"Only the verify institution has the right to verify physician!\""
                        },
                        "value": "Only the verify institution has the right to verify physician!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5124a821fe938e75080afbed991945cc8cf0a9edaf27edb7a65b6e2115e46237",
                          "typeString": "literal_string \"Only the verify institution has the right to verify physician!\""
                        }
                      ],
                      "id": 254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        347,
                        348
                      ],
                      "referencedDeclaration": 348,
                      "src": "3122:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3122:110:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "3122:110:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 263,
                              "name": "physicians",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 122,
                              "src": "3250:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$114_storage_$",
                                "typeString": "mapping(address => struct User.Physician storage ref)"
                              }
                            },
                            "id": 265,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 264,
                              "name": "public_key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 249,
                              "src": "3261:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3250:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Physician_$114_storage",
                              "typeString": "struct User.Physician storage ref"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "physician_number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 99,
                          "src": "3250:39:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3292:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3250:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f2070687973696369616e2065786973747320756e6465722074686973206164647265737321",
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3295:41:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ed217086064b34e54c44d9110ea6ba325df9ce2e2b0c43ff96dfd07cc6e4c38",
                          "typeString": "literal_string \"No physician exists under this address!\""
                        },
                        "value": "No physician exists under this address!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ed217086064b34e54c44d9110ea6ba325df9ce2e2b0c43ff96dfd07cc6e4c38",
                          "typeString": "literal_string \"No physician exists under this address!\""
                        }
                      ],
                      "id": 262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        347,
                        348
                      ],
                      "referencedDeclaration": 348,
                      "src": "3242:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3242:95:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "3242:95:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 272,
                          "name": "physicians",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "3347:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$114_storage_$",
                            "typeString": "mapping(address => struct User.Physician storage ref)"
                          }
                        },
                        "id": 274,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 273,
                          "name": "public_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 249,
                          "src": "3358:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3347:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Physician_$114_storage",
                          "typeString": "struct User.Physician storage ref"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "verified",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 113,
                      "src": "3347:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3381:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3347:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "3347:38:2"
                }
              ]
            },
            "documentation": null,
            "id": 280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyPhysician",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "3071:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3071:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3070:20:2"
            },
            "returnParameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "3107:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3107:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3106:6:2"
            },
            "scope": 329,
            "src": "3046:346:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "3552:118:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 287,
                          "name": "physicians",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "3565:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$114_storage_$",
                            "typeString": "mapping(address => struct User.Physician storage ref)"
                          }
                        },
                        "id": 289,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 288,
                          "name": "public_key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "3576:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3565:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Physician_$114_storage",
                          "typeString": "struct User.Physician storage ref"
                        }
                      },
                      "id": 290,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "physician_number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99,
                      "src": "3565:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3607:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3565:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 298,
                  "nodeType": "IfStatement",
                  "src": "3562:101:2",
                  "trueBody": {
                    "id": 297,
                    "nodeType": "Block",
                    "src": "3609:54:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 293,
                            "name": "physicians",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122,
                            "src": "3630:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Physician_$114_storage_$",
                              "typeString": "mapping(address => struct User.Physician storage ref)"
                            }
                          },
                          "id": 295,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 294,
                            "name": "public_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "3641:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3630:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Physician_$114_storage",
                            "typeString": "struct User.Physician storage ref"
                          }
                        },
                        "functionReturnParameters": 286,
                        "id": 296,
                        "nodeType": "Return",
                        "src": "3623:29:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 300,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPhysician",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "3495:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3495:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3494:20:2"
            },
            "returnParameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 285,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "3535:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Physician_$114_memory_ptr",
                    "typeString": "struct User.Physician"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 284,
                    "name": "Physician",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 114,
                    "src": "3535:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Physician_$114_storage_ptr",
                      "typeString": "struct User.Physician"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3534:18:2"
            },
            "scope": 329,
            "src": "3473:197:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 327,
              "nodeType": "Block",
              "src": "3756:179:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 307,
                            "name": "insureds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 118,
                            "src": "3769:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$91_storage_$",
                              "typeString": "mapping(address => struct User.Insured storage ref)"
                            }
                          },
                          "id": 309,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 308,
                            "name": "public_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "3778:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3769:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Insured_$91_storage",
                            "typeString": "struct User.Insured storage ref"
                          }
                        },
                        "id": 310,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "insured_number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86,
                        "src": "3769:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3807:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3769:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 313,
                            "name": "insureds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 118,
                            "src": "3812:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Insured_$91_storage_$",
                              "typeString": "mapping(address => struct User.Insured storage ref)"
                            }
                          },
                          "id": 315,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 314,
                            "name": "public_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "3821:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3812:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Insured_$91_storage",
                            "typeString": "struct User.Insured storage ref"
                          }
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "verified",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 90,
                        "src": "3812:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3845:4:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "3812:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3769:80:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 325,
                    "nodeType": "Block",
                    "src": "3892:37:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3913:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 306,
                        "id": 324,
                        "nodeType": "Return",
                        "src": "3906:12:2"
                      }
                    ]
                  },
                  "id": 326,
                  "nodeType": "IfStatement",
                  "src": "3766:163:2",
                  "trueBody": {
                    "id": 322,
                    "nodeType": "Block",
                    "src": "3850:36:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3871:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 306,
                        "id": 321,
                        "nodeType": "Return",
                        "src": "3864:11:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 328,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkInsuredVerification",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "name": "public_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 328,
                  "src": "3710:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3710:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3709:20:2"
            },
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 328,
                  "src": "3751:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3751:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3750:6:2"
            },
            "scope": 329,
            "src": "3676:259:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 330,
        "src": "243:3694:2"
      }
    ],
    "src": "175:3762:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xF60AB1A0eE4b7785961618B23173E4de0896027F",
      "transactionHash": "0xaac85fc20baa04e5d17988b60a7b793f5bdbf7e8894e44941c922de9388cea97"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-27T11:08:00.830Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}